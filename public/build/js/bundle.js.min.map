{"version":3,"sources":["categorias/categorias.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","mercado/infoVenta.js","mercado/mercadolibre.js","cajas/cajas.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","clientes/clientes.js","inicio/index.js","proveedores/proveedores.js","transacciones/egresos.js","transacciones/ingresos.js","usuarios/login.js","usuarios/usuario.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js"],"names":["document","querySelector","tablaCategorias","id","btnRegistrarCategoria","formulario","categoria","accionesModal","reset","btnSubmit","disabled","$","modal","inicializarValidador","async","respuesta","fetch","resultado","value","llenarFormulario","json","error","console","log","consultarCategoria","eliminarToastAnterior","remove","validator","setDefaults","submitHandler","datos","FormData","append","trim","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","validate","rules","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","addEventListener","e","target","toUpperCase","on","currentTarget","dataset","categoriaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCategoria","alertaEliminarCategoria","event","selectClientes","opcionDisabled","createElement","appendChild","forEach","cliente","opcion","nombre","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","isNaN","parseFloat","toLocaleString","consultarInfoCliente","limpiarHtml","fiados","length","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","valor","deudaSinFormat","replace","monto_ingresado","valor_sin_formato","formatearValor","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","total_factura","metodo_pago","contains","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","consultarCaja","efectivo_apertura","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","tablaClientes","btnRegistrarCliente","cedula","celular","direccion","email","consultarCliente","minlength","digits","rangelength","clienteId","eliminarCliente","alertaEliminarCliente","ingresos","ganancias","costos","inventario","ingresos_reales","ganancias_reales","dinero_fiados","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","dinero_mercado_libre","dinero_pendiente_mercado_libre","mostrarInfo","cargarInformacion","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","dataType","success","req","resposeText","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","JSON","stringify","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","fecha_actual_utc","Date","fecha_actual_formateada","getTime","toISOString","slice","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n      \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio: '',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n\r\n\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"2\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-3');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-1');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n\r\n                inputPrecioLibre.oninput = () => {\r\n\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto => {\r\n                        total_libre = total_libre + producto.precio * producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value = total_libre.toLocaleString('en');\r\n                }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio: parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n        \r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n        \r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n    \r\n            revisarPagosAsociados(id);\r\n\r\n      \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n    \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n      \r\n                 const resultado = await respuesta.json();\r\n          \r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}