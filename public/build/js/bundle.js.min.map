{"version":3,"sources":["categorias/categorias.js","cajas/cajas.js","mercado/infoVenta.js","mercado/mercadolibre.js","clientes/clientes.js","inicio/index.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","transacciones/egresos.js","transacciones/ingresos.js","proveedores/proveedores.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","usuarios/login.js","usuarios/usuario.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js"],"names":["document","querySelector","tablaCategorias","id","btnRegistrarCategoria","formulario","categoria","accionesModal","reset","btnSubmit","disabled","$","modal","inicializarValidador","async","respuesta","fetch","resultado","value","llenarFormulario","json","error","console","log","consultarCategoria","eliminarToastAnterior","remove","validator","setDefaults","submitHandler","datos","FormData","append","trim","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","validate","rules","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","addEventListener","e","target","toUpperCase","on","currentTarget","dataset","categoriaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCategoria","alertaEliminarCategoria","event","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","parseFloat","toLocaleString","consultarCaja","efectivo_apertura","valor","valor_sin_formato","replace","isNaN","formatearValor","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","productos_venta","venta","codigoVenta","clienteVenta","fechaVenta","totalVenta","totalVentaSinComision","recaudoVenta","saldoVenta","metodoVenta","estadoVenta","codigo","nombre_cliente","fecha","total_factura","total","recaudo","metodo_pago","classList","contains","estado","add","bodyProductos","referencia","firstChild","removeChild","limpiarHtml","forEach","producto","nombre","cantidad","precio","tr","createElement","tdNombre","tdCantidad","tdPrecio","tdSubTotal","appendChild","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","tablaClientes","btnRegistrarCliente","cedula","celular","direccion","email","consultarCliente","minlength","digits","rangelength","clienteId","cliente","eliminarCliente","alertaEliminarCliente","ingresos","ganancias","costos","inventario","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","mostrarInfo","cargarInformacion","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","opcion","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","select2","theme","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","dataType","success","req","resposeText","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","selectClientes","opcionDisabled","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","consultarInfoCliente","fiados","length","text","pagos_cuotas","total_deuda","fiado","venta_id","push","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","eliminarPago","alertaEliminarPago","deudaSinFormat","monto_ingresado","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","JSON","stringify","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","ingresos_totales","total_inventario","fecha_actual_utc","Date","fecha_actual_formateada","getTime","toISOString","slice","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta"],"mappings":"CAAA,WAEA,GADAA,SAAAC,cAAA,eACA,CACA,IAAAC,EACAC,EAAA,KAGA,MAAAC,EAAAJ,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,kBACAK,EAAAN,SAAAC,cAAA,cAgIA,SAAAM,IACAF,EAAAG,QACAC,UAAAC,UAAA,EACAC,EAAA,oBAAAC,MAAA,QACAC,IACAV,GAKAW,iBACA,IACA,MAAAC,QAAAC,MAAA,qBAAAb,IASA,SAAAc,GAEAX,EAAAY,MAAAD,EAAAX,UAPAa,OAHAJ,EAAAK,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAZAG,GAgFA,SAAAC,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIA,SAAAb,IACAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YAlEAf,iBACA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAEA2B,EAAAE,OAAA,YAAA1B,EAAA,MAAA2B,QAGAxB,UAAAC,UAAA,EACA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,wBAEAD,SAAAC,OAAA,uBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAGAK,IACAhB,UAAAC,UAAA,EACA,SAAAO,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGAzC,EAAA0C,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEApB,EAAAG,QAGAG,EAAA,oBAAAC,MAAA,SAIA,MAAAS,KAaA0B,MAKApC,EAAA,kBAAAqC,SAAA,CACAC,MAAA,CACA3C,UAAA,CACA4C,UAAA,IAGAC,SAAA,CACA7C,UAAA,CACA4C,SAAA,6CAGAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBAtJAlD,EAAA,UAAAmD,YAAAC,YAEA7D,EAAAS,EAAA,UAAAqD,UAAA,CACApB,KAAA,kBACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACAC,aAAA,WAEA,IAAA1D,EAAA2D,GAAAR,UAAAS,QAAArE,EAAA,CACAsE,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,WACAC,YAAAC,SAAA,qCAzGApE,EAAAqE,iBAAA,SAAA,SAAAC,GACAtE,EAAAY,MAAA0D,EAAAC,OAAA,MAAAC,iBAGA1E,EAAAuE,iBAAA,SAAA,WACAxE,EAAA,KACAI,OAIAI,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GACAzE,EAAAyE,EAAAI,cAAAC,QAAAC,YACA3E,OAEAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IAQA,SAAAzE,EAAAyE,GAEA,MAAAtE,EAAAsE,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAEAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,qFAAAnF,6DAEAoF,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAEA+B,IAAAC,SAAAC,OAAA,0BACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAGAvB,EAAA0C,KAAAC,UAEA,MAAAxB,GACAV,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAA,2EAGAS,WAAA,KACArB,KACA,MAnDAuE,CAAA7F,KArBA8F,CADArB,EAAAI,cAAAC,QAAAC,YACAN,MAuOAjE,EAAA,kBAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAtQA,GCAA,WAEA,GADAb,SAAAC,cAAA,UACA,CAEA,MAAAkG,EAAAnG,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,aACAQ,EAAAT,SAAAC,cAAA,cAEA,IAAAmG,EAEAjG,EACA,MAAAkG,EAAArG,SAAAC,cAAA,sBAyQA,SAAAwB,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIAZ,eAAAP,IACAF,EAAAG,QACAC,EAAAC,UAAA,EACAC,EAAA,eAAAC,MAAA,QACAD,EAAA,aAAAqC,WAAAsD,YAEA3F,EAAA,aAAAqC,WAAAuD,UAEA5F,EAAA,aAAA6F,KAAA,eAAA3C,YAAA,cACA1D,GAYAW,iBAEA,IACA,MAAAC,QAAAC,MAAA,gBAAAb,IAUA,SAAAc,GAGAoF,EAAAnF,MAAAuF,WAAAxF,GAAAyF,eAAA,MATAvF,OAHAJ,EAAAK,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IApBAsF,GAMA9F,IAwBA,SAAAA,IAEAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YAhHAf,iBAEA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAEA2B,EAAAE,OAAA,oBAAAqE,EAAAnF,OAGAT,EAAAC,UAAA,EAEA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,mBAEAD,SAAAC,OAAA,kBAIA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAGAK,IAEAhB,EAAAC,UAAA,EACA,SAAAO,EAAAsB,MACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAEAhC,EAAA,eAAAC,MAAA,UAEAwF,EAAAxD,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAKAtC,EAAAG,QAEAG,EAAA,eAAAC,MAAA,SAGAkC,WAAA,KACArB,KACA,KAEA,MAAAJ,KAsDA0B,MAMApC,EAAA,aAAAqC,SAAA,CACAC,MAAA,CACA2D,kBAAA,CACA1D,UAAA,IAIAC,SAAA,CACAyD,kBAAA,CACA1D,SAAA,8EAKAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBAyBA,SAAApC,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAjXA2E,EAAA1B,iBAAA,SAAA,SAAAC,GACAyB,EAAAnF,MAqWA,SAAA2F,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MA3WAO,CAAArC,EAAAC,OAAA3D,UA0JAP,EAAA,UAAAmD,YAAAC,YAEAqC,EAAAzF,EAAA,UAAAqD,UAAA,CACAkD,SAAA,CACAC,QAAA,GACAC,WAAA,qBACAC,KAAA,gDACAC,UAAA,iCACAC,aAAA,qCACAC,YAAA,GACAC,UAAA,IACAC,WAAA,0BACAC,eAAA,cACAC,WAAA,gBACAC,OAAA,UACAC,YAAA,6BACAC,SAAA,CACAC,MAAA,UACAC,KAAA,SACAC,KAAA,YACAC,SAAA,aAGAvF,KAAA,aACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,IA/KA+B,EAAAxB,iBAAA,SAAA,WACAxE,EAAA,KAEAI,OAGAI,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GAEAzE,EAAAyE,EAAAI,cAAAC,QAAAmD,OAEA7H,OAIAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IASA,SAAAzE,EAAAyE,GAEA,MAAAgC,EAAAhC,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAGAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,6HAAAmB,6DAEAlB,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aA+DAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAGA+B,IAAAC,SAAAC,OAAA,qBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAMAyD,EAAAxD,KAAAC,UAEAC,WAAA,KACArB,KACA,KACA,MAAAJ,KArGAgH,CAAAlI,KAvBAmI,CADA1D,EAAAI,cAAAC,QAAAmD,OACAxD,MAEAjE,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,IAyBA,SAAAzE,EAAAyE,GAEAU,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,kGAEAC,kBAAA,EACAC,kBAAA,SACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKAjF,eAAAX,GAEA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAGA+B,IAAAC,SAAAC,OAAA,mBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAyD,EAAAxD,KAAAC,UAEAC,WAAA,KACArB,KACA,KACA,MAAAJ,KAzCAkH,CAAApI,KApCAqI,CADA5D,EAAAI,cAAAC,QAAAmD,WAgUAzH,EAAA,aAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAxWA,GCAA,WAEA,GADAb,SAAAC,cAAA,iBACA,CAEAU,EAAA,UAAAoE,GAAA,QAAA,SAAA,SAAAH,IAKA9D,eAAAX,GACAQ,EAAA,eAAAC,MAAA,QAEA,MAAAsB,EAAA,GAAAC,SAAAC,uBAAAjC,IACA,IACA,MAAAY,QAAAC,MAAAkB,IAWA,SAAAjB,GACA,MAAAwH,gBAAAA,EAAAC,MAAAA,GAAAzH,EAEA0H,EAAA3I,SAAAC,cAAA,iBACA2I,EAAA5I,SAAAC,cAAA,kBACA4I,EAAA7I,SAAAC,cAAA,gBAEA6I,EAAA9I,SAAAC,cAAA,gBACA8I,EAAA/I,SAAAC,cAAA,uBACA+I,EAAAhJ,SAAAC,cAAA,kBACAgJ,EAAAjJ,SAAAC,cAAA,gBACAiJ,EAAAlJ,SAAAC,cAAA,iBACAkJ,EAAAnJ,SAAAC,cAAA,iBAEA0I,EAAAtD,YAAAqD,EAAAU,OACAR,EAAAvD,YAAAqD,EAAAW,eACAR,EAAAxD,YAAAqD,EAAAY,MACAR,EAAAzD,YAAAoB,WAAAiC,EAAAa,eAAA7C,eAAA,MACAqC,EAAA1D,YAAAoB,WAAAiC,EAAAc,OAAA9C,eAAA,MACAsC,EAAA3D,YAAAoB,WAAAiC,EAAAe,SAAA/C,eAAA,MACAuC,EAAA5D,YAAAoB,WAAAiC,EAAAa,cAAAb,EAAAe,SAAA/C,eAAA,MAGA,GAAAgC,EAAAgB,cACAR,EAAA7D,YAAA,SAEA,GAAAqD,EAAAgB,cACAR,EAAA7D,YAAA,iBAEA,GAAAqD,EAAAgB,cACAR,EAAA7D,YAAA,cAEA8D,EAAAQ,UAAAC,SAAA,gBACAT,EAAAQ,UAAAjI,OAAA,eAEAyH,EAAAQ,UAAAC,SAAA,iBACAT,EAAAQ,UAAAjI,OAAA,gBAEA,GAAAgH,EAAAmB,QACAV,EAAA9D,YAAA,YACA8D,EAAAQ,UAAAG,IAAA,iBAEAX,EAAA9D,YAAA,SACA8D,EAAAQ,UAAAG,IAAA,iBAIA,MAAAC,EAAA/J,SAAAC,cAAA,0BA4BA,SAAA+J,GAEA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,aA9BAE,CAAAJ,GAKAtB,EAAA2B,QAAAC,IACA,MAAAC,OAAAA,EAAAC,SAAAA,EAAAC,OAAAA,GAAAH,EACAI,EAAAzK,SAAA0K,cAAA,MACAC,EAAA3K,SAAA0K,cAAA,MACAC,EAAAtF,YAAAiF,EACA,MAAAM,EAAA5K,SAAA0K,cAAA,MACAE,EAAAvF,YAAAkF,EACA,MAAAM,EAAA7K,SAAA0K,cAAA,MACAG,EAAAxF,YAAAoB,WAAA+D,GAAA9D,eAAA,MACA,MAAAoE,EAAA9K,SAAA0K,cAAA,MACAI,EAAAzF,YAAAoB,WAAA+D,EAAAD,GAAA7D,eAAA,MAGA+D,EAAAM,YAAAJ,GACAF,EAAAM,YAAAH,GACAH,EAAAM,YAAAF,GACAJ,EAAAM,YAAAD,GAEAf,EAAAgB,YAAAN,KAhFAO,OADAjK,EAAAK,QAEA,MAAAC,KAVA4J,CAFArG,EAAAI,cAAAC,QAAAiG,aALA,GCAA,WAEA,GADAlL,SAAAC,cAAA,iBACA,CAEA,IAAAkL,GAKArK,iBAEA,UACAE,MAAAmB,SAAAC,OAAA,mBAIA,MAAAf,KAVA+J,GAkBAzK,EAAA,UAAAmD,YAAAC,YAEAoH,EAAAxK,EAAA,UAAAqD,UAAA,CACApB,KAAA,oBACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACAC,aAAA,WAEA,IAAA1D,EAAA2D,GAAAR,UAAAS,QAAA4G,EAAA,CACA3G,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,WACAC,YAAAC,SAAA,sCApCA,GCAA,WAEA,GADA1E,SAAAC,cAAA,aACA,CACA,IAAAoL,EACAlL,EAAA,KACA,MAAAmL,EAAAtL,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,gBACAqK,EAAAtK,SAAAC,cAAA,WACAsL,EAAAvL,SAAAC,cAAA,WACAuL,EAAAxL,SAAAC,cAAA,YACAwL,EAAAzL,SAAAC,cAAA,cACAyL,EAAA1L,SAAAC,cAAA,UA+GA,SAAAM,IACAF,EAAAG,QACAC,UAAAC,UAAA,EACAC,EAAA,kBAAAC,MAAA,QACAC,IACAV,GAKAW,iBACA,IACA,MAAAC,QAAAC,MAAA,mBAAAb,IASA,SAAAc,GAEAqJ,EAAApJ,MAAAD,EAAAqJ,OACAiB,EAAArK,MAAAD,EAAAsK,OACAC,EAAAtK,MAAAD,EAAAuK,QACAC,EAAAvK,MAAAD,EAAAwK,UACAC,EAAAxK,MAAAD,EAAAyK,MAXAvK,OAHAJ,EAAAK,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAZAsK,GAyFA,SAAAlK,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIA,SAAAb,IACAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YAvEAf,iBACA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAEA2B,EAAAE,OAAA,SAAAsI,EAAA,MAAArI,QACAH,EAAAE,OAAA,SAAAuJ,EAAA,OACAzJ,EAAAE,OAAA,UAAAwJ,EAAA,OACA1J,EAAAE,OAAA,YAAAyJ,EAAA,MAAAxJ,QACAH,EAAAE,OAAA,QAAA0J,EAAA,MAAAzJ,QAGAxB,UAAAC,UAAA,EAGA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,sBAEAD,SAAAC,OAAA,qBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAGAK,IACAhB,UAAAC,UAAA,EACA,SAAAO,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGA0I,EAAAzI,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEApB,EAAAG,QAEAG,EAAA,kBAAAC,MAAA,SAIA,MAAAS,KAaA0B,MAKApC,EAAA,gBAAAqC,SAAA,CACAC,MAAA,CACAqH,OAAA,CACApH,UAAA,EACA0I,UAAA,GAEAL,OAAA,CAEAM,QAAA,EACAD,UAAA,GAEAJ,QAAA,CAEAK,QAAA,EACAC,YAAA,CAAA,GAAA,KAEAJ,MAAA,CACAA,OAAA,IAIAvI,SAAA,CACAmH,OAAA,CACApH,SAAA,2BACA0I,UAAA,oCAEAL,OAAA,CAEAM,OAAA,yBACAD,UAAA,iCAEAJ,QAAA,CAEAK,OAAA,yBACAC,YAAA,4BAGAJ,MAAA,CACAA,MAAA,0BAGAtI,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBA7LAlD,EAAA,UAAAmD,YAAAC,YAEAsH,EAAA1K,EAAA,UAAAqD,UAAA,CACApB,KAAA,gBACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACAC,aAAA,WAEA,IAAA1D,EAAA2D,GAAAR,UAAAS,QAAA8G,EAAA,CACA7G,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,WACAC,YAAAC,SAAA,qCAzFA4G,EAAA3G,iBAAA,SAAA,WACAxE,EAAA,KACAI,OAGAI,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GACAzE,EAAAyE,EAAAI,cAAAC,QAAA8G,UACAxL,OAEAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IAMA,SAAAzE,EAAAyE,GAEA,MAAAoH,EAAApH,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAEAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,mFAAAuG,6DAEAtG,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAEA+B,IAAAC,SAAAC,OAAA,wBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAGA4J,EAAAzI,KAAAC,UAEA,MAAAxB,GACAC,QAAAC,IAAAF,IA1CA4K,CAAA9L,KAnBA+L,CADAtH,EAAAI,cAAAC,QAAA8G,UACAnH,MAmQAjE,EAAA,gBAAAoE,GAAA,SAAA,SAAAmB,GACArF,QA9RA,GCAA,WAEA,GADAb,SAAAC,cAAA,WACA,CACA,MAAAkM,EAAAnM,SAAAC,cAAA,oBACAmM,EAAApM,SAAAC,cAAA,qBACAoM,EAAArM,SAAAC,cAAA,kBACAqM,EAAAtM,SAAAC,cAAA,sBAIAsM,EAAAvM,SAAAC,cAAA,yBACAuM,EAAAxM,SAAAC,cAAA,yBACAwM,EAAAzM,SAAAC,cAAA,wBACAyM,EAAA1M,SAAAC,cAAA,wBACA0M,EAAA3M,SAAAC,cAAA,4BACA2M,EAAA5M,SAAAC,cAAA,4BA2BAa,iBACA,MAAAoB,EAAAC,SAAAC,OAAA,cACA,IACA,MAAArB,QAAAC,MAAAkB,IAvBA,SAAAjB,GAEAkL,EAAA9G,YAAApE,EAAAkL,SACAC,EAAA/G,YAAApE,EAAAmL,UACAC,EAAAhH,YAAApE,EAAAoL,OACAC,EAAAjH,YAAApE,EAAAqL,WAIAC,EAAAlH,YAAApE,EAAAsL,cACAC,EAAAnH,YAAApE,EAAAuL,cACAC,EAAApH,YAAApE,EAAAwL,aACAC,EAAArH,YAAApE,EAAAyL,aACAC,EAAAtH,YAAApE,EAAA0L,iBACAC,EAAAvH,YAAApE,EAAA2L,gBAWAC,OADA9L,EAAAK,QAEA,MAAAC,GACAC,QAAAC,IAAAF,IA7BAyL,IApBA,GCAA,WAEA,GADA9M,SAAAC,cAAA,YACA,CACA,MAAA8M,EAAA/M,SAAAC,cAAA,cACA+M,EAAAhN,SAAAC,cAAA,oBACAgN,EAAAjN,SAAAC,cAAA,gBACAiN,EAAAlN,SAAAC,cAAA,yBACAkN,EAAAnN,SAAAC,cAAA,mBACAmN,EAAApN,SAAAC,cAAA,wBACAoN,EAAArN,SAAAC,cAAA,sBA6DA,SAAAqN,IACAF,EAAAlM,MAAA,GAEA,MAAAqM,EAAA9G,WAAAyG,EAAA,MAAAnG,QAAA,KAAA,KACAyG,EAAA/G,WAAA0G,EAAAjM,OACA,GAAA8F,MAAAuG,IAAAvG,MAAAwG,GACA,OAEA,MAAAC,EAAAF,EAAAC,EACAJ,EAAAlM,MAAAwM,KAAAC,MAAAF,GAAA/G,eAAA,MAGA,SAAAO,EAAAJ,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MA4DA,SAAAkH,EAAAzN,GACAQ,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YA3DAf,iBACA,MAAAgB,EAAA,IAAAC,SAEAD,EAAAE,OAAA,KAAA6L,2BACA/L,EAAAE,OAAA,QAAAiL,EAAA,OACAnL,EAAAE,OAAA,gBAAAoL,EAAA,OAEAC,EAAA3M,UAAA,EAEA,MAAAwB,EAAAC,SAAAC,OAAA,6BAIA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAGAK,IAEA4L,EAAA3M,UAAA,EAEA,SAAAO,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAA,UAAAqD,YAAApB,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEAsL,EAAAvM,QAEAG,EAAA,gBAAAC,MAAA,SAIA,MAAAS,KAOAyM,MAKAnN,EAAA,cAAAqC,SAAA,CACAC,MAAA,CAGAgK,YAAA,CACA/J,UAAA,GAGAkK,oBAAA,CACAlK,UAAA,IAGAC,SAAA,CACA8J,YAAA,CACA/J,SAAA,4BAEAkK,oBAAA,CACAlK,SAAA,+CAIAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBAOA,SAAApC,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAhJAf,EAAA,UAAAmD,YAAAC,YAEAgK,aAAApN,EAAA,UAAAqD,UAAA,CACApB,KAAA,eACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACAC,aAAA,WAEA,IAAA1D,EAAA2D,GAAAR,UAAAS,QAAAwJ,aAAA,CACAvJ,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,QAAA,YACAC,YAAAC,SAAA,qCAnDA/D,EAAA,UAAAoE,GAAA,QAAA,kBAAA,SAAAH,GAEAiJ,0BAAAjJ,EAAAI,cAAAC,QAAA+I,WACAjB,EAAAvM,QACA6M,EAAA3M,UAAA,EACAC,EAAA,gBAAAC,MAAA,QACAD,EAAA,cAAAqC,WAAAsD,YAEA3F,EAAA,cAAAqC,WAAAuD,UAEA5F,EAAA,cAAA6F,KAAA,eAAA3C,YAAA,cAGA,MAAAyG,EAAA1F,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YACA2H,EAAA9L,MAAAoJ,EACAsD,OAGAV,EAAAvI,iBAAA,SAAA,SAAAC,GACA,MAAA2I,EAAAtG,EAAArC,EAAAC,OAAA3D,OACAgM,EAAAhM,MAAAqM,EACAD,OAEAH,EAAAxI,iBAAA,SAAA,SAAAC,GAEA0I,OAGAF,EAAAzI,iBAAA,SAAA,SAAAC,GACA,MAAA6I,EAAAxG,EAAArC,EAAAC,OAAA3D,OACAkM,EAAAlM,MAAAuM,KAoJA9M,EAAA,cAAAoE,GAAA,SAAA,SAAAmB,GACA0H,QA/LA,GCAA,WAEA,GADA5N,SAAAC,cAAA,cACA,CACA,MAAAgO,EAAAjO,SAAAC,cAAA,kBACAiO,EAAAlO,SAAAC,cAAA,iBACAkO,EAAAnO,SAAAC,cAAA,qBACAmO,EAAApO,SAAAC,cAAA,mBACAoO,EAAArO,SAAAC,cAAA,aA2BA,SAAAqO,IACAL,EAAA/M,MAAA,GACAgN,EAAAhN,MAAA,GACAiN,EAAAjN,MAAA,GACA,MAAAqM,EAAA9G,WAAA2H,EAAA,MAAArH,QAAA,KAAA,KACAyG,EAAA/G,WAAA4H,EAAAnN,OACA,GAAA8F,MAAAuG,IAAAvG,MAAAwG,GACA,OAEA,MAAAC,EAAAF,EAAAC,EACAS,EAAA/M,MAAAwM,KAAAC,MAAAF,GAAA/G,eAAA,MAiBA,SAAA6H,IAEA,MAAAd,EAAAhH,WAAAwH,EAAA,MAAAlH,QAAA,KAAA,KACAyH,EAAA/H,WAAAyH,EAAA,MAAAnH,QAAA,KAAA,KACA,GAAAC,MAAAyG,IAAAzG,MAAAwH,GACA,OAEA,MAAAC,EAAA,IAAAD,EAAAf,EACAU,EAAAjN,MAAAuN,EAAAC,QAAA,GAGA,SAAAzH,EAAAJ,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MAtEAuH,EAAAtJ,iBAAA,SAAA,SAAAC,GACA,MAAA6I,EAAAxG,EAAArC,EAAAC,OAAA3D,OACA+M,EAAA/M,MAAAuM,EACAc,OAEAL,EAAAvJ,iBAAA,SAAA,SAAAC,GACA,MAAA6I,EAAAxG,EAAArC,EAAAC,OAAA3D,OACAgN,EAAAhN,MAAAuM,EACAc,OAGAJ,EAAAxJ,iBAAA,SAAA,SAAAC,IAgCA,SAAA6J,GACA,MAAAhB,EAAAhH,WAAAwH,EAAA,MAAAlH,QAAA,KAAA,KAEA,GAAAC,MAAAyG,GACA,OAEA,MAAAe,EAAA/H,WAAAgI,GAAAhB,EAAA,IACAS,EAAAhN,OAAA,IAAAwM,KAAAC,MAAAa,EAAA,MAAA9H,eAAA,MAtCAiI,CAAA/J,EAAAC,OAAA3D,UAIAkN,EAAAzJ,iBAAA,SAAA,SAAAC,GACA,MAAA2I,EAAAtG,EAAArC,EAAAC,OAAA3D,OACAkN,EAAAlN,MAAAqM,EACAe,OAEAD,EAAA1J,iBAAA,SAAA,SAAAC,GAEA0J,QA/BA,GCAA,WAEA,GADAtO,SAAAC,cAAA,cACA,CACA,MAAA2O,EAAA5O,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,iBACA4O,EAAA7O,SAAAC,cAAA,iBACA6O,EAAA9O,SAAAC,cAAA,iBACA,IAGA8O,EAEA5O,EAJA6O,EAAA,KACAC,EAAA,KAIA,MAAA3E,EAAAtK,SAAAC,cAAA,WACAmJ,EAAApJ,SAAAC,cAAA,WACAiP,EAAAlP,SAAAC,cAAA,iBACAkP,EAAAnP,SAAAC,cAAA,iBACAmP,EAAApP,SAAAC,cAAA,UACAoP,EAAArP,SAAAC,cAAA,iBACAwN,EAAAzN,SAAAC,cAAA,kBACAuO,EAAAxO,SAAAC,cAAA,iBACAkO,EAAAnO,SAAAC,cAAA,qBAEAQ,EAAAT,SAAAC,cAAA,cA2IAa,eAAAwO,IAEA,IACA,MAAAvO,QAAAC,MAFA,8BAsBA,SAAAuO,GACApF,EAAA0E,GAUAU,EAAAnF,QAAA9J,IAEA,MAAAkP,EAAAxP,SAAA0K,cAAA,UACA8E,EAAAtO,MAAAZ,EAAAH,GACAqP,EAAAnK,YAAA/E,EAAAA,UACAA,EAAAH,IAAA6O,IAEAQ,EAAAC,UAAA,GAIAZ,EAAA9D,YAAAyE,KAxCAE,OADA3O,EAAAK,QAEA,MAAAC,KAKAP,eAAA6O,IAEA,IACA,MAAA5O,QAAAC,MAFA,+BA2CA,SAAA4O,GACAzF,EAAA2E,GAUAc,EAAAxF,QAAAyF,IAEA,MAAAL,EAAAxP,SAAA0K,cAAA,UACA8E,EAAAtO,MAAA2O,EAAA1P,GACAqP,EAAAnK,YAAAwK,EAAAvF,OACAuF,EAAA1P,IAAA8O,IAEAO,EAAAC,UAAA,GAEAX,EAAA/D,YAAAyE,KAGA7O,EAAA,oBAAAmP,UACAnP,EAAA,oBAAAmP,UACAnP,EAAA,eAAAmP,QAAA,CACAC,MAAA,eAhEAC,OAFAjP,EAAAK,QAGA,MAAAC,KAsIA,SAAAI,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIAZ,eAAAP,IACAF,EAAAG,QACAC,EAAAC,UAAA,EACAC,EAAA,mBAAAC,MAAA,QACAD,EAAA,iBAAAqC,WAAAsD,YAEA3F,EAAA,iBAAAqC,WAAAuD,UAEA5F,EAAA,iBAAA6F,KAAA,eAAA3C,YAAA,cACA1D,GAYAW,iBACA,IACA,MAAAC,QAAAC,MAAA,oBAAAb,IAUA,SAAAc,GACA+N,EAAA/N,EAAAiO,aACAD,EAAAhO,EAAAkO,aACA7E,EAAApJ,MAAAD,EAAA,OAAA6D,cACAsE,EAAAlI,MAAAD,EAAAmI,OACAgG,EAAAlO,MAAAD,EAAAmO,MACAC,EAAAnO,MAAAD,EAAAoO,aACA5B,EAAAvM,MAAAuF,WAAAxF,EAAAwM,eAAA/G,eAAA,MACA8H,EAAAtN,MAAAuF,WAAAxF,EAAAuN,cAAA9H,eAAA,MACAyH,EAAAjN,MAAAD,EAAAkN,iBAfAhN,OAHAJ,EAAAK,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAnBA4O,SAGAX,UACAK,IAEA9O,IA6BA,SAAAA,IACAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YAtHAf,iBAEA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAEA2B,EAAAE,OAAA,SAAAsI,EAAA,MAAArI,QACAH,EAAAE,OAAA,SAAAoH,EAAA,MAAAnH,QACAH,EAAAE,OAAA,eAAAkN,EAAA,OACApN,EAAAE,OAAA,eAAAmN,EAAA,OACArN,EAAAE,OAAA,QAAAoN,EAAA,OACAtN,EAAAE,OAAA,eAAAqN,EAAA,OACAvN,EAAAE,OAAA,gBAAAyL,EAAA,OACA3L,EAAAE,OAAA,eAAAwM,EAAA,OACA1M,EAAAE,OAAA,mBAAAmM,EAAA,OAEA1N,EAAAC,UAAA,EAEA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,uBAEAD,SAAAC,OAAA,sBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IACAhB,EAAAC,UAAA,EACA,SAAAO,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGAoM,EAAAnM,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEApB,EAAAG,QAEAG,EAAA,mBAAAC,MAAA,SAIA,MAAAS,KA0DA0B,MAOApC,EAAA,iBAAAqC,SAAA,CACAC,MAAA,CACAqH,OAAA,CACApH,UAAA,GAIAkM,MAAA,CACAlM,UAAA,GAEAmM,aAAA,CACAnM,UAAA,GAEAuK,cAAA,CACAvK,UAAA,GAEAsL,aAAA,CACAtL,UAAA,GAEAiL,iBAAA,CACAjL,UAAA,IAGAC,SAAA,CACAmH,OAAA,CACApH,SAAA,4BAEAkM,MAAA,CACAlM,SAAA,mCAEAmM,aAAA,CACAnM,SAAA,kCAEAuK,cAAA,CACAvK,SAAA,sCAEAsL,aAAA,CACAtL,SAAA,qCAEAiL,iBAAA,CACAjL,SAAA,0CAIAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBAgBA,SAAAsG,EAAAH,GACA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAtaAxJ,EAAAkE,iBAAA,SAAA,eA6FAhE,EAAA,UAAAmD,YAAAC,YAEAgL,EAAApO,EAAA,UAAAqD,UAAA,CACAkD,SAAA,CACAC,QAAA,GACAC,WAAA,qBACAC,KAAA,gDACAC,UAAA,iCACAC,aAAA,qCACAC,YAAA,GACAC,UAAA,IACAC,WAAA,0BACAC,eAAA,cACAC,WAAA,gBACAC,OAAA,UACAC,YAAA,6BACAC,SAAA,CACAC,MAAA,UACAC,KAAA,SACAC,KAAA,YACAC,SAAA,aAGAvF,KAAA,iBACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,IAlHAkG,EAAA3F,iBAAA,SAAA,SAAAC,GACA0F,EAAApJ,MAAA0D,EAAAC,OAAA,MAAAC,iBAIA8J,EAAAjK,iBAAA,SAAA,WACAxE,EAAA,KACA6O,EAAA,KACAC,EAAA,KACA1O,OAGAI,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GACAzE,EAAAyE,EAAAI,cAAAC,QAAA+I,WACAzN,OAGAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IAKA,SAAAzE,EAAAyE,GAEA,MAAA0F,EAAA1F,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YACA/D,QAAAC,IAAA+I,GAEAhF,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,oFAAA6E,6DAEA5E,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAEA+B,IAAAC,SAAAC,OAAA,yBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAGAsN,EAAAnM,KAAAC,UAEA,MAAAxB,KAzCA6O,CAAA/P,KAnBAgQ,CADAvL,EAAAI,cAAAC,QAAA+I,WACApJ,MA+XAjE,EAAA,iBAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAjbA,GCAA,WAGA,GAFAb,SAAAC,cAAA,cAEA,CACA,MAAA8M,EAAA/M,SAAAC,cAAA,cACA+M,EAAAhN,SAAAC,cAAA,oBACAgN,EAAAjN,SAAAC,cAAA,gBACAiN,EAAAlN,SAAAC,cAAA,yBACAkN,EAAAnN,SAAAC,cAAA,mBACAmN,EAAApN,SAAAC,cAAA,wBACAoN,EAAArN,SAAAC,cAAA,sBAEA,IAAA4N,EAqCA,SAAAP,IACAF,EAAAlM,MAAA,GAEA,MAAAqM,EAAA9G,WAAAyG,EAAA,MAAAnG,QAAA,KAAA,KACAyG,EAAA/G,WAAA0G,EAAAjM,OACA,GAAA8F,MAAAuG,IAAAvG,MAAAwG,GACA,OAEA,MAAAC,EAAAF,EAAAC,EACAJ,EAAAlM,MAAAwM,KAAAC,MAAAF,GAAA/G,eAAA,MAGA,SAAAO,EAAAJ,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MA6DA,SAAAjF,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIA,SAAAkM,EAAAzN,GACAQ,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YAjEAf,iBACA,MAAAgB,EAAA,IAAAC,SAEAD,EAAAE,OAAA,KAAA6L,GACA/L,EAAAE,OAAA,QAAAiL,EAAA,OACAnL,EAAAE,OAAA,gBAAAoL,EAAA,OAEAC,EAAA3M,UAAA,EAEA,MAAAwB,EAAAC,SAAAC,OAAA,6BAIA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAGAK,IAEA4L,EAAA3M,UAAA,EAEA,SAAAO,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAA,UAAAqD,YAAApB,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEAsL,EAAAvM,QAEAG,EAAA,gBAAAC,MAAA,SAIA,MAAAS,KAaAyM,MAKAnN,EAAA,cAAAqC,SAAA,CACAC,MAAA,CAGAgK,YAAA,CACA/J,UAAA,GAGAkK,oBAAA,CACAlK,UAAA,IAGAC,SAAA,CACA8J,YAAA,CACA/J,SAAA,4BAEAkK,oBAAA,CACAlK,SAAA,+CAIAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBA9JAlD,EAAA,UAAAoE,GAAA,QAAA,kBAAA,SAAAH,GAEAiJ,EAAAjJ,EAAAI,cAAAC,QAAA+I,WACAjB,EAAAvM,QACA6M,EAAA3M,UAAA,EACAC,EAAA,gBAAAC,MAAA,QACAD,EAAA,cAAAqC,WAAAsD,YAEA3F,EAAA,cAAAqC,WAAAuD,UAEA5F,EAAA,cAAA6F,KAAA,eAAA3C,YAAA,cAGA,MAAAyG,EAAA1F,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YACA2H,EAAA9L,MAAAoJ,EACAsD,OAGAV,EAAAvI,iBAAA,SAAA,SAAAC,GACA,MAAA2I,EAAAtG,EAAArC,EAAAC,OAAA3D,OACAgM,EAAAhM,MAAAqM,EACAD,OAEAH,EAAAxI,iBAAA,SAAA,SAAAC,GAEA0I,OAGAF,EAAAzI,iBAAA,SAAA,SAAAC,GACA,MAAA6I,EAAAxG,EAAArC,EAAAC,OAAA3D,OACAkM,EAAAlM,MAAAuM,KAoIA9M,EAAA,cAAAoE,GAAA,SAAA,SAAAmB,GACA0H,QAjLA,GCAA,WAEA,GADA5N,SAAAC,cAAA,YACA,CAEA,MAAAmQ,EAAApQ,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,eACAQ,EAAAT,SAAAC,cAAA,cAEA,IAAAoQ,EAEAlQ,EACA,MAAAmQ,EAAAtQ,SAAAC,cAAA,WACAsQ,EAAAvQ,SAAAC,cAAA,gBAqNA,SAAAwB,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIAZ,eAAAP,IAEAF,EAAAG,QACAC,EAAAC,UAAA,EACAC,EAAA,iBAAAC,MAAA,QACAD,EAAA,eAAAqC,WAAAsD,YAEA3F,EAAA,eAAAqC,WAAAuD,UAEA5F,EAAA,eAAA6F,KAAA,eAAA3C,YAAA,cACA1D,GAaAW,iBAGA,IACA,MAAAC,QAAAC,MAAA,kBAAAb,IAWA,SAAAc,GAGAqP,EAAApP,MAAAuF,WAAAxF,EAAAqP,QAAA5J,eAAA,MACA6J,EAAArP,MAAAD,EAAAsP,YAXApP,OAHAJ,EAAAK,QAKA,MAAAC,GACAC,QAAAC,IAAAF,IAtBAmP,GAMA3P,IA2BA,SAAAA,IAEAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YA3HAf,iBAEA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAIA2B,EAAAE,OAAA,SAAAsO,EAAApP,OACAY,EAAAE,OAAA,cAAAuO,EAAArP,OAGAT,EAAAC,UAAA,EAEA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,qBAEAD,SAAAC,OAAA,oBAMA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAIAK,IAEAhB,EAAAC,UAAA,EACA,SAAAO,EAAAsB,MACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAEAhC,EAAA,iBAAAC,MAAA,UAEAyP,EAAAzN,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAKAtC,EAAAG,QAEAG,EAAA,iBAAAC,MAAA,SAGAkC,WAAA,KACArB,KACA,KAEA,MAAAJ,KA2DA0B,MAOApC,EAAA,eAAAqC,SAAA,CACAC,MAAA,CACAwN,QAAA,CACAvN,UAAA,GAGAqN,YAAA,CACArN,UAAA,IAGAC,SAAA,CACAsN,QAAA,CACAvN,SAAA,+CAEAqN,YAAA,CACArN,SAAA,yCAKAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBAyBA,SAAApC,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAzUA4O,EAAA3L,iBAAA,SAAA,SAAAC,GACA0L,EAAApP,MA6TA,SAAA2F,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MAnUAO,CAAArC,EAAAC,OAAA3D,UAgGAP,EAAA,UAAAmD,YAAAC,YAEAsM,EAAA1P,EAAA,UAAAqD,UAAA,CACAkD,SAAA,CACAC,QAAA,GACAC,WAAA,qBACAC,KAAA,gDACAC,UAAA,iCACAC,aAAA,qCACAC,YAAA,GACAC,UAAA,IACAC,WAAA,0BACAC,eAAA,cACAC,WAAA,gBACAC,OAAA,UACAC,YAAA,6BACAC,SAAA,CACAC,MAAA,UACAC,KAAA,SACAC,KAAA,YACAC,SAAA,aAGAvF,KAAA,eACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,IAGAzD,EAAAiC,KAAA,CACAV,IAAA,eACAwO,SAAA,OACAC,QAAA,SAAAC,GACAtP,QAAAC,IAAAqP,IAEAvP,MAAA,SAAAA,GACAC,QAAAC,IAAAF,EAAAwP,gBA/HAT,EAAAzL,iBAAA,SAAA,WACAxE,EAAA,KAEAI,OAGAI,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GAEAzE,EAAAyE,EAAAI,cAAAC,QAAA6L,SAGAvQ,OAIAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IAMA,SAAAzE,EAAAyE,GAEA,MAAA0L,EAAA1L,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAGAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,kGAAA6K,6DAEA5K,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAOAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAGA+B,IAAAC,SAAAC,OAAA,uBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAMA0N,EAAAzN,KAAAC,UAEAC,WAAA,KACArB,KACA,KACA,MAAAJ,KA7CA0P,CAAA5Q,KApBA6Q,CADApM,EAAAI,cAAAC,QAAA6L,SACAlM,MA0RAjE,EAAA,eAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAjUA,GCAA,WAEA,GADAb,SAAAC,cAAA,aACA,CAEA,MAAAgR,EAAAjR,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,gBACAQ,EAAAT,SAAAC,cAAA,cAEA,IAAAiR,EAEA/Q,EACA,MAAAsQ,EAAAzQ,SAAAC,cAAA,YACAsQ,EAAAvQ,SAAAC,cAAA,gBA6PA,SAAAwB,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIAZ,eAAAP,IAEAF,EAAAG,QACAC,EAAAC,UAAA,EACAC,EAAA,kBAAAC,MAAA,QACAD,EAAA,gBAAAqC,WAAAsD,YAEA3F,EAAA,gBAAAqC,WAAAuD,UAEA5F,EAAA,gBAAA6F,KAAA,eAAA3C,YAAA,cACA1D,GAaAW,iBAGA,IACA,MAAAC,QAAAC,MAAA,mBAAAb,IAWA,SAAAc,GAGAwP,EAAAvP,MAAAuF,WAAAxF,EAAAwP,SAAA/J,eAAA,MACA6J,EAAArP,MAAAD,EAAAsP,YAXApP,OAHAJ,EAAAK,QAKA,MAAAC,GACAC,QAAAC,IAAAF,IAtBA8P,GAMAtQ,IA2BA,SAAAA,IAEAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YA3HAf,iBAEA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAIA2B,EAAAE,OAAA,UAAAyO,EAAAvP,OACAY,EAAAE,OAAA,cAAAuO,EAAArP,OAGAT,EAAAC,UAAA,EAEA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,sBAEAD,SAAAC,OAAA,qBAMA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAIAK,IAEAhB,EAAAC,UAAA,EACA,SAAAO,EAAAsB,MACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAEAhC,EAAA,kBAAAC,MAAA,UAEAsQ,EAAAtO,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAKAtC,EAAAG,QAEAG,EAAA,kBAAAC,MAAA,SAGAkC,WAAA,KACArB,KACA,KAEA,MAAAJ,KA2DA0B,MAOApC,EAAA,gBAAAqC,SAAA,CACAC,MAAA,CACAwN,QAAA,CACAvN,UAAA,GAGAqN,YAAA,CACArN,UAAA,IAGAC,SAAA,CACAsN,QAAA,CACAvN,SAAA,kDAEAqN,YAAA,CACArN,SAAA,yCAKAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBAyBA,SAAApC,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAjXA+O,EAAA9L,iBAAA,SAAA,SAAAC,GACA6L,EAAAvP,MAqWA,SAAA2F,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MA3WAO,CAAArC,EAAAC,OAAA3D,UAwIAP,EAAA,UAAAmD,YAAAC,YAEAmN,EAAAvQ,EAAA,UAAAqD,UAAA,CACAkD,SAAA,CACAC,QAAA,GACAC,WAAA,qBACAC,KAAA,gDACAC,UAAA,iCACAC,aAAA,qCACAC,YAAA,GACAC,UAAA,IACAC,WAAA,0BACAC,eAAA,cACAC,WAAA,gBACAC,OAAA,UACAC,YAAA,6BACAC,SAAA,CACAC,MAAA,UACAC,KAAA,SACAC,KAAA,YACAC,SAAA,aAGAvF,KAAA,gBACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,IAGAzD,EAAAiC,KAAA,CACAV,IAAA,gBACAwO,SAAA,OACAC,QAAA,SAAAC,GACAtP,QAAAC,IAAAqP,IAEAvP,MAAA,SAAAA,GACAC,QAAAC,IAAAF,EAAAwP,gBAvKAI,EAAAtM,iBAAA,SAAA,WACAxE,EAAA,KAEAI,OAGAI,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GAEAzE,EAAAyE,EAAAI,cAAAC,QAAAmM,UAGA7Q,OAIAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IAMA,SAAAzE,EAAAyE,GAEA,MAAA6L,EAAA7L,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAGAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,mGAAAgL,6DAEA/K,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aA+CAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAGA+B,IAAAC,SAAAC,OAAA,wBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAMAuO,EAAAtO,KAAAC,UAEAC,WAAA,KACArB,KACA,KACA,MAAAJ,KArFAgQ,CAAAlR,KApBAmR,CADA1M,EAAAI,cAAAC,QAAAmM,UACAxM,MAkUAjE,EAAA,gBAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAzWA,GCAA,WAEA,GADAb,SAAAC,cAAA,gBACA,CACA,IAAAsR,EACApR,EAAA,KACA,MAAAqR,EAAAxR,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,kBACAqK,EAAAtK,SAAAC,cAAA,WAEAuL,GADAxL,SAAAC,cAAA,WACAD,SAAAC,cAAA,aACAwL,EAAAzL,SAAAC,cAAA,cACAD,SAAAC,cAAA,UAwHA,SAAAM,IACAF,EAAAG,QACAC,UAAAC,UAAA,EACAC,EAAA,oBAAAC,MAAA,QAEAC,IACAV,GAKAW,iBACA,IACA,MAAAC,QAAAC,MAAA,qBAAAb,IASA,SAAAc,GAEAqJ,EAAApJ,MAAAD,EAAAqJ,OACAkB,EAAAtK,MAAAD,EAAAuK,QACAC,EAAAvK,MAAAD,EAAAwK,UATAtK,OAHAJ,EAAAK,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAZAsK,GAwGA,SAAAlK,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAIA,SAAAb,IAEAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YAxFAf,iBACA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAEA2B,EAAAE,OAAA,SAAAsI,EAAA,MAAArI,QACAH,EAAAE,OAAA,UAAAwJ,EAAA,OACA1J,EAAAE,OAAA,YAAAyJ,EAAA,MAAAxJ,QAKAxB,UAAAC,UAAA,EAGA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,wBAEAD,SAAAC,OAAA,uBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAGAK,IACAhB,UAAAC,UAAA,EACA,SAAAO,EAAAsB,MAEA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEA8P,EAAA3O,KAAAC,SAEAlC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEApB,EAAAG,QAEAG,EAAA,oBAAAC,MAAA,SAIA,MAAAS,GACAC,QAAAC,IAAA,UAwBAwB,MAKApC,EAAA,kBAAAqC,SAAA,CACAC,MAAA,CACAqH,OAAA,CACApH,UAAA,EACA0I,UAAA,GAEAJ,QAAA,CAEAK,QAAA,EACAC,YAAA,CAAA,GAAA,MAKA3I,SAAA,CACAmH,OAAA,CACApH,SAAA,2BACA0I,UAAA,oCAEAJ,QAAA,CAEAK,OAAA,yBACAC,YAAA,+CAIA1I,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBA7LA0N,EAAA5Q,EAAA,UAAAqD,UAAA,CACApB,KAAA,mBACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACAC,aAAA,WAEA,IAAA1D,EAAA2D,GAAAR,UAAAS,QAAAgN,EAAA,CACA/M,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,WACAC,YAAAC,SAAA,qCAnGA4F,EAAA3F,iBAAA,SAAA,SAAAC,GACA0F,EAAApJ,MAAA0D,EAAAC,OAAA,MAAAC,iBAIA0M,EAAA7M,iBAAA,SAAA,WACAxE,EAAA,KACAI,OAGAI,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GACAzE,EAAAyE,EAAAI,cAAAC,QAAAwM,YACAlR,OAEAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IAQA,SAAAzE,EAAAyE,GAEA,MAAAiL,EAAAjL,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAEAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,qFAAAoK,6DAEAnK,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAEA+B,IAAAC,SAAAC,OAAA,0BACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAK,IAEA,SAAAR,EAAAsB,MACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAEAG,WAAA,KACArB,KACA,OAGAd,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAGA8P,EAAA3O,KAAAC,UAEA,MAAAxB,GACAC,QAAAC,IAAAF,IA7CAqQ,CAAAvR,KArBAwR,CADA/M,EAAAI,cAAAC,QAAAwM,YACA7M,MA0QAjE,EAAA,kBAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAzSA,GCAA,WAEA,GADAb,SAAAC,cAAA,mBACA,CAEA,MAAA2R,EAAA5R,SAAAC,cAAA,oBAYAa,iBAGA,IACA,MAAAC,QAAAC,MAAAmB,SAAAC,OAAA,wBACAnB,QAAAF,EAAAK,OAGAyQ,EAAA7R,SAAA0K,cAAA,UACAmH,EAAAxM,YAAA,4BACAwM,EAAA3Q,MAAA,IAEA0Q,EAAA7G,YAAA8G,GAIA5Q,EAAAmJ,QAAA4B,IAEA,MAAAwD,EAAAxP,SAAA0K,cAAA,UACA8E,EAAAtO,MAAA8K,EAAA7L,GACAqP,EAAAnK,YAAA2G,EAAA1B,OAIAsH,EAAA7G,YAAAyE,KAIA7O,EAAA,mBAAAmP,UACAnP,EAAA,eAAAmP,QAAA,CACAC,MAAA,eAEA,MAAA1O,IAGAV,EAAA,oBAAAmP,UACAnP,EAAA,eAAAmP,QAAA,CACAC,MAAA,eAvCA+B,IAdA,GCAA,WAIA,GAHA9R,SAAAC,cAAA,mBAGA,CAEA,IAAA8R,EAAA,CACAC,MAAA,EACAC,MAAA,EACAC,MAAA,EACAC,WAAA,IAGAC,EAAA,GACAC,EAAA,GACA,MAAAC,EAAAtS,SAAAC,cAAA,kBAEAsS,EAAAvS,SAAAC,cAAA,gBACAuS,EAAAxS,SAAAC,cAAA,eACAwS,EAAAzS,SAAAC,cAAA,gBACAyS,EAAA1S,SAAAC,cAAA,UACAI,EAAAL,SAAAC,cAAA,aAEA0S,EAAA3S,SAAAC,cAAA,iBACA2S,EAAA5S,SAAAC,cAAA,eACA+R,EAAAhS,SAAAC,cAAA,UACA4S,EAAA7S,SAAAC,cAAA,mBAmFA,SAAA6S,IACAf,EAAAG,MAAAH,EAAAE,MAAAF,EAAAC,MACAhL,MAAA+K,EAAAG,SACAH,EAAAG,MAAAH,EAAAE,OAEAY,EAAAxN,YAAA,IAAAoB,WAAAsL,EAAAG,OAAAxL,eAAA,MA2BA5F,eAAAiS,EAAA5S,GACAkS,EAAAlS,EACA,IACA0S,EAAAxN,YAAA,KACA,MAAAtE,QAAAC,MAAA,GAAAmB,SAAAC,8BAAAjC,KAEAc,QAAAF,EAAAK,OAKA,GAFA+I,EAAAoI,GACApI,EAAAqI,GACA,GAAAvR,EAAA+R,OAAAC,OACA3N,KAAAC,KAAA,CACAC,KAAA,UACA0N,KAAA,oCAEAT,EAAApN,YAAA,EACA0M,EAAAE,MAAA,EACAF,EAAAC,MAAA,EACAD,EAAAG,MAAA,MAGA,CACA,MAAAc,OAAAA,EAAAG,aAAAA,GAAAlS,GA2HA,SAAA+R,GAEA,IAAAI,EAAA,EAEAJ,EAAA5I,QAAAiJ,IACA,MAAAjK,OAAAA,EAAAkK,SAAAA,EAAA9J,MAAAA,EAAAC,QAAAA,EAAAI,OAAAA,GAAAwJ,EACA,GAAAxJ,GACAuI,EAAAmB,OAGA,MAAA9I,EAAAzK,SAAA0K,cAAA,MAEA8I,EAAAxT,SAAA0K,cAAA,MACA8I,EAAAnO,YAAA,IAAA+D,EAEA,MAAAqK,EAAAzT,SAAA0K,cAAA,MACA+I,EAAApO,YAAA,IAAAoB,WAAA+C,GAAA9C,eAAA,MAEA,MAAAgN,EAAA1T,SAAA0K,cAAA,MACAgJ,EAAArO,YAAA,IAAAoB,WAAAgD,GAAA/C,eAAA,MAEA,MAAAiN,EAAA3T,SAAA0K,cAAA,MACAiJ,EAAAtO,YAAA,IAAAoB,WAAA+C,EAAAC,GAAA/C,eAAA,MAEA,MAAAkN,EAAA5T,SAAA0K,cAAA,MAEAmJ,EAAA7T,SAAA0K,cAAA,OACAmJ,EAAAlK,UAAAG,IAAA,SAAA,uBAAA,eAEA,MAAAgK,EAAA9T,SAAA0K,cAAA,UACAoJ,EAAAvR,KAAA,SAEAuR,EAAAnK,UAAAG,IAAA,MAAA,OAAA,aAAA,UAEA,GAAAD,GACAuJ,EAAAA,EAAA3M,WAAA+C,GAAA/C,WAAAgD,GACAqK,EAAAzO,YAAA,YACAyO,EAAAnK,UAAAG,IAAA,gBAEAgK,EAAAzO,YAAA,SACAyO,EAAAnK,UAAAG,IAAA,UAAA,eAKA+J,EAAA9I,YAAA+I,GACAF,EAAA7I,YAAA8I,GAEA,MAAAE,EAAA/T,SAAA0K,cAAA,MACAsJ,EAAAhU,SAAA0K,cAAA,OACAsJ,EAAArK,UAAAG,IAAA,SAAA,wBAEA,MAAAmK,EAAAjU,SAAA0K,cAAA,UACAuJ,EAAA1R,KAAA,SACA0R,EAAAtK,UAAAG,IAAA,MAAA,SAAA,gBAAA,aAAA,WACAmK,EAAAC,UAAA,qEAEAD,EAAAE,QAAA,MAqEArT,eAAAuS,GACA1S,EAAA,eAAAC,MAAA,QAEA,IACA,MAAAG,QAAAC,MAAA,GAAAmB,SAAAC,wCAAAiR,EAAAC,YACArS,QAAAF,EAAAK,OACA,SAAAH,EAAAsB,KACA+C,KAAAC,KAAA,CACAC,KAAA,QACA0N,KAAAjS,EAAA0B,MArDA,SAAA0Q,EAAAe,GAGA,MAAAzL,EAAA3I,SAAAC,cAAA,iBACA2I,EAAA5I,SAAAC,cAAA,kBACA4I,EAAA7I,SAAAC,cAAA,gBAEA6I,EAAA9I,SAAAC,cAAA,gBACA+I,EAAAhJ,SAAAC,cAAA,kBACAgJ,EAAAjJ,SAAAC,cAAA,gBAEA0I,EAAAtD,YAAAgO,EAAAjK,OACAR,EAAAvD,YAAAgO,EAAAhK,eACAR,EAAAxD,YAAAgO,EAAA/J,MACAR,EAAAzD,YAAAoB,WAAA4M,EAAA7J,OAAA9C,eAAA,MACAsC,EAAA3D,YAAAoB,WAAA4M,EAAA5J,SAAA/C,eAAA,MACAuC,EAAA5D,YAAAoB,WAAA4M,EAAA7J,MAAA6J,EAAA5J,SAAA/C,eAAA,MAEA,MAAAqD,EAAA/J,SAAAC,cAAA,0BACAkK,EAAAJ,GAEAqK,EAAAhK,QAAAC,IACA,MAAAC,OAAAA,EAAAC,SAAAA,EAAAC,OAAAA,GAAAH,EACAI,EAAAzK,SAAA0K,cAAA,MACAC,EAAA3K,SAAA0K,cAAA,MACAC,EAAAtF,YAAAiF,EACA,MAAAM,EAAA5K,SAAA0K,cAAA,MACAE,EAAAvF,YAAAkF,EACA,MAAAM,EAAA7K,SAAA0K,cAAA,MACAG,EAAAxF,YAAAoB,WAAA+D,GAAA9D,eAAA,MACA,MAAAoE,EAAA9K,SAAA0K,cAAA,MACAI,EAAAzF,YAAAoB,WAAA+D,EAAAD,GAAA7D,eAAA,MAGA+D,EAAAM,YAAAJ,GACAF,EAAAM,YAAAH,GACAH,EAAAM,YAAAF,GACAJ,EAAAM,YAAAD,GAEAf,EAAAgB,YAAAN,KAiBA4J,CAAAhB,EAAApS,GAEA,MAAAI,KAlFAiT,CAAAjB,IAGAW,EAAAjJ,YAAAkJ,GACAF,EAAAhJ,YAAAiJ,GAEAvJ,EAAAM,YAAAyI,GACA/I,EAAAM,YAAA0I,GACAhJ,EAAAM,YAAA2I,GACAjJ,EAAAM,YAAA4I,GACAlJ,EAAAM,YAAA6I,GACAnJ,EAAAM,YAAAgJ,GACAxB,EAAAxH,YAAAN,GACAsH,EAAAI,WAAAkB,EAAAlB,aAEAM,EAAApN,YAAAoB,WAAA2M,GAAA1M,eAAA,MACAqL,EAAAE,MAAAmB,EACArB,EAAAG,MAAAkB,EArMAmB,CAAAvB,GACAG,EAYA/I,QAAAoK,IACA,MAAAC,YAAAA,EAAAzC,MAAAA,EAAA0C,WAAAA,GAAAF,EAEA/J,EAAAzK,SAAA0K,cAAA,MAEAiK,EAAA3U,SAAA0K,cAAA,MACAiK,EAAAtP,YAAA,IAAAoP,EAEA,MAAAG,EAAA5U,SAAA0K,cAAA,MACAkK,EAAAvP,YAAA,IAAAoB,WAAAuL,GAAAtL,eAAA,MAEA,MAAAmO,EAAA7U,SAAA0K,cAAA,MACAmK,EAAAxP,YAAAqP,EAEA,MAAAI,EAAA9U,SAAA0K,cAAA,MACAqK,EAAA/U,SAAA0K,cAAA,OACAqK,EAAApL,UAAAG,IAAA,SAAA,wBAOA,MAAAkL,EAAAhV,SAAA0K,cAAA,UACAsK,EAAAzS,KAAA,SACAyS,EAAArL,UAAAG,IAAA,MAAA,SAAA,gBAAA,aAAA,WACAkL,EAAAd,UAAA,yEAEAc,EAAAb,QAAA,YAmBA,SAAAK,GAGAlP,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,gGAAAgB,WAAA+N,EAAAxC,OAAAtL,eAAA,iEAEAhB,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAMAjF,eAAA0T,GAEA,MAAA1S,EAAA,IAAAC,SACAD,EAAAE,OAAA,cAAAwS,EAAAC,aACA,MAAAvS,EAAAC,SAAAC,OAAA,qBACA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAI,OAAA,OACAD,KAAAP,IAEAb,QAAAF,EAAAK,OAGAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGArB,QAAAC,IAAAN,GACAN,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAEAoQ,EAAAV,IAIAvP,WAAA,KACArB,KACA,KACA,MAAAJ,KA1CA4T,CAAAT,KA/BAU,CAAAV,IAGAO,EAAAhK,YAAAiK,GACAF,EAAA/J,YAAAgK,GAEAtK,EAAAM,YAAA4J,GACAlK,EAAAM,YAAA6J,GACAnK,EAAAM,YAAA8J,GAEApK,EAAAM,YAAA+J,GACAtC,EAAAzH,YAAAN,MAlDA,MAAApJ,GAEAC,QAAAC,IAAAF,IAoRA,SAAA8I,EAAAH,GAEA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAiDA,SAAAxI,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAzdAkR,EAAAjO,iBAAA,SAAA,WACAoN,EAAAC,MAAAD,EAAAE,MACAD,EAAA9Q,MAAAuF,WAAAsL,EAAAC,OAAAtL,eAAA,MACAoM,OAGAd,EAAArN,iBAAA,SAAA,SAAAC,GAEA,MAAAiC,EAAAjC,EAAAC,OAAA3D,MAEA,IAAAiU,EAAA1O,WAAAI,EAAAE,QAAA,KAAA,KAEA,IAAAoO,IACAA,EAAA,GAEApD,EAAAC,MAAAmD,EACArC,IACA,MAAAsC,EAsYA,SAAAvO,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MA5YAO,CAAAJ,GAGAmL,EAAA9Q,MAAAkU,KAKAzU,EAAA,mBAAAoE,GAAA,kBAAA,SAAAH,GACA,GAAAA,EAAAC,OAAA3D,OAEA6R,EAAAnO,EAAAC,OAAA3D,UAKAwR,EAAA/N,iBAAA,SAAA,WACAxE,GAAA,KAyDAE,EAAAG,QAEA8R,EAAA5R,UAAA,EACA,GAAAC,EAAA,mBAAA0U,OACA1U,EAAA,eAAAC,MAAA,QAEA+R,EAAAzR,MAAAuF,WAAAsL,EAAAE,OAAAvL,eAAA,MACAmM,EAAAxN,YAAA,IAAAoB,WAAAsL,EAAAG,OAAAxL,eAAA,MA0UA/F,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YAvYAf,iBACA,MAAAgB,EAAA,IAAAC,SACAD,EAAAE,OAAA,aAAA+P,EAAAI,YACArQ,EAAAE,OAAA,QAAA+P,EAAAC,OACAM,EAAA5R,UAAA,EACA,MAAAwB,EAAAC,SAAAC,OAAA,aACA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAI,OAAA,OACAD,KAAAP,IAEAb,QAAAF,EAAAK,OACAkR,EAAA5R,UAAA,EACAC,EAAA,eAAAC,MAAA,QACAa,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAKAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAEAoQ,EAAAV,IAEAvP,WAAA,KACArB,KACA,KACA,MAAAJ,KAmWA0B,MASApC,EAAA,aAAAqC,SAAA,CACAC,MAAA,CACA+O,MAAA,CACA9O,UAAA,EACAoS,iBAAA,MAGAnS,SAAA,CACA6O,MAAA,CACA9O,SAAA,kCACAoS,iBAAA,sCAGAlS,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBAKAlD,EAAAgB,UAAA4T,UAAA,oBAAA,SAAArU,EAAAoC,GACA,OAhCA,SAAApC,EAAAoC,EAAAkS,GACA,OAAAtU,IAAAsU,EA+BAC,CAAAvU,EAAAoC,EAAA,OACA,wCA9WAgC,KAAAC,KAAA,CACAC,KAAA,UACA0N,KAAA,wCApIA,GCAA,WAEA,GADAlT,SAAAC,cAAA,mBACA,CAGA,MAAAyV,EAAA1V,SAAAC,cAAA,kBACA0V,EAAA3V,SAAAC,cAAA,iBACA2V,EAAA5V,SAAAC,cAAA,sBACA4V,EAAA7V,SAAAC,cAAA,qBAEAyV,EAAA/Q,iBAAA,QAAA,KACA3E,SAAAC,cAAA,eACA0J,UAAAjI,OAAA,cACAgU,EAAA/L,UAAAG,IAAA,cAEA9J,SAAA8V,iBAAA,WACA1L,QAAA2L,IACAA,EAAApM,UAAAjI,OAAA,YAEAmU,EAAAlM,UAAAG,IAAA,YAKA6L,EAAAhR,iBAAA,QAAA,KACA3E,SAAAC,cAAA,eACA0J,UAAAjI,OAAA,cACAiU,EAAAhM,UAAAG,IAAA,cAEA9J,SAAA8V,iBAAA,WACA1L,QAAA2L,IACAA,EAAApM,UAAAjI,OAAA,YAEAkU,EAAAjM,UAAAG,IAAA,aAjCA,GCAA,WAGA,GAFA9J,SAAAC,cAAA,cAEA,CAEA,MAAAyL,EAAA1L,SAAAC,cAAA,UACA+V,EAAAhW,SAAAC,cAAA,aACAQ,EAAAT,SAAAC,cAAA,cAIAa,eAAAiC,IACAtC,EAAAC,UAAA,EACA,MAAAoB,EAAA,IAAAC,SACAD,EAAAE,OAAA,QAAA0J,EAAA,MAAAzJ,QACAH,EAAAE,OAAA,WAAAgU,EAAA9U,OAEA,IACA,MAAAgB,EAAA,qBACAnB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAkBApB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAjBA,SAAAT,EAAAsB,MACA9B,EAAAC,UAAA,EACAC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGAsT,OAAA9T,SAAA+T,KAAA,UAEA,MAAA7U,KAUA,SAAAR,IACAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,WAEAkB,OAKApC,EAAA,cAAAqC,SAAA,CACAC,MAAA,CAEAyI,MAAA,CACAxI,UAAA,GAEA8S,SAAA,CACA9S,UAAA,IAGAC,SAAA,CAEAuI,MAAA,CACAxI,SAAA,6BAEA8S,SAAA,CACA9S,SAAA,+BAGAE,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBA3EAhD,IA+EAF,EAAA,cAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAxFA,GCEA,WAGA,GADAb,SAAAC,cAAA,aACA,CAGA,IAAAkW,EACAhW,EAAA,KAEA,MAAAiW,EAAApW,SAAAC,cAAA,cACAI,EAAAL,SAAAC,cAAA,gBACAQ,EAAAT,SAAAC,cAAA,cACAqK,EAAAtK,SAAAC,cAAA,WACAyL,EAAA1L,SAAAC,cAAA,UACA4J,EAAA7J,SAAAC,cAAA,WACAoW,EAAArW,SAAAC,cAAA,SACA+V,EAAAhW,SAAAC,cAAA,aA0GA,SAAAM,IACAI,EAAA,gBAAAqC,WAAAuD,UACAlG,EAAAG,QACAC,EAAAC,UAAA,EAEA4V,EAAAzM,GACAyM,EAAAD,GAEA,MAAAE,EAAAvW,SAAA0K,cAAA,UACA6L,EAAAC,aAAA,WAAA,YACAD,EAAAC,aAAA,WAAA,YACAD,EAAAlR,YAAA,iBAEA,MAAAoR,EAAAzW,SAAA0K,cAAA,UACA+L,EAAAvV,MAAA,EACAuV,EAAApR,YAAA,WACA,MAAAqR,EAAA1W,SAAA0K,cAAA,UACAgM,EAAAxV,MAAA,EACAwV,EAAArR,YAAA,SAEA,MAAAsR,EAAA3W,SAAA0K,cAAA,UACAiM,EAAAH,aAAA,WAAA,YACAG,EAAAH,aAAA,WAAA,YACAG,EAAAtR,YAAA,iBAEA,MAAAuR,EAAA5W,SAAA0K,cAAA,UACAkM,EAAA1V,MAAA,EACA0V,EAAAvR,YAAA,WACA,MAAAwR,EAAA7W,SAAA0K,cAAA,UACAmM,EAAA3V,MAAA,EACA2V,EAAAxR,YAAA,gBAEAwE,EAAAkB,YAAAwL,GACA1M,EAAAkB,YAAA0L,GACA5M,EAAAkB,YAAA2L,GACAL,EAAAtL,YAAA4L,GACAN,EAAAtL,YAAA6L,GACAP,EAAAtL,YAAA8L,GAEAlW,EAAA,kBAAAC,MAAA,QACAC,IACAV,GAKAW,iBACA,IACA,MAAAC,QAAAC,MAAA,mBAAAb,IAQA,SAAAc,GAGAqJ,EAAApJ,MAAAD,EAAAqJ,OACAoB,EAAAxK,MAAAD,EAAAyK,MAEA7B,EAAA5J,cAAA,iBAAAgB,EAAA4I,OAAA,MACA2M,aAAA,WAAA,YACAH,EAAApW,cAAA,iBAAAgB,EAAAoV,KAAA,MACAG,aAAA,WAAA,YAfArV,OADAJ,EAAAK,QAEA,MAAAC,GACAC,QAAAC,IAAAF,IAVAyV,GA4FA,SAAArV,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAGA,SAAA4U,EAAAtM,GAEA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAIA,SAAApJ,IACAF,EAAAgB,UAAAC,YAAA,CACAC,cAAA,YA9EAf,iBAEA,MAAAgB,EAAA,IAAAC,SACA5B,GACA2B,EAAAE,OAAA,KAAA7B,GAEA2B,EAAAE,OAAA,SAAAsI,EAAA,MAAArI,QACAH,EAAAE,OAAA,QAAA0J,EAAAxK,OACAY,EAAAE,OAAA,SAAA6H,EAAA3I,OACAY,EAAAE,OAAA,OAAAqU,EAAAnV,OACAY,EAAAE,OAAA,WAAAgU,EAAA9U,OAEAT,EAAAC,UAAA,EACA,IAAAwB,EAAA,GAEAA,EADA/B,EACAgC,SAAAC,OAAA,sBAEAD,SAAAC,OAAA,qBAIA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAEAE,QAAAC,IAAAN,GACAR,EAAAC,UAAA,EACAe,IACAhB,EAAAC,UAAA,EACA,SAAAO,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,aACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAEApB,EAAAG,QAEAG,EAAA,kBAAAC,MAAA,QACAuV,EAAAvT,KAAAC,UAGA,MAAAxB,KAsBA0B,MAMA,IAAAgU,EAAA,GACAC,EAAA,GAEA7W,IAEA4W,EAAA,CACA7T,UAAA,EACA0I,UAAA,GAEAoL,EAAA,CACA9T,SAAA,6BACA0I,UAAA,iDAKAjL,EAAA,gBAAAqC,SAAA,CACAC,MAAA,CACAqH,OAAA,CACApH,UAAA,GAEAwI,MAAA,CACAxI,UAAA,GAEA2G,OAAA,CACA3G,UAAA,GAEAmT,KAAA,CACAnT,UAAA,GAEA8S,SAAAe,EACAE,MAAA,CACA/T,UAAA,IAGAC,SAAA,CACAmH,OAAA,CACApH,SAAA,4BAEAwI,MAAA,CACAxI,SAAA,6BAEA2G,OAAA,CACA3G,SAAA,4BAEAmT,KAAA,CACAnT,SAAA,0BAEA8S,SAAAgB,GAEA5T,aAAA,OACAC,eAAA,SAAAhC,EAAAiC,GACAjC,EAAAkC,SAAA,oBACAD,EAAAE,QAAA,eAAAxB,OAAAX,IAEAoC,UAAA,SAAAH,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAhD,EAAA2C,GAAAO,YAAA,iBA7TAuS,EAAAzR,iBAAA,SAAA,WACAxE,EAAA,KACAI,OAGA+J,EAAA3F,iBAAA,SAAA,SAAAC,GACA0F,EAAApJ,MAAA0D,EAAAC,OAAA,MAAAC,iBAUAnE,EAAA,UAAAmD,YAAAC,YAEAoS,EAAAxV,EAAA,UAAAqD,UAAA,CACApB,KAAA,gBACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,IAOAzD,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GACAzE,EAAAyE,EAAAI,cAAAC,QAAAiS,UACA3W,OAEAI,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IAOA,SAAAzE,EAAAyE,GACA,MAAA0F,EAAA1F,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YACAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,mFAAA6E,6DAEA5E,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAMAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GACA+B,IAAAC,SAAAC,OAAA,wBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OAIAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAGA0U,EAAAvT,KAAAC,UAEA,MAAAxB,GACAC,QAAAC,IAAAF,IA5CA8V,CAAAhX,KAlBAiX,CADAxS,EAAAI,cAAAC,QAAAiS,UACAtS,MA6RAjE,EAAA,gBAAAoE,GAAA,SAAA,SAAAmB,GACArF,QAtVA,GCFA,WAGA,GADAb,SAAAC,cAAA,yBACA,CAEA,IAAAiL,EAsBAmM,EAIAC,EAzBAvL,EAAA,KACAwL,EAAA,CACApX,GAAA,GACAmK,OAAA,GACAC,SAAA,GACAkD,cAAA,GACAe,aAAA,GACAhE,OAAA,GACAgN,gBAAA,GACAC,YAAA,GACArI,MAAA,IAEAsI,EAAA,CACAC,oBAAA,GACAC,YAAA,GACAC,UAAA,GACAC,MAAA,GACAC,YAAA,IAKAC,GAAA,EACAC,EAAA,GAQA,MAAArG,EAAA5R,SAAAC,cAAA,mBACAiY,EAAAlY,SAAAC,cAAA,kBAGAkY,EAAAnY,SAAAC,cAAA,UACAmY,EAAApY,SAAAC,cAAA,gBACAoY,EAAArY,SAAAC,cAAA,cACAqY,EAAAtY,SAAAC,cAAA,gBACAsY,EAAAvY,SAAAC,cAAA,gBACAuY,EAAAxY,SAAAC,cAAA,iBACAwY,EAAAzY,SAAAC,cAAA,gBAGAyY,EAAA1Y,SAAAC,cAAA,mBACA0Y,EAAA3Y,SAAAC,cAAA,oBAGA2Y,EAAA5Y,SAAAC,cAAA,UACAiS,EAAAlS,SAAAC,cAAA,UAGA4Y,EAAA7Y,SAAAC,cAAA,mBACA6Y,EAAA9Y,SAAAC,cAAA,mBACA8Y,EAAA/Y,SAAAC,cAAA,oBACA+Y,EAAAhZ,SAAAC,cAAA,sBACAgZ,EAAAjZ,SAAAC,cAAA,kBAGAiZ,EAAAlZ,SAAAC,cAAA,oBACAkZ,EAAAnZ,SAAAC,cAAA,mBACAmZ,EAAApZ,SAAAC,cAAA,sBAGA0I,EAAA3I,SAAAC,cAAA,iBAEAoZ,EAAArZ,SAAAC,cAAA,oBACAqZ,EAAAtZ,SAAAC,cAAA,oBAuLAa,eAAAyY,IAEA,IACA,MAAAxY,QAAAC,MAAAmB,SAAAC,OAAA,qBACAoX,QAAAzY,EAAAK,OAEAuH,EAAAzH,MAAAsY,EAEA,MAAAnY,KAySAP,eAAAiS,EAAA5S,GAGA,IACA,MAAAY,QAAAC,MAAA,GAAAmB,SAAAC,yBAAAjC,KACAc,QAAAF,EAAAK,OAIAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAMAG,WAAA,KACArB,KACA,KAaAuK,EAVA/K,EAYA4X,EAAA3X,MAAA8K,EAAA1B,QAAA,GACAwO,EAAA5X,MAAA8K,EAAAT,QAAA,GACAwN,EAAA7X,MAAA8K,EAAAR,SAAA,GACAwN,EAAA9X,MAAA8K,EAAAP,WAAA,GACAwN,EAAA/X,MAAA8K,EAAAN,OAAA,IAbA,MAAArK,IAOA,IAAA2K,EAUA,SAAAyN,IACA9Y,EAAA,mBACA0U,IAAA,KAAAqE,QAAA,kBACAb,EAAA3X,MAAA,GACA4X,EAAA5X,MAAA,GACA6X,EAAA7X,MAAA,GACA8X,EAAA9X,MAAA,GACA+X,EAAA/X,MAAA,GA6BA,SAAAyY,IACA,MAAAC,EAAA5Z,SAAAC,cAAA,mBACAkK,EAAAyP,GACA3B,EAAA7N,QAAAC,IACA,MAAAlK,GAAAA,EAAAmK,OAAAA,EAAAkE,aAAAA,EAAAhE,OAAAA,EAAAD,SAAAA,EAAAkN,YAAAA,EAAArI,MAAAA,GAAA/E,EAEAwP,EAAA7Z,SAAA0K,cAAA,OACAmP,EAAAlQ,UAAAG,IAAA,MAAA,QACA+P,EAAA5U,QAAA+I,WAAA7N,EAIA,MAAA2Z,EAAA9Z,SAAA0K,cAAA,OACAoP,EAAAnQ,UAAAG,IAAA,YAEA,MAAAiQ,EAAA/Z,SAAA0K,cAAA,OACAqP,EAAApQ,UAAAG,IAAA,cAAA,QAEA,MAAAkQ,EAAAha,SAAA0K,cAAA,OACAsP,EAAArQ,UAAAG,IAAA,uBAGAkQ,EAAA9F,UAAA,2GACA8F,EAAA7F,QAAA,KA0WA,IAAA8F,EAAAA,EAxWA9Z,EA0WA8X,EAAAA,EAAAiC,OAAA7P,GACAA,EAAAlK,IAAA8Z,GAGAN,KA3WA,MAAAQ,EAAAna,SAAA0K,cAAA,SACAyP,EAAA5X,KAAA,OACA4X,EAAAxQ,UAAAG,IAAA,gBACAqQ,EAAAC,UAAA,EACAD,EAAAjZ,MAAAoJ,EACA6P,EAAAlV,QAAA+I,WAAA7N,EAGA,MAAAka,EAAAra,SAAA0K,cAAA,OACA2P,EAAA1Q,UAAAG,IAAA,YAEA,MAAAwQ,EAAAta,SAAA0K,cAAA,OACA4P,EAAA3Q,UAAAG,IAAA,cAAA,QAEA,MAAAyQ,EAAAva,SAAA0K,cAAA,OACA6P,EAAA5Q,UAAAG,IAAA,uBAGAyQ,EAAArG,UAAA,+FAGA,MAAAsG,EAAAxa,SAAA0K,cAAA,SACA8P,EAAAjY,KAAA,OACAiY,EAAA7Q,UAAAG,IAAA,gBACA0Q,EAAAJ,UAAA,EACAI,EAAAtZ,MAAAkO,EACAoL,EAAAvV,QAAA+I,WAAA7N,EAGA4Z,EAAAhP,YAAAiP,GACAD,EAAAhP,YAAAoP,GACAL,EAAA/O,YAAAgP,GACAO,EAAAvP,YAAAwP,GACAD,EAAAvP,YAAAyP,GAGAH,EAAAtP,YAAAuP,GAIA,MAAAG,EAAAza,SAAA0K,cAAA,OACA+P,EAAA9Q,UAAAG,IAAA,YAEA,MAAA4Q,EAAA1a,SAAA0K,cAAA,OACAgQ,EAAA/Q,UAAAG,IAAA,cAAA,QAEA,MAAA6Q,EAAA3a,SAAA0K,cAAA,OACAiQ,EAAAhR,UAAAG,IAAA,uBAEA6Q,EAAA1V,QAAA+I,WAAA7N,EACAwa,EAAAzG,UAAA,+FAIA,MAAA0G,EAAA5a,SAAA0K,cAAA,SACAkQ,EAAArY,KAAA,SACAqY,EAAAjR,UAAAG,IAAA,gBAGA8Q,EAAA1Z,MAAAqJ,EAGA8M,GAAAlX,GAAA,GAAA6X,GAMAlV,YAAA,WACA8X,EAAAC,UACA,GAIAD,EAAAE,QAAA,WAEArU,WAAAmU,EAAA1Z,OAAAuF,WAAA2I,IACA9J,KAAAC,KAAA,CACAC,KAAA,UACA0N,KAAA,6BAGA6H,EAAA3L,EAAAjP,GAAA,IAEA4a,EAAAH,EAAA1Z,MAAAf,GAAA,IAMAua,EAAA3P,YAAA4P,GACAD,EAAA3P,YAAA6P,GACAH,EAAA1P,YAAA2P,GAIA,MAAAM,EAAAhb,SAAA0K,cAAA,OACAsQ,EAAArR,UAAAG,IAAA,YACA,MAAAmR,EAAAjb,SAAA0K,cAAA,OACAuQ,EAAAtR,UAAAG,IAAA,cAAA,QAEA,MAAAoR,EAAAlb,SAAA0K,cAAA,OACAwQ,EAAAvR,UAAAG,IAAA,uBACAoR,EAAAhH,UAAA,mGAEA,MAAAiH,EAAAnb,SAAA0K,cAAA,SACAyQ,EAAA5Y,KAAA,OACA4Y,EAAAxR,UAAAG,IAAA,gBACAqR,EAAAja,MAAAuF,WAAA+D,GAAA9D,eAAA,MAGAuU,EAAAlQ,YAAAmQ,GACAD,EAAAlQ,YAAAoQ,GACAH,EAAAjQ,YAAAkQ,GAEAE,EAAAL,QAAA,KAGA,MAAAM,EAAAnU,EAAAkU,EAAAja,OACAia,EAAAja,MAAAka,EACA/Q,EAAAG,OAAA/D,WAAA,EAAAM,QAAA,KAAA,KAEAgR,YAAA,EACAE,EAAA7N,QAAAC,IACA0N,aAAA1N,EAAAG,OAAAH,EAAAE,WAEAmN,EAAAK,YAAAA,YACAK,EAAAlX,MAAA6W,YAAArR,eAAA,OAOA,MAAA2U,EAAArb,SAAA0K,cAAA,OACA2Q,EAAA1R,UAAAG,IAAA,YAEA,MAAAwR,EAAAtb,SAAA0K,cAAA,OACA4Q,EAAA3R,UAAAG,IAAA,cAAA,QAEA,MAAAyR,EAAAvb,SAAA0K,cAAA,OACA6Q,EAAA5R,UAAAG,IAAA,uBAGAyR,EAAArH,UAAA,mGAEA,MAAAsH,EAAAxb,SAAA0K,cAAA,SACA8Q,EAAAjZ,KAAA,OACAiZ,EAAA7R,UAAAG,IAAA,gBACA0R,EAAAta,MAAAuF,WAAA+H,GAAA9H,eAAA,MAGA2Q,GAAAlX,GAAA,GAAA6X,GAMAlV,YAAA,WACA0Y,EAAAX,UACA,GAGAW,EAAAV,QAAA,KAEA,MAAAM,EAAAnU,EAAAuU,EAAAta,OACAsa,EAAAta,MAAAka,EACAD,EAAAja,MAAAka,EACA/Q,EAAAG,OAAA/D,WAAA,EAAAM,QAAA,KAAA,KACAgU,EAAAS,EAAAta,MAAAf,GAAA,IAEAqb,EAAAX,QAEAS,EAAAvQ,YAAAwQ,GACAD,EAAAvQ,YAAAyQ,GACAH,EAAAtQ,YAAAuQ,GAGA,MAAAG,EAAAzb,SAAA0K,cAAA,OACA+Q,EAAA9R,UAAAG,IAAA,YAEA,MAAA4R,EAAA1b,SAAA0K,cAAA,OACAgR,EAAA/R,UAAAG,IAAA,cAAA,QAEA,MAAA6R,EAAA3b,SAAA0K,cAAA,OACAiR,EAAAhS,UAAAG,IAAA,uBAEA6R,EAAA1W,QAAA+I,WAAA7N,EACAwb,EAAAzH,UAAA,mGAEA,MAAA0H,EAAA5b,SAAA0K,cAAA,SACAkR,EAAArZ,KAAA,OACAqZ,EAAAxB,UAAA,EACAwB,EAAAjS,UAAAG,IAAA,gBACA8R,EAAA1a,MAAAuF,WAAAgR,GAAA/Q,eAAA,MAGAgV,EAAA3Q,YAAA4Q,GACAD,EAAA3Q,YAAA6Q,GACAH,EAAA1Q,YAAA2Q,GAIA7B,EAAA9O,YAAA+O,GACAD,EAAA9O,YAAAsP,GACAR,EAAA9O,YAAA0P,GACAZ,EAAA9O,YAAAiQ,GACAnB,EAAA9O,YAAAsQ,GACAxB,EAAA9O,YAAA0Q,GAGA7B,EAAA7O,YAAA8O,GAGAgC,MAiBA,WAEA,IAAArS,EAAA,EACAoO,EAAA,EACAkE,EAAA,EACA/D,EAAA,EACAE,EAAA7N,QAAAC,IAEAb,GAAAa,EAAAE,SAAAF,EAAAmN,gBACAI,GAAAvN,EAAAE,SAAAF,EAAAmE,aACAsN,GAAAzR,EAAAE,SAAAF,EAAAoD,cACAsK,GAAA1N,EAAAE,SAAAF,EAAAG,SAGA,MAAAqN,EAAA,IAAA,IAAAD,EAAApO,EACA6O,EAAAnX,MAAA8F,MAAA+U,OAAAlE,EAAAnJ,QAAA,KAAA,KAAAqN,OAAAlE,EAAAnJ,QAAA,IAAA,IACAyJ,EAAAjX,MAAAsI,EAAA9C,eAAA,MACA4R,EAAApX,MAAA0W,EAAAlR,eAAA,MACA0R,EAAAlX,MAAA6W,EAAArR,eAAA,MAGAgR,EAAAC,oBAAAnO,EACAkO,EAAAE,YAAAA,EACAF,EAAAG,UAAA7Q,MAAA+U,OAAAlE,EAAAnJ,QAAA,KAAA,EAAAqN,OAAAlE,EAAAnJ,QAAA,IACAgJ,EAAAI,MAAAgE,EACApE,EAAAK,YAAAA,EApCAiE,GAIA,SAAAH,IAEAnD,EAAAxX,MAAA,GACAyX,EAAAzX,MAAA,GACA0X,EAAA1X,MAAA,GACAgR,EAAAhR,MAAAwW,EAAAE,YAAAlR,eAAA,MA8DA,SAAAqU,EAAAkB,EAAA9b,EAAA+b,GAEA,GADA7E,EAAAlX,EACA+b,EACAlE,GAAA,EACAC,EAAAA,EAAAkE,IAAA9R,GACAA,EAAAlK,IAAAA,GAEA8b,EAAA,IAEAA,EAAA,GAEA,IACA5R,EACAE,SAAA0R,EACAxE,YAAAwE,EAAA5R,EAAAmE,eAKAnE,OAGA,CAEA2N,GAAA,EACA,IAAAoD,EAAA3U,WAAAwV,EAAAlV,QAAA,KAAA,KACAkR,EAAAA,EAAAkE,IAAA9R,GACAA,EAAAlK,IAAAA,GACA,IAAA8b,IAEAA,EAAA,GAGAjV,MAAAoU,EAAA/Q,EAAAE,UAWA,IACAF,EACAmE,aAAA,EACAiJ,YAAA,GAZA,IACApN,EACAmE,aAAA4M,EACA3D,YAAA2D,EAAA/Q,EAAAE,WAgBAF,GAMAsP,IAeA7Y,eAAAsb,EAAAjc,GAEA,IACA,MAAAY,QAAAC,MAAA,GAAAmB,SAAAC,0BAAAjC,KACAc,QAAAF,EAAAK,OAIA,GAAAH,EAAAmO,MAAA,EAAA,CACA,MAAAjP,GAAAA,EAAAmK,OAAAA,EAAAkE,aAAAA,EAAAY,MAAAA,EAAA3B,cAAAA,GAAAxM,EACAsW,EAAA,CACApX,GAAAA,EACAmK,OAAAA,EACAC,SAAA,EACAkD,cAAAA,EACAe,aAAAA,EACAhE,OAAA/D,WAAA+H,GACAgJ,gBAAA/Q,WAAA+H,GACAiJ,YAAAjJ,EACAY,MAAAA,GAGA6I,EAAAoE,KAAAhS,GAAAA,EAAAlK,IAAAA,GAMAmF,KAAAC,KAAA,CACAC,KAAA,UAEA0N,KAAA,mDANA+E,EAAA1E,KAAAgE,GACAoC,UAUArU,KAAAC,KAAA,CACAC,KAAA,QAEA0N,KAAA,yCAKA,MAAA7R,KAMA,SAAA4F,EAAAJ,GAEA,IAAAC,EAAAL,WAAAI,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAAJ,eAAA,MAGA,SAAAyD,EAAAH,GACA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAGA,SAAAxI,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAGAZ,eAAAgR,IACA3H,EAAAyH,GAEA,IACA,MAAA7Q,QAAAC,MAAAmB,SAAAC,OAAA,wBACAnB,QAAAF,EAAAK,OAGAyQ,EAAA7R,SAAA0K,cAAA,UACAmH,EAAAxM,YAAA,4BACAwM,EAAA3Q,MAAA,IAMAD,EAAAmJ,QAAA4B,IAEA,MAAAwD,EAAAxP,SAAA0K,cAAA,UACA8E,EAAAtO,MAAA8K,EAAA7L,GACAqP,EAAAnK,YAAA2G,EAAA1B,OAEA0B,EAAA7L,IAAA4L,IAEAyD,EAAAC,UAAA,GAGAmC,EAAA7G,YAAAyE,KAIA7O,EAAA,mBAAAmP,UACAnP,EAAA,eAAAmP,QAAA,CACAC,MAAA,eAEAgD,EAAAhH,GACA,MAAA1K,IAGAV,EAAA,oBAAAmP,UACAnP,EAAA,eAAAmP,QAAA,CACAC,MAAA,gBA92BA,WACA,MAAAuM,EAAA,IAAAC,IAAAtG,OAAA9T,UACAqa,EAAA,IAAAC,gBAAAH,EAAAzU,QACA,GAAA2U,EAAAE,MACAxR,EAAAyR,KAAAH,EAAAI,IAAA,OAYA9b,iBACA,MAAAoB,EAAA,GAAAC,SAAAC,uBAAA8I,IACA,IACA,MAAAnK,QAAAC,MAAAkB,IAOA,SAAAjB,GACA8K,EAAA9K,EAAAkR,WAEA,MAAA0K,EAAA5b,EAAAwH,gBACAC,EAAAzH,EAAAyH,MACAC,EAAAzH,MAAAwH,EAAAU,OAGA,IAAAuO,EAAA,EAEAkF,EAAAzS,QAAA0S,IACAvF,EAAA,CACApX,GAAA2c,EAAA3c,GACAmK,OAAAwS,EAAAxS,OACAC,SAAAuS,EAAAvS,SACAkD,cAAAqP,EAAArP,cACAe,aAAAsO,EAAAC,eACAvS,OAAAsS,EAAAtS,OACAgN,gBAAAsF,EAAAtO,aACAiJ,YAAAqF,EAAAC,eAAAD,EAAAvS,SACA6E,MAAA3I,WAAAqW,EAAA1N,OAAA3I,WAAAqW,EAAAvS,WAGAoN,EAAAlR,WAAAkR,GAAAlR,WAAAqW,EAAAtO,cAAAsO,EAAAvS,SACA0N,EAAA1E,KAAAgE,KAYAoC,IAEAxB,EAAAjX,MAAAyW,EAAAjR,eAAA,MACA2R,EAAAnX,MAAAD,EAAAyH,MAAAmP,UAAA,IACAS,EAAApX,MAAAuF,WAAAxF,EAAAyH,MAAAa,eAAA7C,eAAA,OAEA,IAAAgC,EAAAW,gBAAA,IAAAX,EAAAsU,gBAAA,IAAAtU,EAAAuU,iBAAA,IAAAvU,EAAAwU,mBAAAC,MAAAzU,EAAA4B,UACA8O,EAAAzP,UAAAjI,OAAA,UACAmX,EAAA3X,MAAAwH,EAAAW,eACAyP,EAAA5X,MAAAwH,EAAAsU,eACAjE,EAAA7X,MAAAwH,EAAAuU,gBACAjE,EAAA9X,MAAAwH,EAAAwU,kBACAjE,EAAA/X,MAAAwH,EAAA0U,eAGA,GAAA,GAAA1U,EAAAgB,aAAA,GAAAhB,EAAAgB,YAAA,CACA,IAAA2T,EAAA,GAGAA,EADA,GAAA3U,EAAAgB,YACA1J,SAAAC,cAAA,kCAEAD,SAAAC,cAAA,kCAGAod,EAAA5N,UAAA,EACAmJ,EAAA1X,MAAAuF,WAAAiC,EAAAe,SAAA/C,eAAA,MACAwL,EAAAhR,OAAAwH,EAAAc,MAAAd,EAAAe,SAAA/C,eAAA,MACA8R,EAAA7O,UAAAG,IAAA,UACA2O,EAAA9O,UAAAjI,OAAA,WArEA4b,OADAvc,EAAAK,QAEA,MAAAC,KAjBAkc,GAEAzL,MAIAyH,IACAzH,KA/MA0L,GAGA1c,iBAGA,IACA,MAAAC,QAAAC,MAAAmB,SAAAC,OAAA,yBACAnB,QAAAF,EAAAK,OACAkW,EAAArW,EAoCA,SAAAqW,GAEA+B,EAAA1U,iBAAA,SAAA,SAAAC,GACAA,EAAA6Y,iBAEA,MAAAC,EAAA9Y,EAAAC,OAAA3D,MAOA,GAAA,SAAAyc,KAJAD,GAmBArE,EAAA1U,iBAAA,UAAAC,IACA,GAAA,IAAAA,EAAAgZ,QAAA,CACA,MAAAC,EAAAvG,EAAA4C,OAAA7P,GAGAA,EAAAjB,OAAA0U,eAAAlZ,EAAAC,OAAA3D,MAAA4c,eAIAD,EAAA5K,OAAA,IAEAmJ,EAAAyB,EAAA,GAAA1d,IACAyE,EAAAC,OAAA3D,MAAA,WA3BA,CACA,MAAA2c,EAAAvG,EAAA4C,OAAA7P,GAGAA,EAAAjB,OAAA0U,eAAAlZ,EAAAC,OAAA3D,MAAA4c,eAIAD,EAAA5K,OAAA,IAEAmJ,EAAAyB,EAAA,GAAA1d,IACAyE,EAAAC,OAAA3D,MAAA,QA1DA6c,CAAAzG,GAIA,MAAAzF,EAAA7R,SAAA0K,cAAA,UACAmH,EAAAxM,YAAA,6BACAwM,EAAA3Q,MAAA,IAEAoY,EAAAvO,YAAA8G,GACA5Q,EAAAmJ,QAAAC,IAEA,MAAAmF,EAAAxP,SAAA0K,cAAA,UACA8E,EAAAtO,MAAAmJ,EAAAlK,GACAqP,EAAAnK,YAAAgF,EAAAC,OAGAgP,EAAAvO,YAAAyE,KAIA7O,EAAA,oBAAAmP,UACAnP,EAAA,eAAAmP,QAAA,CACAC,MAAA,eAEA,MAAA1O,IAGAV,EAAA,oBAAAmP,UACAnP,EAAA,eAAAmP,QAAA,CACAC,MAAA,eAtCAiO,GAiGA9F,EAAAvT,iBAAA,SAAA,YAiMA,WAEA,GAAA,GAAAsT,EAAAhF,OAOA,YANA3N,KAAAC,KAAA,CACAC,KAAA,QAEA0N,KAAA,4CAMA,GAAA,GAAAqF,EAAArX,OACA,GAAA0Q,EAAA1Q,MAOA,YANAoE,KAAAC,KAAA,CACAC,KAAA,QAEA0N,KAAA,kHAaApS,iBAKA,MAAAgB,EAAA,IAAAC,SACAmJ,GACApJ,EAAAE,OAAA,KAAAkJ,GAEApJ,EAAAE,OAAA,iBAAAic,KAAAC,UAAAjG,IACAnW,EAAAE,OAAA,gBAAA0V,EAAAE,aACA9V,EAAAE,OAAA,QAAA0V,EAAAK,aAEAjW,EAAAE,OAAA,QAAA0V,EAAAI,OACAhW,EAAAE,OAAA,YAAA0V,EAAAG,WACA/V,EAAAE,OAAA,cAAAuW,EAAArX,OACA,GAAAqX,EAAArX,OACAid,YAAA,EACA,IAAAvF,EAAA1X,QACAid,YAAAvF,EAAA1X,OAEAY,EAAAE,OAAA,QAAAmc,aACArc,EAAAE,OAAA,QAAAkQ,EAAAhR,OACAY,EAAAE,OAAA,aAAA4P,EAAA1Q,OACAY,EAAAE,OAAA,UAAAmc,aACA1X,WAAA0X,aAAA1X,WAAAiR,EAAAE,aACA9V,EAAAE,OAAA,SAAA,GAEAF,EAAAE,OAAA,SAAA,KAIAF,EAAAE,OAAA,SAAA,GACAF,EAAAE,OAAA,UAAA0V,EAAAE,cAeA,IAAA1V,EAVAJ,EAAAE,OAAA,iBAAA6W,EAAA3X,OACAY,EAAAE,OAAA,iBAAA8W,EAAA5X,OACAY,EAAAE,OAAA,kBAAA+W,EAAA7X,OACAY,EAAAE,OAAA,oBAAAgX,EAAA9X,OACAY,EAAAE,OAAA,gBAAAiX,EAAA/X,OAQAgB,EADAgJ,EACA/I,SAAAC,OAAA,oBAEAD,SAAAC,OAAA,mBAIA,IAEA,MAAArB,QAAAC,MAAAkB,EAAA,CACAI,OAAA,OACAD,KAAAP,IAEAb,QAAAF,EAAAK,OAGAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAKAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAkBA,WACAuI,EAAA,KACA+M,EAAA,GACAV,EAAA,CACApX,GAAA,GACAmK,OAAA,GACAC,SAAA,GACAkD,cAAA,GACAe,aAAA,GAEAgJ,gBAAA,GACAC,YAAA,GACArI,MAAA,IAEAsI,EAAA,CACAC,oBAAA,GACAC,YAAA,GACAC,UAAA,GACAC,MAAA,IAKA,MAAAwB,EAAA3Y,EAAA,oBAEAiR,EAAAjR,EAAA,mBAEA2Y,EAAAjE,IAAA,KAAAqE,QAAA,kBAEA9H,EAAAyD,IAAA,KAAAqE,QAAA,kBAIAnB,EAAArE,UAAA,gMAMAwE,EAAAxX,MAAA,GACAyX,EAAAzX,MAAA,GACA0X,EAAA1X,MAAA,GACAgR,EAAAhR,MAAA,GACAkY,EAAAzP,UAAAC,SAAA,WACAwP,EAAAzP,UAAAG,IAAA,UAEA,MAAA0O,EAAAxY,SAAAC,cAAA,iBACAwY,EAAAzY,SAAAC,cAAA,gBACAwY,EAAA9O,UAAAC,SAAA,WACA6O,EAAA9O,UAAAG,IAAA,UAEA0O,EAAA7O,UAAAC,SAAA,WAEA4O,EAAA7O,UAAAjI,OAAA,UAIA6X,IACAE,IACAE,IAvEAyE,IAEAlG,EAAAxX,UAAA,EACAoC,WAAA,KACArB,KACA,KACA,MAAAJ,KAhGAgd,GA3NAC,MAGA/F,EAAA5T,iBAAA,UAAA,WAEAyU,EAAAzP,UAAAC,SAAA,WACAwP,EAAAzP,UAAAjI,OAAA,UAEA8W,EAAA7O,UAAAC,SAAA,WACA4O,EAAA7O,UAAAjI,OAAA,UAEA+W,EAAA9O,UAAAC,SAAA,WACA6O,EAAA9O,UAAAjI,OAAA,UAKA,GAAA6W,EAAArX,OAEA0X,EAAA1X,MAAA,GACAgR,EAAAhR,MAAAwW,EAAAE,YAAAlR,eAAA,MACA+S,IACAZ,EAAAuB,UAAA,EACAtB,EAAAsB,UAAA,EACArB,EAAAqB,UAAA,EACApB,EAAAoB,UAAA,EACAnB,EAAAmB,UAAA,EACAjB,EAAAzY,UAAA,EACA8X,EAAA7O,UAAAG,IAAA,YAGAiC,EAAA,KACA8M,EAAAuB,UAAA,EACAtB,EAAAsB,UAAA,EACArB,EAAAqB,UAAA,EACApB,EAAAoB,UAAA,EACAnB,EAAAmB,UAAA,EACAjB,EAAAzY,UAAA,EACA0Y,EAAAzP,UAAAG,IAAA,UACA2O,EAAA9O,UAAAG,IAAA,cAQAoP,EAAAvU,iBAAA,SAAA,WAEAyU,EAAAzP,UAAAC,SAAA,WAEAwP,EAAAzP,UAAAjI,OAAA,aAIAyX,EAAAxU,iBAAA,SAAA,WACA8U,IACAL,EAAAzP,UAAAG,IAAA,aAGA4O,EAAA/T,iBAAA,SAuYA,SAAAC,GACA8T,EAAAxX,MAAA+F,EAAArC,EAAAC,OAAA3D,OACA,MACAqd,EADA9X,WAAAiS,EAAA,MAAA3R,QAAA,KAAA,KACA2Q,EAAAE,YACAe,EAAAzX,MAAAqd,EAAA7X,eAAA,SAzYAkS,EAAAjU,iBAAA,SA4YA,SAAAC,GAEAgU,EAAA1X,MAAA+F,EAAArC,EAAAC,OAAA3D,OACA,MAAAid,EAAA1X,WAAAmS,EAAA,MAAA7R,QAAA,KAAA,KACAkL,EAAAyF,EAAAE,YAAAuG,EACAjM,EAAAhR,MAAA+Q,EAAAvL,eAAA,SA/YA4R,EAAA3T,iBAAA,SAurBA,SAAAC,GACA,GAAA,GAAAqT,EAAAhF,OAEA,YADAqF,EAAApX,MAAA,GAIAoX,EAAApX,MAAA+F,EAAArC,EAAAC,OAAA3D,OACA,MAAA0W,EAAAnR,WAAA6R,EAAA,MAAAvR,QAAA,KAAA,KAEA,IAAAyC,EAAA,EACAyO,EAAA7N,QAAAC,IACAb,GAAAa,EAAAE,SAAAF,EAAAmN,kBAGA,MAAAK,EAAA,IAAA,IAAAD,EAAApO,EAEA6O,EAAAnX,MAAA8F,MAAA+U,OAAAlE,EAAAnJ,QAAA,KAAA,KAAAqN,OAAAlE,EAAAnJ,QAAA,IAAA,IAIAgJ,EAAAE,YAAAA,EACAF,EAAAG,UAAAA,EAEAgE,OA5sBAlb,EAAA,oBAAAoE,GAAA,kBAAA,SAAAH,GAEAwX,EAAAxX,EAAAC,OAAA3D,UAEAP,EAAA,mBAAAoE,GAAA,kBAAA,SAAAH,GACA,GAAAA,EAAAC,OAAA3D,MAEA6R,EAAAnO,EAAAC,OAAA3D,OAEAuY,QAzPA,GCAA,WACA,MAAA+E,EAAAxe,SAAAC,cAAA,iBACAwe,EAAAze,SAAAC,cAAA,WACA,GAAAue,GAAAC,EAAA,CAEA9d,EAAA,UAAAoE,GAAA,QAAA,SAAA,SAAAH,IAKA9D,eAAAX,GAEAQ,EAAA,eAAAC,MAAA,QAEA,MAAAsB,EAAA,GAAAC,SAAAC,uBAAAjC,IACA,IACA,MAAAY,QAAAC,MAAAkB,IAWA,SAAAjB,GACA,MAAAwH,gBAAAA,EAAAC,MAAAA,GAAAzH,EAEA0H,EAAA3I,SAAAC,cAAA,iBACA2I,EAAA5I,SAAAC,cAAA,kBACA4I,EAAA7I,SAAAC,cAAA,gBAEA6I,EAAA9I,SAAAC,cAAA,gBACA8I,EAAA/I,SAAAC,cAAA,uBACA+I,EAAAhJ,SAAAC,cAAA,kBACAgJ,EAAAjJ,SAAAC,cAAA,gBACAiJ,EAAAlJ,SAAAC,cAAA,iBACAkJ,EAAAnJ,SAAAC,cAAA,iBAEA0I,EAAAtD,YAAAqD,EAAAU,OACAR,EAAAvD,YAAAqD,EAAAW,eACAR,EAAAxD,YAAAqD,EAAAY,MACAR,EAAAzD,YAAAoB,WAAAiC,EAAAa,eAAA7C,eAAA,MACAqC,EAAA1D,YAAAoB,WAAAiC,EAAAc,OAAA9C,eAAA,MACAsC,EAAA3D,YAAAoB,WAAAiC,EAAAe,SAAA/C,eAAA,MACAuC,EAAA5D,YAAAoB,WAAAiC,EAAAa,cAAAb,EAAAe,SAAA/C,eAAA,MAGA,GAAAgC,EAAAgB,cACAR,EAAA7D,YAAA,SAEA,GAAAqD,EAAAgB,cACAR,EAAA7D,YAAA,gBAEA,GAAAqD,EAAAgB,cACAR,EAAA7D,YAAA,cAEA8D,EAAAQ,UAAAC,SAAA,gBACAT,EAAAQ,UAAAjI,OAAA,eAEAyH,EAAAQ,UAAAC,SAAA,iBACAT,EAAAQ,UAAAjI,OAAA,gBAEA,GAAAgH,EAAAmB,QACAV,EAAA9D,YAAA,YACA8D,EAAAQ,UAAAG,IAAA,iBAEAX,EAAA9D,YAAA,SACA8D,EAAAQ,UAAAG,IAAA,iBAIA,MAAAC,EAAA/J,SAAAC,cAAA,0BA4BA,SAAA+J,GAEA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,aA9BAE,CAAAJ,GAKAtB,EAAA2B,QAAAC,IACA,MAAAC,OAAAA,EAAAC,SAAAA,EAAAC,OAAAA,GAAAH,EACAI,EAAAzK,SAAA0K,cAAA,MACAC,EAAA3K,SAAA0K,cAAA,MACAC,EAAAtF,YAAAiF,EACA,MAAAM,EAAA5K,SAAA0K,cAAA,MACAE,EAAAvF,YAAAkF,EACA,MAAAM,EAAA7K,SAAA0K,cAAA,MACAG,EAAAxF,YAAAoB,WAAA+D,GAAA9D,eAAA,MACA,MAAAoE,EAAA9K,SAAA0K,cAAA,MACAI,EAAAzF,YAAAoB,WAAA+D,EAAAD,GAAA7D,eAAA,MAGA+D,EAAAM,YAAAJ,GACAF,EAAAM,YAAAH,GACAH,EAAAM,YAAAF,GACAJ,EAAAM,YAAAD,GAEAf,EAAAgB,YAAAN,KAhFAO,OADAjK,EAAAK,QAEA,MAAAC,KAXA4J,CAFArG,EAAAI,cAAAC,QAAAiG,aANA,GCAA,WAEA,GADAlL,SAAAC,cAAA,eADA,GCAA,WAIA,GADAD,SAAAC,cAAA,YACA,CACA,MAAAkM,EAAAnM,SAAAC,cAAA,qBACAmM,EAAApM,SAAAC,cAAA,sBACAoM,EAAArM,SAAAC,cAAA,mBACAqM,EAAAtM,SAAAC,cAAA,uBAIAsM,GADAvM,SAAAC,cAAA,0BACAD,SAAAC,cAAA,2BACAuM,EAAAxM,SAAAC,cAAA,0BACAwM,EAAAzM,SAAAC,cAAA,yBACAyM,EAAA1M,SAAAC,cAAA,yBACA0M,EAAA3M,SAAAC,cAAA,6BACA2M,EAAA5M,SAAAC,cAAA,4BAEAqJ,EAAAtJ,SAAAC,cAAA,UA2CAa,eAAAgM,EAAAxD,GAEA,MAAAxH,EAAA,IAAAC,SACAD,EAAAE,OAAA,QAAAsH,GACA,MAAApH,EAAAC,SAAAC,OAAA,oBAEA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAI,OAAA,OACAD,KAAAP,IAEAb,QAAAF,EAAAK,OACAE,QAAAC,IAAAN,GA9BA,SAAAA,GAEAkL,EAAA9G,YAAApE,EAAAyd,iBACAtS,EAAA/G,YAAApE,EAAAmL,UACAC,EAAAhH,YAAApE,EAAAoL,OACAC,EAAAjH,YAAApE,EAAA0d,iBAIApS,EAAAlH,YAAApE,EAAAsL,cACAC,EAAAnH,YAAApE,EAAAuL,cACAC,EAAApH,YAAApE,EAAAwL,aACAC,EAAArH,YAAApE,EAAAyL,aACAC,EAAAtH,YAAApE,EAAA0L,iBACAC,EAAAvH,YAAApE,EAAA2L,gBAkBAC,CAAA5L,GACA,MAAAI,GACAC,QAAAC,IAAAF,IA1DAiI,EAAA3E,iBAAA,SAAA,SAAAC,GAEAkI,EAAAlI,EAAAC,OAAA3D,UAMA,WACA,MAAA0d,EAAA,IAAAC,KAMAC,EAHA,IAAAD,KAAAD,EAAAG,UAAA,MAGAC,cAAAC,MAAA,EAAA,IACA3V,EAAApI,MAAA4d,EAGAhS,EAAAxD,EAAApI,OAbAge,IA1BA,GCAA,WAEA,GADAlf,SAAAC,cAAA,WACA,CACA,IAAAkf,EAkJA,SAAA1d,IACAzB,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAyB,SAlJAf,EAAA,UAAAoE,GAAA,QAAA,WAAA,SAAAH,GACAzE,GAAAyE,EAAAI,cAAAC,QAAAiG,QAcApK,eAAAX,GAEA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GACA,MAAA+B,EAAAC,SAAAC,OAAA,qBACA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAI,OAAA,OACAD,KAAAP,IAGAb,QAAAF,EAAAK,OAIA,GAFAK,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,UAEA,CAEA,MAAAyc,EAAAjf,EAAAkf,WACApJ,OAAA9T,SAAA,mBAAAmd,KAAAF,GAIAtc,WAAA,KACArB,KACA,KACA,MAAAJ,KA3CAke,CAAApf,OAKAQ,EAAA,UAAAoE,GAAA,QAAA,aAAA,SAAAH,IA2CA,SAAAzE,EAAAyE,GAEA,MAAA4a,EAAA5a,EAAAI,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAGAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,wFAAA+Z,6DAEA9Z,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAMAjF,eAAAX,GACA,MAAA2B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAA7B,GAEA+B,IAAAC,SAAAC,OAAA,sBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAP,EACAQ,OAAA,SAEArB,QAAAF,EAAAK,OACAE,QAAAC,IAAAN,GAGAQ,IAEA,SAAAR,EAAAsB,KACA5B,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAhC,EAAAX,UAAAwC,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACArB,KACA,KAGA0d,EAAAvc,KAAAC,UAEA,MAAAxB,KA5CAoe,CAAAtf,KAzDAuf,CADA9a,EAAAI,cAAAC,QAAAiG,QACAtG,MA6GAjE,EAAA,UAAAmD,YAAAC,YAEAob,EAAAxe,EAAA,UAAAqD,UAAA,CACApB,KAAA,cACAqB,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,KApIA","file":"bundle.js","sourcesContent":["(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        // const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        // const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        // const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        // const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n      \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            // dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            // dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio: '',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n         \r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n\r\n\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"3\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-3');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-1');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n\r\n                inputPrecioLibre.oninput = () => {\r\n\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto => {\r\n                        total_libre = total_libre + producto.precio * producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value = total_libre.toLocaleString('en');\r\n                }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio: parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n  \r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        // const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n        \r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n        \r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos_totales\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.total_inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n    \r\n            revisarPagosAsociados(id);\r\n\r\n      \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n    \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n      \r\n                 const resultado = await respuesta.json();\r\n          \r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}