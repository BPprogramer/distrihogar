{"version":3,"sources":["fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","mercado/infoVenta.js","mercado/mercadolibre.js","inicio/index.js","clientes/clientes.js","cajas/cajas.js","categorias/categorias.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","proveedores/proveedores.js","productos-ventas/index.js","usuarios/login.js","usuarios/usuario.js","transacciones/egresos.js","transacciones/ingresos.js"],"names":["document","querySelector","selectClientes","async","respuesta","fetch","location","origin","resultado","json","console","log","opcionDisabled","createElement","textContent","value","appendChild","forEach","cliente","opcion","id","nombre","$","select2","theme","error","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","formulario","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","isNaN","parseFloat","toLocaleString","consultarInfoCliente","limpiarHtml","fiados","length","Swal","fire","icon","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","type","tdInfo","divInfo","btnInfo","innerHTML","onclick","modal","msg","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","datos","FormData","append","url","method","body","eliminarToastAnterior","Toasts","class","title","setTimeout","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","remove","addEventListener","e","valor","target","deudaSinFormat","replace","monto_ingresado","valor_sin_formato","formatearValor","on","reset","disabled","val","validator","setDefaults","submitHandler","enviarDatos","validate","rules","required","customValidation","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","total_factura","metodo_pago","contains","mostrarInfoVenta","consultarInfoVenta","currentTarget","dataset","ventaId","tablaMercadoLibre","pagosAuto","dataTable","fnDestroy","DataTable","ajax","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","ingresos","ganancias","costos","inventario","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","mostrarInfo","cargarInformacion","tablaClientes","btnRegistrarCliente","cedula","celular","direccion","email","accionesModal","btnSubmit","inicializarValidador","llenarFormulario","consultarCliente","trim","reload","minlength","digits","rangelength","clienteId","parentElement","childNodes","eliminarCliente","alertaEliminarCliente","event","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","consultarCaja","efectivo_apertura","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","idAnterior","listadoProductos","productoObj","precio_compra","precio_venta","precio_original","valor_total","stock","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","productoId","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","toFixed","calcularTotal","parametro","aux","map","consultarInfoProducto","some","selected","urlActual","URL","window","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","JSON","stringify","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","ingresos_totales","total_inventario","fecha_actual_utc","Date","fecha_actual_formateada","getTime","toISOString","slice","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","open","imprimirVenta","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","porcentaje","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock_minimo","consultarCategorias","categorias","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","tablaProductosVendidos","input_fecha_inicial","input_fecha_final","fecha_actual","fecha_final","getFullYear","getMonth","getDate","setMonth","fecha_inicial","consultarProductosVendidos","dataFilter","data","jsonData","parse","newJson","row","index","parseInt","existe","indexProducto","dataType","success","req","resposeText","password","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n\r\n                console.log(resultado)\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        // const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        // const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        // const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        // const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n      \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            // dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            // dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio: '',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n         \r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n\r\n\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"3\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-3');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-1');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n\r\n                inputPrecioLibre.oninput = () => {\r\n\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto => {\r\n                        total_libre = total_libre + producto.precio * producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value = total_libre.toLocaleString('en');\r\n                }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio: parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n  \r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        // const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n        \r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n        \r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos_totales\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.total_inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n    \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n    \r\n            revisarPagosAsociados(id);\r\n\r\n      \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            console.log(ventaId)\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n        $('#tabla').on('click', '#imprimir', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            imprimirVenta(ventaId);\r\n        })\r\n\r\n        async function imprimirVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/imprimir-venta?id=${id}`;\r\n            window.open(url, \"_blank\");\r\n         \r\n            // try {\r\n            //     const respuesta = await fetch(url)\r\n            //     const resultado = await respuesta.json();\r\n            //     console.log(resultado)\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n     \r\n          \r\n        }\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n    \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n      \r\n                 const resultado = await respuesta.json();\r\n          \r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        let tablaProductosVendidos;\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function () {\r\n    const productos_vendidos = document.querySelector('#productos-vendidos');\r\n    if (productos_vendidos) {\r\n\r\n        let tablaProductosVendidos;\r\n        const input_fecha_inicial = document.querySelector('#fecha-inicial');\r\n        const input_fecha_final = document.querySelector('#fecha-final');\r\n\r\n        const fecha_actual = new Date();\r\n\r\n\r\n        let fecha_final = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n        // Obtener la fecha actual restada un mes\r\n        fecha_actual.setMonth(fecha_actual.getMonth() - 1);\r\n        let fecha_inicial = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n\r\n\r\n        cargarInputs();\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\r\n            input_fecha_inicial.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n            input_fecha_final.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n\r\n            // consultarProductosVendidos();\r\n\r\n        });\r\n\r\n        function cargarInputs() {\r\n            input_fecha_inicial.value = fecha_inicial\r\n            input_fecha_final.value = fecha_final\r\n            consultarProductosVendidos()\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        function consultarProductosVendidos() {\r\n\r\n\r\n            const fechaObjeto_1 = new Date(fecha_inicial);\r\n            const fechaObjeto_2 = new Date(fecha_final);\r\n\r\n            if (fechaObjeto_1 >= fechaObjeto_2) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: \"Error\",\r\n                    text: \"La fecha inicial debe ser menor que la fecha final\",\r\n\r\n                });\r\n                return;\r\n            } else {\r\n                const datos = new FormData();\r\n                datos.append(\"fecha_inicial\", fecha_inicial);\r\n                datos.append(\"fecha_final\", fecha_final);\r\n\r\n                $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n                tablaProductosVendidos = $('#tabla').DataTable({\r\n                    ajax: {\r\n                        url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                        dataFilter: function (data) {\r\n                            const jsonData = JSON.parse(data);\r\n                            let newJson = [];\r\n                            let newArray = [];\r\n                            const datos = jsonData.data;\r\n                            console.log(datos)\r\n                            // Iterar sobre los datos y sumar las cantidades por ID de producto\r\n                            datos.forEach(function (row, index) {\r\n                                let idProducto = row[1]; // Obtener el ID del producto\r\n                                let cantidad = parseInt(row[4]) // Obtener la cantidad (convertida a número)\r\n                                if (newJson.length > 0) {\r\n                                    let existe = false;\r\n                                    newJson.forEach((producto, indexProducto) => {\r\n                                            if(producto[1]==row[1]){\r\n                                                newJson[indexProducto][4] =  parseInt(newJson[indexProducto][4]) + parseInt(row[4]);\r\n                                                newJson[indexProducto][6] = parseInt(newJson[indexProducto][4])*parseInt(newJson[indexProducto][5])\r\n                                                existe = true;\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                    if(existe == false){\r\n                                        newJson.push(row);\r\n                                    }\r\n                                } else {\r\n                                    newJson.push(row);\r\n                                }\r\n\r\n                               \r\n\r\n\r\n\r\n                                // // Sumar la cantidad al total correspondiente al ID de producto\r\n                                // if (sumasPorProducto.hasOwnProperty(idProducto)) {\r\n                                //     sumasPorProducto[idProducto] += cantidad;\r\n                                // } else {\r\n                                //     sumasPorProducto[idProducto] = cantidad;\r\n                                // }\r\n                            });\r\n                            console.log(newJson);\r\n\r\n                            // Crear un nuevo arreglo de datos con los totales por ID de producto\r\n\r\n                            // let nuevosDatos = [];\r\n                            // Object.keys(sumasPorProducto).forEach(function (idProducto) {\r\n                            //     nuevosDatos.push([idProducto, sumasPorProducto[idProducto]]);\r\n                            // });\r\n\r\n\r\n                            // Devolver los datos procesados como una cadena JSON\r\n                            return JSON.stringify({ data: newJson });\r\n                        }\r\n                    },\r\n                    \"deferRender\": true,\r\n                    \"retrieve\": true,\r\n                    \"proccesing\": true,\r\n                    responsive: true,\r\n                    initComplete: function () {\r\n                        // Inicializa los botones después de que la tabla se haya creado\r\n                        var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                            buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                        }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                    }\r\n                });\r\n                // tablaProductosVendidos = $('#tabla').DataTable({\r\n                //     ajax: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                //     \"deferRender\":true,\r\n                //     \"retrieve\":true,\r\n                //     \"proccesing\":true,\r\n                //     responsive:true,\r\n                //     initComplete: function () {\r\n                //         // Inicializa los botones después de que la tabla se haya creado\r\n                //         var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                //             buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                //         }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                //     }\r\n                // });\r\n                $.ajax({\r\n\r\n                    url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n\r\n                    dataType: 'json',\r\n                    success: function (req) {\r\n                         console.log(req)\r\n\r\n                    },\r\n                    error: function (error) {\r\n                        console.log(error.resposeText)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        function calcularNuevoPrecioCompra() {\r\n            precio_compra_nuevo.value = '';\r\n\r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        async function enviarDatosStock() {\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n            btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                btnSubmitNewStock.disabled = false;\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatosStock()\r\n\r\n                }\r\n            });\r\n\r\n            $('#stockForm').validate({\r\n                rules: {\r\n\r\n\r\n                    nuevo_stock: {\r\n                        required: true\r\n                    },\r\n\r\n                    precio_compra_nuevo: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nuevo_stock: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    precio_compra_nuevo: {\r\n                        required: 'la nueva cantidad adquirida es obligatoria'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#stockForm').on('valid', function (event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , (descripcion.value).trim())\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();"]}