{"version":3,"sources":["cajas/cajas.js","categorias/categorias.js","clientes/clientes.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","proveedores/proveedores.js","usuarios/login.js","usuarios/usuario.js","ventas/cargar-productos.js","ventas/crear-ventas.js","ventas/ventas.js"],"names":["document","querySelector","btnAbrirCaja","formulario","btnSubmit","tablaCajas","id","efectivoAperturaInput","eliminarToastAnterior","remove","async","accionesModal","reset","disabled","$","modal","validate","resetForm","destroy","find","removeClass","respuesta","fetch","resultado","value","parseFloat","toLocaleString","llenarFormulario","json","error","console","log","consultarCaja","inicializarValidador","validator","setDefaults","submitHandler","datos","FormData","append","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","rules","efectivo_apertura","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","addEventListener","e","valor","valor_sin_formato","replace","isNaN","formatearValor","target","dataTable","fnDestroy","DataTable","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","deferRender","retrieve","proccesing","responsive","on","currentTarget","dataset","cajaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","event","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","trim","initComplete","fn","Buttons","buttons","container","appendTo","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","tablaClientes","btnRegistrarCliente","nombre","cedula","celular","direccion","email","consultarCliente","minlength","digits","rangelength","clienteId","cliente","eliminarCliente","alertaEliminarCliente","selectClientes","opcionDisabled","createElement","appendChild","forEach","opcion","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","consultarInfoCliente","limpiarHtml","fiados","length","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","referencia","firstChild","removeChild","deudaSinFormat","monto_ingresado","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","consultarProducto","productoId","eliminarProducto","alertaEliminarProducto","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","idProductoActualizarStock","calcularNuevoPrecioCompra","inicializarValidadorStock","enviarDatosStock","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","selectProductos","consultarProductos","ventaId","idAnterior","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","focusCantidad","productosArray","guardarVentaBtn","totalInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col3Div","group3Div","prepend3Div","inputPrecio","nuevo_precio_venta","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productos_venta","venta","productoVenta","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","metodo_pago","llenarInformacion","consultarVenta","leerDatosUrl","JSON","stringify","valor_abono","contains","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","some","consultarInfoProducto","tablaVentas","idString","toString","btoa","numero_venta","eliminarVenta"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    \r\n    \r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto:0,\r\n            deuda:0,\r\n            saldo:0,\r\n            cliente_id:''\r\n        }\r\n        \r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n        \r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function(){\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input',function(e){\r\n     \r\n            const valor = e.target.value;\r\n          \r\n            let deudaSinFormat =parseFloat(valor.replace(/,/g, ''));\r\n          \r\n            if (deudaSinFormat=='') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n         \r\n          \r\n             monto.value = monto_ingresado;\r\n            \r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n           \r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        function calcularSaldoRestante(){\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if(isNaN(datosDeuda.saldo )){\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$'+parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal(){\r\n        \r\n            formulario.reset();\r\n    \r\n            btnSumitPago.disabled = false;\r\n            if($('#selectClientes').val()!=0){\r\n                $('#modal-pago').modal('show');\r\n                \r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\"+parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                 inicializarValidador();\r\n             \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n            \r\n        }\r\n\r\n     \r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n                \r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n                \r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n                \r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n            \r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo,venta_id, total, recaudo, estado } = fiado;\r\n                if(estado!=0){\r\n                    ventasInpagas.push();\r\n                }\r\n      \r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = ()=>{\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n     \r\n       \r\n       \r\n           \r\n        }\r\n        \r\n        function mostrarInfoFiado(fiado, productos){\r\n          \r\n            \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n           \r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto =>{\r\n                const {nombre, cantidad, precio} = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                 tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio*cantidad)).toLocaleString('en');\r\n\r\n             \r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n        \r\n        }\r\n\r\n        async function consultarInfo(fiado){\r\n            $('#modal-info').modal('show');\r\n          \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);  \r\n                const resultado = await respuesta.json();\r\n                if(resultado.type=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                }else{\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n           \r\n            \r\n                \r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        \r\n        \r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n        \r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n        \r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        \r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function(value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        \r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n        \r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n        \r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaUsuarios, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if(seccionCrearVentas){\r\n        let tablaProductos;\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n\r\n        consultarProductos();\r\n\r\n        async function consultarProductos(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n                  \r\n                   \r\n                    selectProductos.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        leerDatosUrl();\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value == 2) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2) {\r\n                var optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (medotodoPago.value != 1) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total', valoresObj.total_pagar);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio unitario\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-3');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-3');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n            const idString = id.toString();\r\n\r\n            window.location = `/crear-venta?id=${btoa(idString)}`;\r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarProducto(ventaId,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado);\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}