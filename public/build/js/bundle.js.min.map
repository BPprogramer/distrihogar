{"version":3,"sources":["cajas/cajas.js","categorias/categorias.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","inicio/index.js","mercado/infoVenta.js","mercado/mercadolibre.js","clientes/clientes.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","proveedores/proveedores.js","transacciones/egresos.js","transacciones/ingresos.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js","usuarios/login.js","usuarios/usuario.js"],"names":["document","querySelector","btnAbrirCaja","formulario","btnSubmit","tablaCajas","id","efectivoAperturaInput","eliminarToastAnterior","remove","async","accionesModal","reset","disabled","$","modal","validate","resetForm","destroy","find","removeClass","respuesta","fetch","resultado","value","parseFloat","toLocaleString","llenarFormulario","json","error","console","log","consultarCaja","inicializarValidador","validator","setDefaults","submitHandler","datos","FormData","append","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","rules","efectivo_apertura","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","addEventListener","e","valor","valor_sin_formato","replace","isNaN","formatearValor","target","dataTable","fnDestroy","DataTable","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","deferRender","retrieve","proccesing","responsive","on","currentTarget","dataset","cajaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","event","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","trim","initComplete","fn","Buttons","buttons","container","appendTo","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","selectClientes","opcionDisabled","createElement","appendChild","forEach","cliente","opcion","nombre","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","consultarInfoCliente","limpiarHtml","fiados","length","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","deudaSinFormat","monto_ingresado","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","ingresos","ganancias","costos","inventario","ingresos_reales","ganancias_reales","dinero_fiados","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","dinero_mercado_libre","dinero_pendiente_mercado_libre","mostrarInfo","cargarInformacion","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","total_factura","metodo_pago","contains","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","dataType","success","req","resposeText","tablaClientes","btnRegistrarCliente","cedula","celular","direccion","email","consultarCliente","minlength","digits","rangelength","clienteId","eliminarCliente","alertaEliminarCliente","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","window","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","productoSeleccionado","productoPorCodigo","consultarProductos","JSON","stringify","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","fecha_actual","Date","setMonth","getMonth","fecha_actual_formateada","toISOString","slice","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","password","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n            console.log(resultado)\r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/mercadolibre',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n     \r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio:'',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre:''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n     \r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n               \r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function  productoPorCodigo(listadoProductos){\r\n            \r\n            codigoProducto.addEventListener('input',function(e){\r\n                e.preventDefault();\r\n                const productoSeleccionado = listadoProductos.filter(producto =>{\r\n\r\n                    \r\n                    return producto.codigo == e.target.value\r\n                })\r\n                if(productoSeleccionado.length>0){\r\n                \r\n                    consultarInfoProducto(productoSeleccionado[0].id)\r\n                    e.target.value = '';\r\n                }\r\n            })\r\n        }\r\n        \r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n           \r\n\r\n\r\n            if (medotodoPago.value != 1 ) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n          \r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio:productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if(venta.metodo_pago == 2){\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                }else{\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n        \r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (medotodoPago.value != 1) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n        \r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n       \r\n\r\n        \r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta,precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n            \r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n            \r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                 group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n    \r\n                inputPrecioLibre.oninput = () => {\r\n                   \r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    \r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto=>{\r\n                        total_libre = total_libre +  producto.precio*producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value =   total_libre.toLocaleString('en')            ;\r\n                }\r\n        \r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n             \r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio:parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n               \r\n\r\n\r\n        \r\n                resultado.forEach(cliente => {\r\n              \r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n                      \r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if (mercadolibre) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual = new Date();\r\n            fecha_actual.setMonth(fecha_actual.getMonth() - 1);\r\n            const fecha_actual_formateada = fecha_actual.toISOString().slice(0,10);\r\n            fecha.value = fecha_actual_formateada\r\n     \r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n\r\n            revisarPagosAsociados(id);\r\n\r\n           \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n                 const resultado = await respuesta.json();\r\n                 console.log(resultado)\r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n"]}