{"version":3,"sources":["fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","categorias/categorias.js","inicio/index.js","proveedores/proveedores.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","transacciones/egresos.js","transacciones/ingresos.js","usuarios/login.js","usuarios/usuario.js","clientes/clientes.js","ventas/cargar-productos.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas.js","ventas/ventas.js","cajas/cajas.js"],"names":["document","querySelector","selectClientes","async","respuesta","fetch","location","origin","resultado","json","opcionDisabled","createElement","textContent","value","appendChild","forEach","cliente","opcion","id","nombre","$","select2","theme","error","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","formulario","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","isNaN","parseFloat","toLocaleString","consultarInfoCliente","limpiarHtml","fiados","length","Swal","fire","icon","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","type","tdInfo","divInfo","btnInfo","innerHTML","onclick","modal","msg","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","datos","FormData","append","url","method","body","eliminarToastAnterior","Toasts","class","title","console","log","setTimeout","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","remove","addEventListener","e","valor","target","deudaSinFormat","replace","monto_ingresado","valor_sin_formato","formatearValor","on","reset","disabled","val","validator","setDefaults","submitHandler","enviarDatos","validate","rules","required","customValidation","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","tablaCategorias","btnRegistrarCategoria","categoria","accionesModal","btnSubmit","inicializarValidador","llenarFormulario","consultarCategoria","trim","ajax","reload","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","toUpperCase","currentTarget","dataset","categoriaId","parentElement","childNodes","eliminarCategoria","alertaEliminarCategoria","event","ingresos","ganancias","costos","inventario","ingresos_reales","ganancias_reales","dinero_fiados","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","mostrarInfo","cargarInformacion","tablaProveedores","btnRegistrarProvedor","celular","direccion","consultarCliente","minlength","digits","rangelength","proveedorId","proveedor","eliminarProveedor","alertaEliminarProveedor","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","llenarSelectProveedores","resetForm","destroy","find","consultarProducto","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","productoId","eliminarProducto","alertaEliminarProducto","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","idProductoActualizarStock","calcularNuevoPrecioCompra","inicializarValidadorStock","enviarDatosStock","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","dataType","success","req","resposeText","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","email","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","tablaClientes","btnRegistrarCliente","cedula","clienteId","eliminarCliente","alertaEliminarCliente","selectProductos","consultarProductos","ventaId","idAnterior","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","focusCantidad","productosArray","guardarVentaBtn","totalInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col3Div","group3Div","prepend3Div","inputPrecio","nuevo_precio_venta","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productos_venta","venta","productoVenta","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","metodo_pago","llenarInformacion","consultarVenta","leerDatosUrl","JSON","stringify","valor_abono","contains","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","some","consultarInfoProducto","metodoVenta","estadoVenta","mostrarInfoVenta","consultarInfoVenta","ticksStyle","fontColor","fontStyle","$salesChart","$visitorsChart","Chart","data","labels","datasets","backgroundColor","borderColor","options","maintainAspectRatio","tooltips","mode","intersect","hover","legend","display","scales","yAxes","gridLines","lineWidth","color","zeroLineColor","ticks","extend","beginAtZero","callback","xAxes","pointBorderColor","pointBackgroundColor","fill","suggestedMax","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","btnAbrirCaja","tablaCajas","efectivoAperturaInput","consultarCaja","efectivo_apertura","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n            console.log(resultado)\r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaUsuarios, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if(seccionCrearVentas){\r\n        let tablaProductos;\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n\r\n        consultarProductos();\r\n\r\n        async function consultarProductos(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n                  \r\n                   \r\n                    selectProductos.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        leerDatosUrl();\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value == 2) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2) {\r\n                var optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (medotodoPago.value != 1) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total', valoresObj.total_pagar);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio unitario\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-3');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-3');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const ventas = document.querySelector('#ventas');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","$(function () {\r\n    'use strict'\r\n  \r\n    var ticksStyle = {\r\n      fontColor: '#495057',\r\n      fontStyle: 'bold'\r\n    }\r\n  \r\n    var mode = 'index'\r\n    var intersect = true\r\n  \r\n    var $salesChart = $('#sales-chart')\r\n    // eslint-disable-next-line no-unused-vars\r\n    var salesChart = new Chart($salesChart, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n        datasets: [\r\n          {\r\n            backgroundColor: '#007bff',\r\n            borderColor: '#007bff',\r\n            data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n          },\r\n          {\r\n            backgroundColor: '#ced4da',\r\n            borderColor: '#ced4da',\r\n            data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        tooltips: {\r\n          mode: mode,\r\n          intersect: intersect\r\n        },\r\n        hover: {\r\n          mode: mode,\r\n          intersect: intersect\r\n        },\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          yAxes: [{\r\n            // display: false,\r\n            gridLines: {\r\n              display: true,\r\n              lineWidth: '4px',\r\n              color: 'rgba(0, 0, 0, .2)',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: $.extend({\r\n              beginAtZero: true,\r\n  \r\n              // Include a dollar sign in the ticks\r\n              callback: function (value) {\r\n                if (value >= 1000) {\r\n                  value /= 1000\r\n                  value += 'k'\r\n                }\r\n  \r\n                return '$' + value\r\n              }\r\n            }, ticksStyle)\r\n          }],\r\n          xAxes: [{\r\n            display: true,\r\n            gridLines: {\r\n              display: false\r\n            },\r\n            ticks: ticksStyle\r\n          }]\r\n        }\r\n      }\r\n    })\r\n  \r\n    var $visitorsChart = $('#visitors-chart')\r\n    // eslint-disable-next-line no-unused-vars\r\n    var visitorsChart = new Chart($visitorsChart, {\r\n      data: {\r\n        labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n        datasets: [{\r\n          type: 'line',\r\n          data: [100, 120, 170, 167, 180, 177, 160],\r\n          backgroundColor: 'transparent',\r\n          borderColor: '#007bff',\r\n          pointBorderColor: '#007bff',\r\n          pointBackgroundColor: '#007bff',\r\n          fill: false\r\n          // pointHoverBackgroundColor: '#007bff',\r\n          // pointHoverBorderColor    : '#007bff'\r\n        },\r\n        {\r\n          type: 'line',\r\n          data: [60, 80, 70, 67, 80, 77, 100],\r\n          backgroundColor: 'tansparent',\r\n          borderColor: '#ced4da',\r\n          pointBorderColor: '#ced4da',\r\n          pointBackgroundColor: '#ced4da',\r\n          fill: false\r\n          // pointHoverBackgroundColor: '#ced4da',\r\n          // pointHoverBorderColor    : '#ced4da'\r\n        }]\r\n      },\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        tooltips: {\r\n          mode: mode,\r\n          intersect: intersect\r\n        },\r\n        hover: {\r\n          mode: mode,\r\n          intersect: intersect\r\n        },\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          yAxes: [{\r\n            // display: false,\r\n            gridLines: {\r\n              display: true,\r\n              lineWidth: '4px',\r\n              color: 'rgba(0, 0, 0, .2)',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: $.extend({\r\n              beginAtZero: true,\r\n              suggestedMax: 200\r\n            }, ticksStyle)\r\n          }],\r\n          xAxes: [{\r\n            display: true,\r\n            gridLines: {\r\n              display: false\r\n            },\r\n            ticks: ticksStyle\r\n          }]\r\n        }\r\n      }\r\n    })\r\n  })\r\n  \r\n  // lgtm [js/unused-local-variable]\r\n  ","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n          \r\n\r\n            revisarPagosAsociados(id);\r\n\r\n           \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n                 const resultado = await respuesta.json();\r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();"]}