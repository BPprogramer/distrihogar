{"version":3,"sources":["clientes/clientes.js","cajas/cajas.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","inicio/index.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","categorias/categorias.js","productos-ventas/index.js","proveedores/proveedores.js","usuarios/login.js","usuarios/usuario.js","transacciones/egresos.js","transacciones/ingresos.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js","mercado/infoVenta.js","mercado/mercadolibre.js"],"names":["document","querySelector","tablaClientes","id","btnRegistrarCliente","formulario","nombre","cedula","celular","direccion","email","accionesModal","reset","btnSubmit","disabled","$","modal","inicializarValidador","async","respuesta","fetch","resultado","value","llenarFormulario","json","error","console","log","consultarCliente","eliminarToastAnterior","remove","validator","setDefaults","submitHandler","datos","FormData","append","trim","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","validate","rules","required","minlength","digits","rangelength","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","addEventListener","on","e","currentTarget","dataset","clienteId","cliente","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCliente","alertaEliminarCliente","event","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","parseFloat","toLocaleString","consultarCaja","efectivo_apertura","valor","valor_sin_formato","replace","isNaN","formatearValor","target","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","selectClientes","opcionDisabled","createElement","appendChild","forEach","opcion","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","consultarInfoCliente","limpiarHtml","fiados","length","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","deudaSinFormat","monto_ingresado","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","ingresos","ganancias","costos","inventario","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","mostrarInfo","cargarInformacion","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","categoria","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","toUpperCase","consultarProducto","eliminarProducto","alertaEliminarProducto","tablaCategorias","btnRegistrarCategoria","consultarCategoria","categoriaId","eliminarCategoria","alertaEliminarCategoria","tablaProductosVendidos","input_fecha_inicial","input_fecha_final","fecha_actual","Date","fecha_final","getFullYear","getMonth","slice","getDate","setMonth","fecha_inicial","consultarProductosVendidos","dataFilter","data","jsonData","JSON","parse","newJson","row","index","parseInt","existe","indexProducto","stringify","dataType","success","req","resposeText","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","ventaId","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productos_venta","venta","productoVenta","precio_factura","total_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","metodo_pago","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","valor_abono","contains","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","totalVentaSinComision","metodoVenta","estadoVenta","mostrarInfoVenta","consultarInfoVenta","ingresos_totales","total_inventario","fecha_actual_utc","fecha_actual_formateada","getTime","toISOString","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","open","imprimirVenta","tablaMercadoLibre","pagosAuto"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas-fiadas`);\r\n                const resultado =  await respuesta.json();\r\n\r\n                console.log(resultado)\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        // const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        // const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        // const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        // const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n      \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            // dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            // dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        let tablaProductosVendidos;\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function () {\r\n    const productos_vendidos = document.querySelector('#productos-vendidos');\r\n    if (productos_vendidos) {\r\n\r\n        let tablaProductosVendidos;\r\n        const input_fecha_inicial = document.querySelector('#fecha-inicial');\r\n        const input_fecha_final = document.querySelector('#fecha-final');\r\n\r\n        const fecha_actual = new Date();\r\n\r\n\r\n        let fecha_final = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n        // Obtener la fecha actual restada un mes\r\n        fecha_actual.setMonth(fecha_actual.getMonth() - 1);\r\n        let fecha_inicial = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n\r\n\r\n        cargarInputs();\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\r\n            input_fecha_inicial.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n            input_fecha_final.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n\r\n            // consultarProductosVendidos();\r\n\r\n        });\r\n\r\n        function cargarInputs() {\r\n            input_fecha_inicial.value = fecha_inicial\r\n            input_fecha_final.value = fecha_final\r\n            consultarProductosVendidos()\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        function consultarProductosVendidos() {\r\n\r\n\r\n            const fechaObjeto_1 = new Date(fecha_inicial);\r\n            const fechaObjeto_2 = new Date(fecha_final);\r\n\r\n            if (fechaObjeto_1 >= fechaObjeto_2) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: \"Error\",\r\n                    text: \"La fecha inicial debe ser menor que la fecha final\",\r\n\r\n                });\r\n                return;\r\n            } else {\r\n                const datos = new FormData();\r\n                datos.append(\"fecha_inicial\", fecha_inicial);\r\n                datos.append(\"fecha_final\", fecha_final);\r\n\r\n                $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n                tablaProductosVendidos = $('#tabla').DataTable({\r\n                    ajax: {\r\n                        url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                        dataFilter: function (data) {\r\n                            const jsonData = JSON.parse(data);\r\n                            let newJson = [];\r\n                            let newArray = [];\r\n                            const datos = jsonData.data;\r\n                            console.log(datos)\r\n                            // Iterar sobre los datos y sumar las cantidades por ID de producto\r\n                            datos.forEach(function (row, index) {\r\n                                let idProducto = row[1]; // Obtener el ID del producto\r\n                                let cantidad = parseInt(row[4]) // Obtener la cantidad (convertida a número)\r\n                                if (newJson.length > 0) {\r\n                                    let existe = false;\r\n                                    newJson.forEach((producto, indexProducto) => {\r\n                                            if(producto[1]==row[1]){\r\n                                                newJson[indexProducto][4] =  parseInt(newJson[indexProducto][4]) + parseInt(row[4]);\r\n                                                newJson[indexProducto][6] = parseInt(newJson[indexProducto][4])*parseInt(newJson[indexProducto][5])\r\n                                                existe = true;\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                    if(existe == false){\r\n                                        newJson.push(row);\r\n                                    }\r\n                                } else {\r\n                                    newJson.push(row);\r\n                                }\r\n\r\n                               \r\n\r\n\r\n\r\n                                // // Sumar la cantidad al total correspondiente al ID de producto\r\n                                // if (sumasPorProducto.hasOwnProperty(idProducto)) {\r\n                                //     sumasPorProducto[idProducto] += cantidad;\r\n                                // } else {\r\n                                //     sumasPorProducto[idProducto] = cantidad;\r\n                                // }\r\n                            });\r\n                            console.log(newJson);\r\n\r\n                            // Crear un nuevo arreglo de datos con los totales por ID de producto\r\n\r\n                            // let nuevosDatos = [];\r\n                            // Object.keys(sumasPorProducto).forEach(function (idProducto) {\r\n                            //     nuevosDatos.push([idProducto, sumasPorProducto[idProducto]]);\r\n                            // });\r\n\r\n\r\n                            // Devolver los datos procesados como una cadena JSON\r\n                            return JSON.stringify({ data: newJson });\r\n                        }\r\n                    },\r\n                    \"deferRender\": true,\r\n                    \"retrieve\": true,\r\n                    \"proccesing\": true,\r\n                    responsive: true,\r\n                    initComplete: function () {\r\n                        // Inicializa los botones después de que la tabla se haya creado\r\n                        var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                            buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                        }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                    }\r\n                });\r\n                // tablaProductosVendidos = $('#tabla').DataTable({\r\n                //     ajax: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                //     \"deferRender\":true,\r\n                //     \"retrieve\":true,\r\n                //     \"proccesing\":true,\r\n                //     responsive:true,\r\n                //     initComplete: function () {\r\n                //         // Inicializa los botones después de que la tabla se haya creado\r\n                //         var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                //             buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                //         }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                //     }\r\n                // });\r\n                $.ajax({\r\n\r\n                    url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n\r\n                    dataType: 'json',\r\n                    success: function (req) {\r\n                         console.log(req)\r\n\r\n                    },\r\n                    error: function (error) {\r\n                        console.log(error.resposeText)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        function calcularNuevoPrecioCompra() {\r\n            precio_compra_nuevo.value = '';\r\n\r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        async function enviarDatosStock() {\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n            btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                btnSubmitNewStock.disabled = false;\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatosStock()\r\n\r\n                }\r\n            });\r\n\r\n            $('#stockForm').validate({\r\n                rules: {\r\n\r\n\r\n                    nuevo_stock: {\r\n                        required: true\r\n                    },\r\n\r\n                    precio_compra_nuevo: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nuevo_stock: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    precio_compra_nuevo: {\r\n                        required: 'la nueva cantidad adquirida es obligatoria'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#stockForm').on('valid', function (event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , (descripcion.value).trim())\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio: '',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n         \r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n\r\n\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"3\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-3');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-1');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n\r\n                inputPrecioLibre.oninput = () => {\r\n\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto => {\r\n                        total_libre = total_libre + producto.precio * producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value = total_libre.toLocaleString('en');\r\n                }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio: parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n  \r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        // const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n        \r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n        \r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos_totales\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.total_inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n    \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n    \r\n            revisarPagosAsociados(id);\r\n\r\n      \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            console.log(ventaId)\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n        $('#tabla').on('click', '#imprimir', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            imprimirVenta(ventaId);\r\n        })\r\n\r\n        async function imprimirVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/imprimir-venta?id=${id}`;\r\n            window.open(url, \"_blank\");\r\n         \r\n            // try {\r\n            //     const respuesta = await fetch(url)\r\n            //     const resultado = await respuesta.json();\r\n            //     console.log(resultado)\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n     \r\n          \r\n        }\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n    \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n      \r\n                 const resultado = await respuesta.json();\r\n          \r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();"]}