{"version":3,"sources":["cajas/cajas.js","categorias/categorias.js","clientes/clientes.js","proveedores/proveedores.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","usuarios/login.js","usuarios/usuario.js","ventas/cargar-clientes.js","ventas/cargar-productos.js","ventas/crear-ventas.js","ventas/ventas.js"],"names":["document","querySelector","btnAbrirCaja","formulario","btnSubmit","tablaCajas","id","efectivoAperturaInput","eliminarToastAnterior","remove","async","accionesModal","reset","disabled","$","modal","validate","resetForm","destroy","find","removeClass","respuesta","fetch","resultado","value","parseFloat","toLocaleString","llenarFormulario","json","error","console","log","consultarCaja","inicializarValidador","validator","setDefaults","submitHandler","datos","FormData","append","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","rules","efectivo_apertura","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","addEventListener","e","valor","valor_sin_formato","replace","isNaN","formatearValor","target","dataTable","fnDestroy","DataTable","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","deferRender","retrieve","proccesing","responsive","on","currentTarget","dataset","cajaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","event","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","trim","initComplete","fn","Buttons","buttons","container","appendTo","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","tablaClientes","btnRegistrarCliente","nombre","cedula","celular","direccion","email","consultarCliente","minlength","digits","rangelength","clienteId","cliente","eliminarCliente","alertaEliminarCliente","tablaProveedores","btnRegistrarProvedor","proveedorId","proveedor","eliminarProveedor","alertaEliminarProveedor","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","codigo","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","limpiarHtml","forEach","opcion","createElement","selected","appendChild","llenarSelectCategorias","consultarProveedores","proveedores","select2","theme","llenarSelectProveedores","consultarProducto","referencia","firstChild","removeChild","productoId","eliminarProducto","alertaEliminarProducto","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","idProductoActualizarStock","calcularNuevoPrecioCompra","inicializarValidadorStock","enviarDatosStock","password","window","href","tablaUsuarios","btnRegistrarUsuario","estado","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","selectClientes","opcionDisabled","consultarCLientes","selectProductos","producto","consultarProductos","ventaId","idAnterior","productoObj","cantidad","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","focusCantidad","productosArray","guardarVentaBtn","totalInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","saldo","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoVenta","cargarCodigoVenta","codigo_venta","resetearCliente","val","trigger","mostrarProductos","contenedorProductos","rowDiv","classList","add","col1Div","group1Div","prepend1Div","innerHTML","onclick","idProducto","filter","inputNombre","readOnly","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","text","modificarTotalPorProducto","col3Div","group3Div","prepend3Div","inputPrecio","nuevo_precio_venta","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total","total_costo","Number","calcularTotal","parametro","aux","map","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productos_venta","venta","productoVenta","precio","push","recaudo","nombre_cliente","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","llenarInformacion","consultarVenta","leerDatosUrl","length","JSON","stringify","valor_abono","contains","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","deuda","some","consultarInfoProducto","consultarInfoCliente","tablaVentas","idString","toString","btoa","numero_venta","eliminarVenta"],"mappings":"CAAA,WAEA,GADAA,SAAAC,cAAA,UACA,CAEA,MAAAC,EAAAF,SAAAC,cAAA,cACAE,EAAAH,SAAAC,cAAA,aACAG,EAAAJ,SAAAC,cAAA,cAEA,IAAAI,EAEAC,EACA,MAAAC,EAAAP,SAAAC,cAAA,sBAyQA,SAAAO,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAIAC,eAAAC,IACAR,EAAAS,QACAR,EAAAS,UAAA,EACAC,EAAA,eAAAC,MAAA,QACAD,EAAA,aAAAE,WAAAC,YAEAH,EAAA,aAAAE,WAAAE,UAEAJ,EAAA,aAAAK,KAAA,eAAAC,YAAA,cACAd,GAYAI,iBAEA,IACA,MAAAW,QAAAC,MAAA,gBAAAhB,IAUA,SAAAiB,GAGAhB,EAAAiB,MAAAC,WAAAF,GAAAG,eAAA,MATAC,OAHAN,EAAAO,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IApBAG,GAMAC,IAwBA,SAAAA,IAEAnB,EAAAoB,UAAAC,YAAA,CACAC,cAAA,YAhHA1B,iBAEA,MAAA2B,EAAA,IAAAC,SACAhC,GACA+B,EAAAE,OAAA,KAAAjC,GAEA+B,EAAAE,OAAA,oBAAAhC,EAAAiB,OAGApB,EAAAS,UAAA,EAEA,IAAA2B,EAAA,GAEAA,EADAlC,EACAmC,SAAAC,OAAA,mBAEAD,SAAAC,OAAA,kBAIA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAGApB,IAEAJ,EAAAS,UAAA,EACA,SAAAU,EAAAsB,MACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAEAnC,EAAA,eAAAC,MAAA,UAEAV,EAAA6C,KAAAC,SAEArC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAKA9C,EAAAS,QAEAE,EAAA,eAAAC,MAAA,SAGAqC,WAAA,KACA5C,KACA,KAEA,MAAAqB,KAsDAwB,MAMAvC,EAAA,aAAAE,SAAA,CACAsC,MAAA,CACAC,kBAAA,CACAC,UAAA,IAIAC,SAAA,CACAF,kBAAA,CACAC,SAAA,8EAKAE,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBAyBA,SAAAZ,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAjXAF,EAAA4D,iBAAA,SAAA,SAAAC,GACA7D,EAAAiB,MAqWA,SAAA6C,GAEA,IAAAC,EAAA7C,WAAA4C,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAA5C,eAAA,MA3WA+C,CAAAL,EAAAM,OAAAlD,UA0JAV,EAAA,UAAA6D,YAAAC,YAEAvE,EAAAS,EAAA,UAAA+D,UAAA,CACAC,SAAA,CACAC,QAAA,GACAC,WAAA,qBACAC,KAAA,gDACAC,UAAA,iCACAC,aAAA,qCACAC,YAAA,GACAC,UAAA,IACAC,WAAA,0BACAC,eAAA,cACAC,WAAA,gBACAC,OAAA,UACAC,YAAA,6BACAC,SAAA,CACAC,MAAA,UACAC,KAAA,SACAC,KAAA,YACAC,SAAA,aAGA7C,KAAA,aACA8C,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,IA/KAjG,EAAAiE,iBAAA,SAAA,WACA7D,EAAA,KAEAK,OAGAG,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,GAEA9D,EAAA8D,EAAAiC,cAAAC,QAAAC,OAEA5F,OAIAG,EAAA,UAAAsF,GAAA,QAAA,aAAA,SAAAhC,IASA,SAAA9D,EAAA8D,GAEA,MAAAb,EAAAa,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAGAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,6HAAAvD,6DAEAwD,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aA+DA1G,eAAAJ,GACA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GAGAkC,IAAAC,SAAAC,OAAA,qBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEApB,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAMA5C,EAAA6C,KAAAC,UAEAC,WAAA,KACA5C,KACA,KACA,MAAAqB,KArGAwF,CAAA/G,KAvBAgH,CADAlD,EAAAiC,cAAAC,QAAAC,OACAnC,MAEAtD,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,IAyBA,SAAA9D,EAAA8D,GAEAuC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,kGAEAC,kBAAA,EACAC,kBAAA,SACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKA1G,eAAAJ,GAEA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GAGAkC,IAAAC,SAAAC,OAAA,mBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEApB,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGA5C,EAAA6C,KAAAC,UAEAC,WAAA,KACA5C,KACA,KACA,MAAAqB,KAzCA0F,CAAAjH,KApCAkH,CADApD,EAAAiC,cAAAC,QAAAC,WAgUAzF,EAAA,aAAAsF,GAAA,SAAA,SAAAqB,GACAxF,QAxWA,GCAA,WAEA,GADAjC,SAAAC,cAAA,eACA,CACA,IAAAyH,EACApH,EAAA,KAGA,MAAAqH,EAAA3H,SAAAC,cAAA,cACAE,EAAAH,SAAAC,cAAA,kBACA2H,EAAA5H,SAAAC,cAAA,cAgIA,SAAAU,IACAR,EAAAS,QACAR,UAAAS,UAAA,EACAC,EAAA,oBAAAC,MAAA,QACAkB,IACA3B,GAKAI,iBACA,IACA,MAAAW,QAAAC,MAAA,qBAAAhB,IASA,SAAAiB,GAEAqG,EAAApG,MAAAD,EAAAqG,UAPAjG,OAHAN,EAAAO,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAZAgG,GAgFA,SAAArH,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAIA,SAAAwB,IACAnB,EAAAoB,UAAAC,YAAA,CACAC,cAAA,YAlEA1B,iBACA,MAAA2B,EAAA,IAAAC,SACAhC,GACA+B,EAAAE,OAAA,KAAAjC,GAEA+B,EAAAE,OAAA,YAAAqF,EAAA,MAAAE,QAGA1H,UAAAS,UAAA,EACA,IAAA2B,EAAA,GAEAA,EADAlC,EACAmC,SAAAC,OAAA,wBAEAD,SAAAC,OAAA,uBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAGApB,IACAJ,UAAAS,UAAA,EACA,SAAAU,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGAyE,EAAAxE,KAAAC,SAEArC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAEAL,EAAAS,QAGAE,EAAA,oBAAAC,MAAA,SAIA,MAAAc,KAaAwB,MAKAvC,EAAA,kBAAAE,SAAA,CACAsC,MAAA,CACAsE,UAAA,CACApE,UAAA,IAGAC,SAAA,CACAmE,UAAA,CACApE,SAAA,6CAGAE,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBAtJAN,EAAA,UAAA6D,YAAAC,YAEA8C,EAAA5G,EAAA,UAAA+D,UAAA,CACA3B,KAAA,kBACA8C,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACA4B,aAAA,WAEA,IAAAjH,EAAAkH,GAAArD,UAAAsD,QAAAP,EAAA,CACAQ,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,WACAC,YAAAC,SAAA,qCAzGAR,EAAAzD,iBAAA,SAAA,SAAAC,GACAwD,EAAApG,MAAA4C,EAAAM,OAAA,MAAA2D,iBAGAV,EAAAxD,iBAAA,SAAA,WACA7D,EAAA,KACAK,OAIAG,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,GACA9D,EAAA8D,EAAAiC,cAAAC,QAAAgC,YACA3H,OAEAG,EAAA,UAAAsF,GAAA,QAAA,aAAA,SAAAhC,IAQA,SAAA9D,EAAA8D,GAEA,MAAAwD,EAAAxD,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAEAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,qFAAAc,6DAEAb,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKA1G,eAAAJ,GACA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GAEAkC,IAAAC,SAAAC,OAAA,0BACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEApB,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAGAkH,EAAAxE,KAAAC,UAEA,MAAAtB,GACAf,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAA,2EAGAS,WAAA,KACA5C,KACA,MAnDA+H,CAAAjI,KArBAkI,CADApE,EAAAiC,cAAAC,QAAAgC,YACAlE,MAuOAtD,EAAA,kBAAAsF,GAAA,SAAA,SAAAqB,GACAxF,QAtQA,GCAA,WAEA,GADAjC,SAAAC,cAAA,aACA,CACA,IAAAwI,EACAnI,EAAA,KACA,MAAAoI,EAAA1I,SAAAC,cAAA,cACAE,EAAAH,SAAAC,cAAA,gBACA0I,EAAA3I,SAAAC,cAAA,WACA2I,EAAA5I,SAAAC,cAAA,WACA4I,EAAA7I,SAAAC,cAAA,YACA6I,EAAA9I,SAAAC,cAAA,cACA8I,EAAA/I,SAAAC,cAAA,UA+GA,SAAAU,IACAR,EAAAS,QACAR,UAAAS,UAAA,EACAC,EAAA,kBAAAC,MAAA,QACAkB,IACA3B,GAKAI,iBACA,IACA,MAAAW,QAAAC,MAAA,mBAAAhB,IASA,SAAAiB,GAEAoH,EAAAnH,MAAAD,EAAAoH,OACAC,EAAApH,MAAAD,EAAAqH,OACAC,EAAArH,MAAAD,EAAAsH,QACAC,EAAAtH,MAAAD,EAAAuH,UACAC,EAAAvH,MAAAD,EAAAwH,MAXApH,OAHAN,EAAAO,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAZAmH,GAyFA,SAAAxI,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAIA,SAAAwB,IACAnB,EAAAoB,UAAAC,YAAA,CACAC,cAAA,YAvEA1B,iBACA,MAAA2B,EAAA,IAAAC,SACAhC,GACA+B,EAAAE,OAAA,KAAAjC,GAEA+B,EAAAE,OAAA,SAAAoG,EAAA,MAAAb,QACAzF,EAAAE,OAAA,SAAAqG,EAAA,OACAvG,EAAAE,OAAA,UAAAsG,EAAA,OACAxG,EAAAE,OAAA,YAAAuG,EAAA,MAAAhB,QACAzF,EAAAE,OAAA,QAAAwG,EAAA,MAAAjB,QAGA1H,UAAAS,UAAA,EAGA,IAAA2B,EAAA,GAEAA,EADAlC,EACAmC,SAAAC,OAAA,sBAEAD,SAAAC,OAAA,qBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAGApB,IACAJ,UAAAS,UAAA,EACA,SAAAU,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGAwF,EAAAvF,KAAAC,SAEArC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAEAL,EAAAS,QAEAE,EAAA,kBAAAC,MAAA,SAIA,MAAAc,KAaAwB,MAKAvC,EAAA,gBAAAE,SAAA,CACAsC,MAAA,CACAqF,OAAA,CACAnF,UAAA,EACAyF,UAAA,GAEAL,OAAA,CACApF,UAAA,EACA0F,QAAA,EACAD,UAAA,GAEAJ,QAAA,CACArF,UAAA,EACA0F,QAAA,EACAC,YAAA,CAAA,GAAA,KAEAJ,MAAA,CACAA,OAAA,IAIAtF,SAAA,CACAkF,OAAA,CACAnF,SAAA,2BACAyF,UAAA,oCAEAL,OAAA,CACApF,SAAA,oCACA0F,OAAA,yBACAD,UAAA,iCAEAJ,QAAA,CACArF,SAAA,sCACA0F,OAAA,yBACAC,YAAA,4BAGAJ,MAAA,CACAA,MAAA,0BAGArF,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBA7LAN,EAAA,UAAA6D,YAAAC,YAEA6D,EAAA3H,EAAA,UAAA+D,UAAA,CACA3B,KAAA,gBACA8C,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACA4B,aAAA,WAEA,IAAAjH,EAAAkH,GAAArD,UAAAsD,QAAAQ,EAAA,CACAP,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,WACAC,YAAAC,SAAA,qCAzFAM,EAAAvE,iBAAA,SAAA,WACA7D,EAAA,KACAK,OAGAG,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,GACA9D,EAAA8D,EAAAiC,cAAAC,QAAA8C,UACAzI,OAEAG,EAAA,UAAAsF,GAAA,QAAA,aAAA,SAAAhC,IAMA,SAAA9D,EAAA8D,GAEA,MAAAiF,EAAAjF,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAEAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,mFAAAuC,6DAEAtC,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKA1G,eAAAJ,GACA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GAEAkC,IAAAC,SAAAC,OAAA,wBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEApB,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAGAiI,EAAAvF,KAAAC,UAEA,MAAAtB,GACAC,QAAAC,IAAAF,IA1CAyH,CAAAhJ,KAnBAiJ,CADAnF,EAAAiC,cAAAC,QAAA8C,UACAhF,MAmQAtD,EAAA,gBAAAsF,GAAA,SAAA,SAAAqB,GACAxF,QA9RA,GCAA,WAEA,GADAjC,SAAAC,cAAA,gBACA,CACA,IAAAuJ,EACAlJ,EAAA,KACA,MAAAmJ,EAAAzJ,SAAAC,cAAA,cACAE,EAAAH,SAAAC,cAAA,kBACA0I,EAAA3I,SAAAC,cAAA,WAEA4I,GADA7I,SAAAC,cAAA,WACAD,SAAAC,cAAA,aACA6I,EAAA9I,SAAAC,cAAA,cACAD,SAAAC,cAAA,UAwHA,SAAAU,IACAR,EAAAS,QACAR,UAAAS,UAAA,EACAC,EAAA,oBAAAC,MAAA,QAEAkB,IACA3B,GAKAI,iBACA,IACA,MAAAW,QAAAC,MAAA,qBAAAhB,IASA,SAAAiB,GAEAoH,EAAAnH,MAAAD,EAAAoH,OACAE,EAAArH,MAAAD,EAAAsH,QACAC,EAAAtH,MAAAD,EAAAuH,UATAnH,OAHAN,EAAAO,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAZAmH,GAwGA,SAAAxI,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAIA,SAAAwB,IAEAnB,EAAAoB,UAAAC,YAAA,CACAC,cAAA,YAxFA1B,iBACA,MAAA2B,EAAA,IAAAC,SACAhC,GACA+B,EAAAE,OAAA,KAAAjC,GAEA+B,EAAAE,OAAA,SAAAoG,EAAA,MAAAb,QACAzF,EAAAE,OAAA,UAAAsG,EAAA,OACAxG,EAAAE,OAAA,YAAAuG,EAAA,MAAAhB,QAKA1H,UAAAS,UAAA,EAGA,IAAA2B,EAAA,GAEAA,EADAlC,EACAmC,SAAAC,OAAA,wBAEAD,SAAAC,OAAA,uBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAGApB,IACAJ,UAAAS,UAAA,EACA,SAAAU,EAAAsB,MAEA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAEAgJ,EAAAtG,KAAAC,SAEArC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAEAL,EAAAS,QAEAE,EAAA,oBAAAC,MAAA,SAIA,MAAAc,GACAC,QAAAC,IAAA,UAwBAsB,MAKAvC,EAAA,kBAAAE,SAAA,CACAsC,MAAA,CACAqF,OAAA,CACAnF,UAAA,EACAyF,UAAA,GAEAJ,QAAA,CACArF,UAAA,EACA0F,QAAA,EACAC,YAAA,CAAA,GAAA,KAEAL,UAAA,CACAtF,UAAA,IAIAC,SAAA,CACAkF,OAAA,CACAnF,SAAA,2BACAyF,UAAA,oCAEAJ,QAAA,CACArF,SAAA,sCACA0F,OAAA,yBACAC,YAAA,8CAEAL,UAAA,CACAtF,SAAA,8BAIAE,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBAlMAoI,EAAA1I,EAAA,UAAA+D,UAAA,CACA3B,KAAA,mBACA8C,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACA4B,aAAA,WAEA,IAAAjH,EAAAkH,GAAArD,UAAAsD,QAAAuB,EAAA,CACAtB,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,WACAC,YAAAC,SAAA,qCAnGAO,EAAAxE,iBAAA,SAAA,SAAAC,GACAuE,EAAAnH,MAAA4C,EAAAM,OAAA,MAAA2D,iBAIAoB,EAAAtF,iBAAA,SAAA,WACA7D,EAAA,KACAK,OAGAG,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,GACA9D,EAAA8D,EAAAiC,cAAAC,QAAAoD,YACA/I,OAEAG,EAAA,UAAAsF,GAAA,QAAA,aAAA,SAAAhC,IAQA,SAAA9D,EAAA8D,GAEA,MAAAuF,EAAAvF,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAEAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,qFAAA6C,6DAEA5C,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKA1G,eAAAJ,GACA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GAEAkC,IAAAC,SAAAC,OAAA,0BACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEApB,IAEA,SAAAe,EAAAsB,MACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,MAEAG,WAAA,KACA5C,KACA,OAGAM,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAGAgJ,EAAAtG,KAAAC,UAEA,MAAAtB,GACAC,QAAAC,IAAAF,IA7CA+H,CAAAtJ,KArBAuJ,CADAzF,EAAAiC,cAAAC,QAAAoD,YACAtF,MA+QAtD,EAAA,kBAAAsF,GAAA,SAAA,SAAAqB,GACAxF,QA9SA,GCAA,WAEA,GADAjC,SAAAC,cAAA,cACA,CACA,MAAA6J,EAAA9J,SAAAC,cAAA,kBACA8J,EAAA/J,SAAAC,cAAA,iBACA+J,EAAAhK,SAAAC,cAAA,qBACAgK,EAAAjK,SAAAC,cAAA,mBACAiK,EAAAlK,SAAAC,cAAA,aA2BA,SAAAkK,IACAL,EAAAtI,MAAA,GACAuI,EAAAvI,MAAA,GACAwI,EAAAxI,MAAA,GACA,MAAA4I,EAAA3I,WAAAwI,EAAA,MAAA1F,QAAA,KAAA,KACA8F,EAAA5I,WAAAyI,EAAA1I,OACA,GAAAgD,MAAA4F,IAAA5F,MAAA6F,GACA,OAEA,MAAAC,EAAAF,EAAAC,EACAP,EAAAtI,MAAA+I,KAAAC,MAAAF,GAAA5I,eAAA,MAiBA,SAAA+I,IAEA,MAAAH,EAAA7I,WAAAqI,EAAA,MAAAvF,QAAA,KAAA,KACAmG,EAAAjJ,WAAAsI,EAAA,MAAAxF,QAAA,KAAA,KACA,GAAAC,MAAA8F,IAAA9F,MAAAkG,GACA,OAEA,MAAAC,EAAA,IAAAD,EAAAJ,EACAN,EAAAxI,MAAAmJ,EAAAC,QAAA,GAGA,SAAAnG,EAAAJ,GAEA,IAAAC,EAAA7C,WAAA4C,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAA5C,eAAA,MAtEAoI,EAAA3F,iBAAA,SAAA,SAAAC,GACA,MAAAkG,EAAA7F,EAAAL,EAAAM,OAAAlD,OACAsI,EAAAtI,MAAA8I,EACAG,OAEAV,EAAA5F,iBAAA,SAAA,SAAAC,GACA,MAAAkG,EAAA7F,EAAAL,EAAAM,OAAAlD,OACAuI,EAAAvI,MAAA8I,EACAG,OAGAT,EAAA7F,iBAAA,SAAA,SAAAC,IAgCA,SAAAuG,GACA,MAAAL,EAAA7I,WAAAqI,EAAA,MAAAvF,QAAA,KAAA,KAEA,GAAAC,MAAA8F,GACA,OAEA,MAAAI,EAAAjJ,WAAAkJ,GAAAL,EAAA,IACAP,EAAAvI,OAAA,IAAA+I,KAAAC,MAAAE,EAAA,MAAAhJ,eAAA,MAtCAmJ,CAAAzG,EAAAM,OAAAlD,UAIAyI,EAAA9F,iBAAA,SAAA,SAAAC,GACA,MAAAgG,EAAA3F,EAAAL,EAAAM,OAAAlD,OACAyI,EAAAzI,MAAA4I,EACAD,OAEAD,EAAA/F,iBAAA,SAAA,SAAAC,GAEA+F,QA/BA,GCAA,WAEA,GADAnK,SAAAC,cAAA,cACA,CACA,MAAA6K,EAAA9K,SAAAC,cAAA,cACAE,EAAAH,SAAAC,cAAA,iBACA8K,EAAA/K,SAAAC,cAAA,iBACA+K,EAAAhL,SAAAC,cAAA,iBACA,IAGAgL,EAEA3K,EAJA4K,EAAA,KACAC,EAAA,KAIA,MAAAxC,EAAA3I,SAAAC,cAAA,WACAmL,EAAApL,SAAAC,cAAA,WACAoL,EAAArL,SAAAC,cAAA,iBACAqL,EAAAtL,SAAAC,cAAA,iBACAsL,EAAAvL,SAAAC,cAAA,UACAuL,EAAAxL,SAAAC,cAAA,iBACAqK,EAAAtK,SAAAC,cAAA,kBACAyK,EAAA1K,SAAAC,cAAA,iBACA+J,EAAAhK,SAAAC,cAAA,qBAEAG,EAAAJ,SAAAC,cAAA,cA0IAS,eAAA+K,IAEA,IACA,MAAApK,QAAAC,MAFA,8BAsBA,SAAAoK,GACAC,EAAAZ,GAUAW,EAAAE,QAAAhE,IAEA,MAAAiE,EAAA7L,SAAA8L,cAAA,UACAD,EAAArK,MAAAoG,EAAAtH,GACAuL,EAAAnF,YAAAkB,EAAAA,UACAA,EAAAtH,IAAA4K,IAEAW,EAAAE,UAAA,GAIAhB,EAAAiB,YAAAH,KAxCAI,OADA5K,EAAAO,QAEA,MAAAC,KAKAnB,eAAAwL,IAEA,IACA,MAAA7K,QAAAC,MAFA,+BA2CA,SAAA6K,GACAR,EAAAX,GAUAmB,EAAAP,QAAAjC,IAEA,MAAAkC,EAAA7L,SAAA8L,cAAA,UACAD,EAAArK,MAAAmI,EAAArJ,GACAuL,EAAAnF,YAAAiD,EAAAhB,OACAgB,EAAArJ,IAAA6K,IAEAU,EAAAE,UAAA,GAEAf,EAAAgB,YAAAH,KAGA/K,EAAA,oBAAAsL,UACAtL,EAAA,oBAAAsL,UACAtL,EAAA,eAAAsL,QAAA,CACAC,MAAA,eAhEAC,OAFAjL,EAAAO,QAGA,MAAAC,KAsIA,SAAArB,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAIAC,eAAAC,IACAR,EAAAS,QACAR,EAAAS,UAAA,EACAC,EAAA,mBAAAC,MAAA,QACAD,EAAA,iBAAAE,WAAAC,YAEAH,EAAA,iBAAAE,WAAAE,UAEAJ,EAAA,iBAAAK,KAAA,eAAAC,YAAA,cACAd,GAYAI,iBACA,IACA,MAAAW,QAAAC,MAAA,oBAAAhB,IAUA,SAAAiB,GACA2J,EAAA3J,EAAA8J,aACAF,EAAA5J,EAAA+J,aACA3C,EAAAnH,MAAAD,EAAA,OAAA8G,cACA+C,EAAA5J,MAAAD,EAAA6J,OACAG,EAAA/J,MAAAD,EAAAgK,MACAC,EAAAhK,MAAAD,EAAAiK,aACAlB,EAAA9I,MAAAC,WAAAF,EAAA+I,eAAA5I,eAAA,MACAgJ,EAAAlJ,MAAAC,WAAAF,EAAAmJ,cAAAhJ,eAAA,MACAsI,EAAAxI,MAAAD,EAAAyI,iBAfArI,OAHAN,EAAAO,QAIA,MAAAC,GACAC,QAAAC,IAAAF,IAnBA0K,SAGAd,UACAS,IAEAjK,IA6BA,SAAAA,IACAnB,EAAAoB,UAAAC,YAAA,CACAC,cAAA,YAtHA1B,iBAEA,MAAA2B,EAAA,IAAAC,SACAhC,GACA+B,EAAAE,OAAA,KAAAjC,GAEA+B,EAAAE,OAAA,SAAAoG,EAAA,MAAAb,QACAzF,EAAAE,OAAA,SAAA6I,EAAA,MAAAtD,QACAzF,EAAAE,OAAA,eAAA8I,EAAA,OACAhJ,EAAAE,OAAA,eAAA+I,EAAA,OACAjJ,EAAAE,OAAA,QAAAgJ,EAAA,OACAlJ,EAAAE,OAAA,eAAAiJ,EAAA,OACAnJ,EAAAE,OAAA,gBAAA+H,EAAA,OACAjI,EAAAE,OAAA,eAAAmI,EAAA,OACArI,EAAAE,OAAA,mBAAAyH,EAAA,OAEA5J,EAAAS,UAAA,EAEA,IAAA2B,EAAA,GAEAA,EADAlC,EACAmC,SAAAC,OAAA,uBAEAD,SAAAC,OAAA,sBAGA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEApB,IACAJ,EAAAS,UAAA,EACA,SAAAU,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGAgI,EAAA/H,KAAAC,SAEArC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAEAL,EAAAS,QAEAE,EAAA,mBAAAC,MAAA,SAIA,MAAAc,KA0DAwB,MAOAvC,EAAA,iBAAAE,SAAA,CACAsC,MAAA,CACAqF,OAAA,CACAnF,UAAA,GAIA+H,MAAA,CACA/H,UAAA,GAEAgI,aAAA,CACAhI,UAAA,GAEA8G,cAAA,CACA9G,UAAA,GAEAkH,aAAA,CACAlH,UAAA,GAEAwG,iBAAA,CACAxG,UAAA,IAGAC,SAAA,CACAkF,OAAA,CACAnF,SAAA,4BAEA+H,MAAA,CACA/H,SAAA,mCAEAgI,aAAA,CACAhI,SAAA,kCAEA8G,cAAA,CACA9G,SAAA,sCAEAkH,aAAA,CACAlH,SAAA,qCAEAwG,iBAAA,CACAxG,SAAA,0CAIAE,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBAgBA,SAAAuK,EAAAa,GACA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAraArM,EAAA+D,iBAAA,SAAA,eA6FArD,EAAA,UAAA6D,YAAAC,YAEAqG,EAAAnK,EAAA,UAAA+D,UAAA,CACAC,SAAA,CACAC,QAAA,GACAC,WAAA,qBACAC,KAAA,gDACAC,UAAA,iCACAC,aAAA,qCACAC,YAAA,GACAC,UAAA,IACAC,WAAA,0BACAC,eAAA,cACAC,WAAA,gBACAC,OAAA,UACAC,YAAA,6BACAC,SAAA,CACAC,MAAA,UACAC,KAAA,SACAC,KAAA,YACAC,SAAA,aAGA7C,KAAA,iBACA8C,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,IAlHAwC,EAAAxE,iBAAA,SAAA,SAAAC,GACAuE,EAAAnH,MAAA4C,EAAAM,OAAA,MAAA2D,iBAIAyC,EAAA3G,iBAAA,SAAA,WACA7D,EAAA,KACA4K,EAAA,KACAC,EAAA,KACAxK,OAGAG,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,GACA9D,EAAA8D,EAAAiC,cAAAC,QAAAqG,WACAhM,OAGAG,EAAA,UAAAsF,GAAA,QAAA,aAAA,SAAAhC,IAKA,SAAA9D,EAAA8D,GAEA,MAAAuE,EAAAvE,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YACA5E,QAAAC,IAAA4G,GAEAhC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,oFAAA6B,6DAEA5B,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAKA1G,eAAAJ,GACA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GAEAkC,IAAAC,SAAAC,OAAA,yBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEApB,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAGAyK,EAAA/H,KAAAC,UAEA,MAAAtB,KAzCA+K,CAAAtM,KAnBAuM,CADAzI,EAAAiC,cAAAC,QAAAqG,WACAvI,MA8XAtD,EAAA,iBAAAsF,GAAA,SAAA,SAAAqB,GACAxF,QAhbA,GCAA,WAGA,GAFAjC,SAAAC,cAAA,cAEA,CACA,MAAA6M,EAAA9M,SAAAC,cAAA,cACA8M,EAAA/M,SAAAC,cAAA,oBACA+M,EAAAhN,SAAAC,cAAA,gBACAgN,EAAAjN,SAAAC,cAAA,yBACAiN,EAAAlN,SAAAC,cAAA,mBACAkN,EAAAnN,SAAAC,cAAA,wBACAmN,EAAApN,SAAAC,cAAA,sBAEA,IAAAoN,EAqCA,SAAAC,IACAH,EAAA3L,MAAA,GAEA,MAAA4I,EAAA3I,WAAAwL,EAAA,MAAA1I,QAAA,KAAA,KACA8F,EAAA5I,WAAAyL,EAAA1L,OACA,GAAAgD,MAAA4F,IAAA5F,MAAA6F,GACA,OAEA,MAAAC,EAAAF,EAAAC,EACA8C,EAAA3L,MAAA+I,KAAAC,MAAAF,GAAA5I,eAAA,MAGA,SAAA+C,EAAAJ,GAEA,IAAAC,EAAA7C,WAAA4C,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAA5C,eAAA,MA6DA,SAAAlB,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAIA,SAAA8M,EAAAjN,GACAQ,EAAAoB,UAAAC,YAAA,CACAC,cAAA,YAjEA1B,iBACA,MAAA2B,EAAA,IAAAC,SAEAD,EAAAE,OAAA,KAAA8K,GACAhL,EAAAE,OAAA,QAAAyK,EAAA,OACA3K,EAAAE,OAAA,gBAAA4K,EAAA,OAEAC,EAAAvM,UAAA,EAEA,MAAA2B,EAAAC,SAAAC,OAAA,6BAIA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAGApB,IAEA4M,EAAAvM,UAAA,EAEA,SAAAU,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAA,UAAA+D,YAAA3B,KAAAC,SAEArC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAEAsM,EAAAlM,QAEAE,EAAA,gBAAAC,MAAA,SAIA,MAAAc,KAaA2L,MAKA1M,EAAA,cAAAE,SAAA,CACAsC,MAAA,CAGA0J,YAAA,CACAxJ,UAAA,GAGA2J,oBAAA,CACA3J,UAAA,IAGAC,SAAA,CACAuJ,YAAA,CACAxJ,SAAA,4BAEA2J,oBAAA,CACA3J,SAAA,+CAIAE,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBA9JAN,EAAA,UAAAsF,GAAA,QAAA,kBAAA,SAAAhC,GAEAiJ,EAAAjJ,EAAAiC,cAAAC,QAAAqG,WACAG,EAAAlM,QACAwM,EAAAvM,UAAA,EACAC,EAAA,gBAAAC,MAAA,QACAD,EAAA,cAAAE,WAAAC,YAEAH,EAAA,cAAAE,WAAAE,UAEAJ,EAAA,cAAAK,KAAA,eAAAC,YAAA,cAGA,MAAAuH,EAAAvE,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YACAqG,EAAAvL,MAAAmH,EACA4E,OAGAN,EAAA9I,iBAAA,SAAA,SAAAC,GACA,MAAAgG,EAAA3F,EAAAL,EAAAM,OAAAlD,OACAyL,EAAAzL,MAAA4I,EACAkD,OAEAJ,EAAA/I,iBAAA,SAAA,SAAAC,GAEAkJ,OAGAH,EAAAhJ,iBAAA,SAAA,SAAAC,GACA,MAAAkG,EAAA7F,EAAAL,EAAAM,OAAAlD,OACA2L,EAAA3L,MAAA8I,KAoIAxJ,EAAA,cAAAsF,GAAA,SAAA,SAAAqB,GACA8F,QAjLA,GCAA,WAGA,GAFAvN,SAAAC,cAAA,cAEA,CAEA,MAAA8I,EAAA/I,SAAAC,cAAA,UACAwN,EAAAzN,SAAAC,cAAA,aACAG,EAAAJ,SAAAC,cAAA,cAIAS,eAAA2C,IACAjD,EAAAS,UAAA,EACA,MAAAwB,EAAA,IAAAC,SACAD,EAAAE,OAAA,QAAAwG,EAAA,MAAAjB,QACAzF,EAAAE,OAAA,WAAAkL,EAAAjM,OAEA,IACA,MAAAgB,EAAA,qBACAnB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAkBA5B,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAjBA,SAAAc,EAAAsB,MACAzC,EAAAS,UAAA,EACAC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAGAyK,OAAAjL,SAAAkL,KAAA,UAEA,MAAA9L,KAUA,SAAAI,IACAnB,EAAAoB,UAAAC,YAAA,CACAC,cAAA,WAEAiB,OAKAvC,EAAA,cAAAE,SAAA,CACAsC,MAAA,CAEAyF,MAAA,CACAvF,UAAA,EACAuF,OAAA,GAEA0E,SAAA,CACAjK,UAAA,IAGAC,SAAA,CAEAsF,MAAA,CACAvF,SAAA,0BACAuF,MAAA,yBAEA0E,SAAA,CACAjK,SAAA,+BAGAE,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBA7EAa,IAiFAnB,EAAA,cAAAsF,GAAA,SAAA,SAAAqB,GACAxF,QA1FA,GCEA,WAGA,GADAjC,SAAAC,cAAA,aACA,CAGA,IAAA2N,EACAtN,EAAA,KAEA,MAAAuN,EAAA7N,SAAAC,cAAA,cACAE,EAAAH,SAAAC,cAAA,gBACAG,EAAAJ,SAAAC,cAAA,cACA0I,EAAA3I,SAAAC,cAAA,WACA8I,EAAA/I,SAAAC,cAAA,UACA6N,EAAA9N,SAAAC,cAAA,WACA8N,EAAA/N,SAAAC,cAAA,SACAwN,EAAAzN,SAAAC,cAAA,aA+GA,SAAAU,IACAG,EAAA,gBAAAE,WAAAE,UACAf,EAAAS,QACAR,EAAAS,UAAA,EAEAmN,EAAAF,GACAE,EAAAD,GAEA,MAAAE,EAAAjO,SAAA8L,cAAA,UACAmC,EAAAC,aAAA,WAAA,YACAD,EAAAC,aAAA,WAAA,YACAD,EAAAvH,YAAA,iBAEA,MAAAyH,EAAAnO,SAAA8L,cAAA,UACAqC,EAAA3M,MAAA,EACA2M,EAAAzH,YAAA,WACA,MAAA0H,EAAApO,SAAA8L,cAAA,UACAsC,EAAA5M,MAAA,EACA4M,EAAA1H,YAAA,SAEA,MAAA2H,EAAArO,SAAA8L,cAAA,UACAuC,EAAAH,aAAA,WAAA,YACAG,EAAAH,aAAA,WAAA,YACAG,EAAA3H,YAAA,iBAEA,MAAA4H,EAAAtO,SAAA8L,cAAA,UACAwC,EAAA9M,MAAA,EACA8M,EAAA5H,YAAA,WACA,MAAA6H,EAAAvO,SAAA8L,cAAA,UACAyC,EAAA/M,MAAA,EACA+M,EAAA7H,YAAA,gBAEAoH,EAAA9B,YAAAiC,GACAH,EAAA9B,YAAAmC,GACAL,EAAA9B,YAAAoC,GACAL,EAAA/B,YAAAqC,GACAN,EAAA/B,YAAAsC,GACAP,EAAA/B,YAAAuC,GAEAzN,EAAA,kBAAAC,MAAA,QACAkB,IACA3B,GAKAI,iBACA,IACA,MAAAW,QAAAC,MAAA,mBAAAhB,IAQA,SAAAiB,GAGAoH,EAAAnH,MAAAD,EAAAoH,OACAI,EAAAvH,MAAAD,EAAAwH,MAEA+E,EAAA7N,cAAA,iBAAAsB,EAAAuM,OAAA,MACAI,aAAA,WAAA,YACAH,EAAA9N,cAAA,iBAAAsB,EAAAwM,KAAA,MACAG,aAAA,WAAA,YAfAvM,OADAN,EAAAO,QAEA,MAAAC,GACAC,QAAAC,IAAAF,IAVA2M,GA4FA,SAAAhO,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SAGA,SAAAuN,EAAAxB,GAEA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAIA,SAAAxK,IACAnB,EAAAoB,UAAAC,YAAA,CACAC,cAAA,YA9EA1B,iBAEA,MAAA2B,EAAA,IAAAC,SACAhC,GACA+B,EAAAE,OAAA,KAAAjC,GAEA+B,EAAAE,OAAA,SAAAoG,EAAA,MAAAb,QACAzF,EAAAE,OAAA,QAAAwG,EAAAvH,OACAa,EAAAE,OAAA,SAAAuL,EAAAtM,OACAa,EAAAE,OAAA,OAAAwL,EAAAvM,OACAa,EAAAE,OAAA,WAAAkL,EAAAjM,OAEApB,EAAAS,UAAA,EACA,IAAA2B,EAAA,GAEAA,EADAlC,EACAmC,SAAAC,OAAA,sBAEAD,SAAAC,OAAA,qBAIA,IACA,MAAArB,QAAAC,MAAAkB,EAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAEAE,QAAAC,IAAAR,GACAnB,EAAAS,UAAA,EACAL,IACAJ,EAAAS,UAAA,EACA,SAAAU,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,aACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAEAL,EAAAS,QAEAE,EAAA,kBAAAC,MAAA,QACA6M,EAAA1K,KAAAC,UAGA,MAAAtB,KAsBAwB,MAMA,IAAAoL,EAAA,GACAC,EAAA,GAEApO,IAEAmO,EAAA,CACAjL,UAAA,EACAyF,UAAA,GAEAyF,EAAA,CACAlL,SAAA,6BACAyF,UAAA,iDAKAnI,EAAA,gBAAAE,SAAA,CACAsC,MAAA,CACAqF,OAAA,CACAnF,UAAA,GAEAuF,MAAA,CACAvF,UAAA,EACAuF,OAAA,GAEA+E,OAAA,CACAtK,UAAA,GAEAuK,KAAA,CACAvK,UAAA,GAEAiK,SAAAgB,EACAE,MAAA,CACAnL,UAAA,IAGAC,SAAA,CACAkF,OAAA,CACAnF,SAAA,4BAEAuF,MAAA,CACAvF,SAAA,0BACAuF,MAAA,yBAEA+E,OAAA,CACAtK,SAAA,4BAEAuK,KAAA,CACAvK,SAAA,0BAEAiK,SAAAiB,GAEAhL,aAAA,OACAC,eAAA,SAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA,oBACAD,EAAAE,QAAA,eAAAvB,OAAAV,IAEAkC,UAAA,SAAAH,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAC,SAAA,eAEAK,YAAA,SAAAN,EAAAI,EAAAC,GACAnD,EAAA8C,GAAAxC,YAAA,iBApUAyM,EAAA1J,iBAAA,SAAA,WACA7D,EAAA,KACAK,OAGAgI,EAAAxE,iBAAA,SAAA,SAAAC,GACAuE,EAAAnH,MAAA4C,EAAAM,OAAA,MAAA2D,iBAUAvH,EAAA,UAAA6D,YAAAC,YAEAgJ,EAAA9M,EAAA,UAAA+D,UAAA,CACA3B,KAAA,gBACA8C,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,EACA4B,aAAA,WAEA,IAAAjH,EAAAkH,GAAArD,UAAAsD,QAAA2F,EAAA,CACA1F,QAAA,CAAA,OAAA,MAAA,QAAA,MAAA,QAAA,YACAC,YAAAC,SAAA,qCAOAtH,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,GACA9D,EAAA8D,EAAAiC,cAAAC,QAAAsI,UACAjO,OAEAG,EAAA,UAAAsF,GAAA,QAAA,aAAA,SAAAhC,IAOA,SAAA9D,EAAA8D,GACA,MAAAuE,EAAAvE,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YACAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,mFAAA6B,6DAEA5B,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAMA1G,eAAAJ,GACA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GACAkC,IAAAC,SAAAC,OAAA,wBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OAIApB,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAGAoN,EAAA1K,KAAAC,UAEA,MAAAtB,GACAC,QAAAC,IAAAF,IA5CAgN,CAAAvO,KAlBAwO,CADA1K,EAAAiC,cAAAC,QAAAsI,UACAxK,MA+RAtD,EAAA,gBAAAsF,GAAA,SAAA,SAAAqB,GACAxF,QA7VA,GCFA,WAEA,GADAjC,SAAAC,cAAA,yBACA,CAEA,MAAA8O,EAAA/O,SAAAC,cAAA,oBAKAS,iBAGA,IACA,MAAAW,QAAAC,MAAAmB,SAAAC,OAAA,wBACAnB,QAAAF,EAAAO,OAGAoN,EAAAhP,SAAA8L,cAAA,UACAkD,EAAAtI,YAAA,4BACAsI,EAAAxN,MAAA,IAEAuN,EAAA/C,YAAAgD,GAIAzN,EAAAqK,QAAAvC,IAEA,MAAAwC,EAAA7L,SAAA8L,cAAA,UACAD,EAAArK,MAAA6H,EAAA/I,GACAuL,EAAAnF,YAAA2C,EAAAV,OAIAoG,EAAA/C,YAAAH,KAIA/K,EAAA,mBAAAsL,UACAtL,EAAA,eAAAsL,QAAA,CACAC,MAAA,eAEA,MAAAxK,IAGAf,EAAA,oBAAAsL,UACAtL,EAAA,eAAAsL,QAAA,CACAC,MAAA,eAvCA4C,IAPA,GCAA,WAEA,GADAjP,SAAAC,cAAA,yBACA,CAEA,MAAAiP,EAAAlP,SAAAC,cAAA,qBAKAS,iBAGA,IACA,MAAAW,QAAAC,MAAAmB,SAAAC,OAAA,yBACAnB,QAAAF,EAAAO,OAGAoN,EAAAhP,SAAA8L,cAAA,UACAkD,EAAAtI,YAAA,6BACAsI,EAAAxN,MAAA,IAEA0N,EAAAlD,YAAAgD,GACAzN,EAAAqK,QAAAuD,IAEA,MAAAtD,EAAA7L,SAAA8L,cAAA,UACAD,EAAArK,MAAA2N,EAAA7O,GACAuL,EAAAnF,YAAAyI,EAAAxG,OAGAuG,EAAAlD,YAAAH,KAIA/K,EAAA,oBAAAsL,UACAtL,EAAA,eAAAsL,QAAA,CACAC,MAAA,eAEA,MAAAxK,IAGAf,EAAA,oBAAAsL,UACAtL,EAAA,eAAAsL,QAAA,CACAC,MAAA,eAnCA+C,IAPA,GCAA,WAGA,GADApP,SAAAC,cAAA,yBACA,CACA,IAAAoP,EAoBAC,EAnBAC,EAAA,CACAjP,GAAA,GACAqI,OAAA,GACA6G,SAAA,GACAlF,cAAA,GACAI,aAAA,GAEA+E,gBAAA,GACAC,YAAA,GACAnE,MAAA,IAEAoE,EAAA,CACAC,oBAAA,GACAC,YAAA,GACAC,UAAA,GACAC,MAAA,IAKAC,GAAA,EACAC,EAAA,GAIA,MAAAC,EAAAlQ,SAAAC,cAAA,kBAGAkQ,EAAAnQ,SAAAC,cAAA,UACAmQ,EAAApQ,SAAAC,cAAA,cACAoQ,EAAArQ,SAAAC,cAAA,gBACAqQ,EAAAtQ,SAAAC,cAAA,gBACAsQ,EAAAvQ,SAAAC,cAAA,iBACAuQ,EAAAxQ,SAAAC,cAAA,gBAGAwQ,EAAAzQ,SAAAC,cAAA,mBACAyQ,EAAA1Q,SAAAC,cAAA,oBAGA0Q,EAAA3Q,SAAAC,cAAA,UACA2Q,EAAA5Q,SAAAC,cAAA,UAGA4Q,EAAA7Q,SAAAC,cAAA,mBACA6Q,EAAA9Q,SAAAC,cAAA,mBACA8Q,EAAA/Q,SAAAC,cAAA,oBACA+Q,EAAAhR,SAAAC,cAAA,sBACAgR,EAAAjR,SAAAC,cAAA,kBAGAiR,EAAAlR,SAAAC,cAAA,oBACAkR,EAAAnR,SAAAC,cAAA,mBACAmR,EAAApR,SAAAC,cAAA,sBAGAoR,EAAArR,SAAAC,cAAA,iBAyFAS,eAAA4Q,IAEA,IACA,MAAAjQ,QAAAC,MAAAmB,SAAAC,OAAA,qBACA6O,QAAAlQ,EAAAO,OAEAyP,EAAA7P,MAAA+P,EAEA,MAAA1P,KA6SA,SAAA2P,IACA1Q,EAAA,mBACA2Q,IAAA,KAAAC,QAAA,kBACAb,EAAArP,MAAA,GACAsP,EAAAtP,MAAA,GACAuP,EAAAvP,MAAA,GACAwP,EAAAxP,MAAA,GACAyP,EAAAzP,MAAA,GA6BA,SAAAmQ,IACA,MAAAC,EAAA5R,SAAAC,cAAA,oBAuXA,SAAAuM,GACA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAxXAd,CAAAiG,GACA3B,EAAArE,QAAAuD,IACA,MAAA7O,GAAAA,EAAAqI,OAAAA,EAAA+B,aAAAA,EAAA8E,SAAAA,EAAAE,YAAAA,EAAAnE,MAAAA,GAAA4D,EAEA0C,EAAA7R,SAAA8L,cAAA,OACA+F,EAAAC,UAAAC,IAAA,MAAA,QACAF,EAAAvL,QAAAqG,WAAArM,EAIA,MAAA0R,EAAAhS,SAAA8L,cAAA,OACAkG,EAAAF,UAAAC,IAAA,YAEA,MAAAE,EAAAjS,SAAA8L,cAAA,OACAmG,EAAAH,UAAAC,IAAA,cAAA,QAEA,MAAAG,EAAAlS,SAAA8L,cAAA,OACAoG,EAAAJ,UAAAC,IAAA,uBAGAG,EAAAC,UAAA,2GACAD,EAAAE,QAAA,KA+RA,IAAAC,EAAAA,EA7RA/R,EA+RA2P,EAAAA,EAAAqC,OAAAnD,GACAA,EAAA7O,IAAA+R,GAGAV,KAhSA,MAAAY,EAAAvS,SAAA8L,cAAA,SACAyG,EAAA1P,KAAA,OACA0P,EAAAT,UAAAC,IAAA,gBACAQ,EAAAC,UAAA,EACAD,EAAA/Q,MAAAmH,EACA4J,EAAAjM,QAAAqG,WAAArM,EAGA2R,EAAAjG,YAAAkG,GACAD,EAAAjG,YAAAuG,GACAP,EAAAhG,YAAAiG,GAIA,MAAAQ,EAAAzS,SAAA8L,cAAA,OACA2G,EAAAX,UAAAC,IAAA,YAEA,MAAAW,EAAA1S,SAAA8L,cAAA,OACA4G,EAAAZ,UAAAC,IAAA,cAAA,QAEA,MAAAY,EAAA3S,SAAA8L,cAAA,OACA6G,EAAAb,UAAAC,IAAA,uBAEAY,EAAArM,QAAAqG,WAAArM,EACAqS,EAAAR,UAAA,+FAIA,MAAAS,EAAA5S,SAAA8L,cAAA,SACA8G,EAAA/P,KAAA,SACA+P,EAAAd,UAAAC,IAAA,gBAGAa,EAAApR,MAAAgO,EAGAF,GAAAhP,GAAA,GAAA0P,GAMA5M,YAAA,WACAwP,EAAAC,UACA,GAIAD,EAAAE,QAAA,WAEArR,WAAAmR,EAAApR,OAAAC,WAAA8J,IACA5E,KAAAC,KAAA,CACAC,KAAA,UACAkM,KAAA,6BAGAC,EAAAzH,EAAAjL,GAAA,IAEA0S,EAAAJ,EAAApR,MAAAlB,GAAA,IAMAoS,EAAA1G,YAAA2G,GACAD,EAAA1G,YAAA4G,GACAH,EAAAzG,YAAA0G,GAIA,MAAAO,EAAAjT,SAAA8L,cAAA,OACAmH,EAAAnB,UAAAC,IAAA,YAEA,MAAAmB,EAAAlT,SAAA8L,cAAA,OACAoH,EAAApB,UAAAC,IAAA,cAAA,QAEA,MAAAoB,EAAAnT,SAAA8L,cAAA,OACAqH,EAAArB,UAAAC,IAAA,uBAGAoB,EAAAhB,UAAA,mGAEA,MAAAiB,EAAApT,SAAA8L,cAAA,SACAsH,EAAAvQ,KAAA,OACAuQ,EAAAtB,UAAAC,IAAA,gBACAqB,EAAA5R,MAAAC,WAAAiJ,GAAAhJ,eAAA,MAGA4N,GAAAhP,GAAA,GAAA0P,GAMA5M,YAAA,WACAgQ,EAAAP,UACA,GAGAO,EAAAN,QAAA,KAEA,MAAAO,EAAA5O,EAAA2O,EAAA5R,OACA4R,EAAA5R,MAAA6R,EACAL,EAAAI,EAAA5R,MAAAlB,GAAA,IAEA8S,EAAAP,QAEAK,EAAAlH,YAAAmH,GACAD,EAAAlH,YAAAoH,GACAH,EAAAjH,YAAAkH,GAGA,MAAAI,EAAAtT,SAAA8L,cAAA,OACAwH,EAAAxB,UAAAC,IAAA,YAEA,MAAAwB,EAAAvT,SAAA8L,cAAA,OACAyH,EAAAzB,UAAAC,IAAA,cAAA,QAEA,MAAAyB,EAAAxT,SAAA8L,cAAA,OACA0H,EAAA1B,UAAAC,IAAA,uBAEAyB,EAAAlN,QAAAqG,WAAArM,EACAkT,EAAArB,UAAA,mGAEA,MAAAsB,EAAAzT,SAAA8L,cAAA,SACA2H,EAAA5Q,KAAA,OACA4Q,EAAAjB,UAAA,EACAiB,EAAA3B,UAAAC,IAAA,gBACA0B,EAAAjS,MAAAC,WAAAiO,GAAAhO,eAAA,MAGA6R,EAAAvH,YAAAwH,GACAD,EAAAvH,YAAAyH,GACAH,EAAAtH,YAAAuH,GAIA1B,EAAA7F,YAAAgG,GACAH,EAAA7F,YAAAyG,GACAZ,EAAA7F,YAAAiH,GACApB,EAAA7F,YAAAsH,GAGA1B,EAAA5F,YAAA6F,GAGA6B,MAeA,WAEA,IAAAC,EAAA,EACA9D,EAAA,EACA+D,EAAA,EACA3D,EAAArE,QAAAuD,IAEAwE,GAAAxE,EAAAK,SAAAL,EAAAM,gBACAI,GAAAV,EAAAK,SAAAL,EAAAzE,aACAkJ,GAAAzE,EAAAK,SAAAL,EAAA7E,gBAGA,MAAAwF,EAAA,IAAA,IAAAD,EAAA8D,EACAvD,EAAA5O,MAAAgD,MAAAqP,OAAA/D,EAAAlF,QAAA,KAAA,KAAAiJ,OAAA/D,EAAAlF,QAAA,IAAA,IACAuF,EAAA3O,MAAAmS,EAAAjS,eAAA,MACA2O,EAAA7O,MAAAqO,EAAAnO,eAAA,MAGAiO,EAAAC,oBAAA+D,EACAhE,EAAAE,YAAAA,EACAF,EAAAG,UAAAtL,MAAAqP,OAAA/D,EAAAlF,QAAA,KAAA,EAAAiJ,OAAA/D,EAAAlF,QAAA,IACA+E,EAAAI,MAAA6D,EA/BAE,GAIA,SAAAJ,IACAjD,EAAAjP,MAAA,GACAkP,EAAAlP,MAAA,GACAmP,EAAAnP,MAAA,GACAoP,EAAApP,MAAAmO,EAAAE,YAAAnO,eAAA,MA0DA,SAAAsR,EAAAe,EAAAzT,EAAA0T,GAEA,GADA1E,EAAAhP,EACA0T,EACAhE,GAAA,EACAC,EAAAA,EAAAgE,IAAA9E,GACAA,EAAA7O,IAAAA,GAEAyT,EAAA,IAEAA,EAAA,GAEA,IACA5E,EACAK,SAAAuE,EACArE,YAAAqE,EAAA5E,EAAAzE,eAIAyE,OAGA,CAEAa,GAAA,EACA,IAAAqD,EAAA5R,WAAAsS,EAAAxP,QAAA,KAAA,KACA0L,EAAAA,EAAAgE,IAAA9E,GACAA,EAAA7O,IAAAA,GACA,IAAAyT,IAEAA,EAAA,GAGAvP,MAAA6O,EAAAlE,EAAAK,UAWA,IACAL,EACAzE,aAAA,EACAgF,YAAA,GAZA,IACAP,EACAzE,aAAA2I,EACA3D,YAAA2D,EAAAlE,EAAAK,WAgBAL,GAMAwC,IA+DA,SAAAlN,EAAAJ,GAEA,IAAAC,EAAA7C,WAAA4C,EAAAE,QAAA,KAAA,KACAC,MAAAF,KACAA,EAAA,IAGA,OADAA,EAAA5C,eAAA,MAQA,SAAAlB,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,UA1sBA,WACA,MAAAyT,EAAA,IAAAC,IAAAzG,OAAAjL,UACA2R,EAAA,IAAAC,gBAAAH,EAAAzO,QACA,GAAA2O,EAAAE,MACAjF,EAAAkF,KAAAH,EAAAI,IAAA,OASA9T,iBACA,MAAA8B,EAAA,GAAAC,SAAAC,uBAAA2M,IACA,IACA,MAAAhO,QAAAC,MAAAkB,IAOA,SAAAjB,GAEA,MAAAkT,EAAAlT,EAAAmT,gBACAC,EAAApT,EAAAoT,MACAtD,EAAA7P,MAAAmT,EAAAvJ,OAGA,IAAAwE,EAAA,EAEA6E,EAAA7I,QAAAgJ,IACArF,EAAA,CACAjP,GAAAsU,EAAAtU,GACAqI,OAAAiM,EAAAjM,OACA6G,SAAAoF,EAAApF,SACAlF,cAAAsK,EAAAtK,cACAI,aAAAkK,EAAAC,OACApF,gBAAAmF,EAAAlK,aACAgF,YAAAkF,EAAAC,OAAAD,EAAApF,SACAjE,MAAA9J,WAAAmT,EAAArJ,OAAA9J,WAAAmT,EAAApF,WAGAI,EAAAnO,WAAAmO,GAAAnO,WAAAmT,EAAAlK,cAAAkK,EAAApF,SACAS,EAAA6E,KAAAvF,KAYAoC,IAEAxB,EAAA3O,MAAAoO,EAAAlO,eAAA,MACA0O,EAAA5O,MAAAD,EAAAoT,MAAA7E,UAAA,IACAO,EAAA7O,MAAAC,WAAAF,EAAAoT,MAAAI,SAAArT,eAAA,OAEA,IAAAiT,EAAAK,gBAAA,IAAAL,EAAAM,gBAAA,IAAAN,EAAAO,iBAAA,IAAAP,EAAAQ,mBAAAC,MAAAT,EAAAhM,UACAyI,EAAAU,UAAArR,OAAA,UACAoQ,EAAArP,MAAAmT,EAAAK,eACAlE,EAAAtP,MAAAmT,EAAAM,eACAlE,EAAAvP,MAAAmT,EAAAO,gBACAlE,EAAAxP,MAAAmT,EAAAQ,kBACAlE,EAAAzP,MAAAmT,EAAAU,eAnDAC,OADAjU,EAAAO,QAEA,MAAAC,KAdA0T,IAIAjE,IA9GAkE,GAIAtF,EAAA/L,iBAAA,SAAA,YA2KA,WAEA,GAAA,GAAA8L,EAAAwF,OAOA,YANA9O,KAAAC,KAAA,CACAC,KAAA,QAEAkM,KAAA,4CAMA,GAAA,GAAAzC,EAAA9O,OACA,GAAAuN,eAAAvN,MAOA,YANAmF,KAAAC,KAAA,CACAC,KAAA,QAEAkM,KAAA,+FAYArS,iBAEA,MAAA2B,EAAA,IAAAC,SACA+M,GACAhN,EAAAE,OAAA,KAAA8M,GAEAhN,EAAAE,OAAA,iBAAAmT,KAAAC,UAAA1F,IACA5N,EAAAE,OAAA,QAAAoN,EAAAE,aAEAxN,EAAAE,OAAA,QAAAoN,EAAAI,OACA1N,EAAAE,OAAA,YAAAoN,EAAAG,WACAzN,EAAAE,OAAA,cAAA+N,EAAA9O,OACA,GAAA8O,EAAA9O,OACAoU,YAAA,EACA,IAAAjF,EAAAnP,QACAoU,YAAAjF,EAAAnP,OAEAa,EAAAE,OAAA,QAAAqT,aACAvT,EAAAE,OAAA,QAAAqO,EAAApP,OACAa,EAAAE,OAAA,aAAAwM,eAAAvN,OACAa,EAAAE,OAAA,UAAAqT,aACAnU,WAAAmU,aAAAnU,WAAAkO,EAAAE,aACAxN,EAAAE,OAAA,SAAA,GAEAF,EAAAE,OAAA,SAAA,KAIAF,EAAAE,OAAA,SAAA,GACAF,EAAAE,OAAA,UAAAoN,EAAAE,cAeA,IAAArN,EAVAH,EAAAE,OAAA,iBAAAsO,EAAArP,OACAa,EAAAE,OAAA,iBAAAuO,EAAAtP,OACAa,EAAAE,OAAA,kBAAAwO,EAAAvP,OACAa,EAAAE,OAAA,oBAAAyO,EAAAxP,OACAa,EAAAE,OAAA,gBAAA0O,EAAAzP,OAQAgB,EADA6M,EACA5M,SAAAC,OAAA,oBAEAD,SAAAC,OAAA,mBAGAwN,EAAArP,UAAA,EACA,IAEA,MAAAQ,QAAAC,MAAAkB,EAAA,CACAI,OAAA,OACAD,KAAAN,IAEAd,QAAAF,EAAAO,OACAE,QAAAC,IAAAR,GAEAf,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAKAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAKAiN,EAAArP,UAAA,EAYA,WACAwO,EAAA,KACAY,EAAA,GACAV,EAAA,CACAjP,GAAA,GACAqI,OAAA,GACA6G,SAAA,GACAlF,cAAA,GACAI,aAAA,GAEA+E,gBAAA,GACAC,YAAA,GACAnE,MAAA,IAEAoE,EAAA,CACAC,oBAAA,GACAC,YAAA,GACAC,UAAA,GACAC,MAAA,IAKA,MAAAb,EAAApO,EAAA,oBAEAiO,EAAAjO,EAAA,mBAEAoO,EAAAuC,IAAA,KAAAC,QAAA,kBAEA3C,EAAA0C,IAAA,KAAAC,QAAA,kBAGApB,EAAA6B,UAAA,sIAKA1B,EAAAjP,MAAA,GACAkP,EAAAlP,MAAA,GACA4P,EAAAU,UAAA+D,SAAA,WACAzE,EAAAU,UAAAC,IAAA,UAGAT,IACAE,IACAG,IAxDAmE,IAEA1S,WAAA,KACA5C,KACA,KACA,MAAAqB,KA3FAkU,GApMAC,MAGA1F,EAAAnM,iBAAA,UAAA,WAEAiN,EAAAU,UAAA+D,SAAA,WACAzE,EAAAU,UAAArR,OAAA,UAEA8P,EAAAuB,UAAA+D,SAAA,WACAtF,EAAAuB,UAAArR,OAAA,UAEA+P,EAAAsB,UAAA+D,SAAA,WACArF,EAAAsB,UAAArR,OAAA,UAKA,GAAA6P,EAAA9O,OAEAmP,EAAAnP,MAAA,GACAoP,EAAApP,MAAAmO,EAAAE,YAAAnO,eAAA,MACA8P,IACAX,EAAA2B,UAAA,EACA1B,EAAA0B,UAAA,EACAzB,EAAAyB,UAAA,EACAxB,EAAAwB,UAAA,EACAvB,EAAAuB,UAAA,EACArB,EAAAtQ,UAAA,EACA0P,EAAAuB,UAAAC,IAAA,YAIAlB,EAAA2B,UAAA,EACA1B,EAAA0B,UAAA,EACAzB,EAAAyB,UAAA,EACAxB,EAAAwB,UAAA,EACAvB,EAAAuB,UAAA,EACArB,EAAAtQ,UAAA,EACAuQ,EAAAU,UAAAC,IAAA,UACAvB,EAAAsB,UAAAC,IAAA,cAQAb,EAAA/M,iBAAA,SAAA,WAEAiN,EAAAU,UAAA+D,SAAA,WAEAzE,EAAAU,UAAArR,OAAA,aAIA0Q,EAAAhN,iBAAA,SAAA,WACAqN,IACAJ,EAAAU,UAAAC,IAAA,aAGAtB,EAAAtM,iBAAA,SA4VA,SAAAC,GACAqM,EAAAjP,MAAAiD,EAAAL,EAAAM,OAAAlD,OACA,MACAyU,EADAxU,WAAAgP,EAAA,MAAAlM,QAAA,KAAA,KACAoL,EAAAE,YACAa,EAAAlP,MAAAyU,EAAAvU,eAAA,SA9VAiP,EAAAxM,iBAAA,SAiWA,SAAAC,GAEAuM,EAAAnP,MAAAiD,EAAAL,EAAAM,OAAAlD,OACA,MAAAoU,EAAAnU,WAAAkP,EAAA,MAAApM,QAAA,KAAA,KACA2R,EAAAvG,EAAAE,YAAA+F,EACAhF,EAAApP,MAAA0U,EAAAxU,eAAA,SApWA2O,EAAAlM,iBAAA,SAkkBA,SAAAC,GACA,GAAA,GAAA6L,EAAAwF,OAEA,YADApF,EAAA7O,MAAA,GAIA6O,EAAA7O,MAAAiD,EAAAL,EAAAM,OAAAlD,OACA,MAAAqO,EAAApO,WAAA4O,EAAA,MAAA9L,QAAA,KAAA,KAEA,IAAAoP,EAAA,EACA1D,EAAArE,QAAAuD,IACAwE,GAAAxE,EAAAK,SAAAL,EAAAM,kBAGA,MAAAK,EAAA,IAAA,IAAAD,EAAA8D,EAEAvD,EAAA5O,MAAAgD,MAAAqP,OAAA/D,EAAAlF,QAAA,KAAA,KAAAiJ,OAAA/D,EAAAlF,QAAA,IAAA,IAIA+E,EAAAE,YAAAA,EACAF,EAAAG,UAAAA,EAEA4D,OAvlBA5S,EAAA,oBAAAsF,GAAA,kBAAA,SAAAhC,IAwqBA1D,eAAAJ,GAEA,IACA,MAAAe,QAAAC,MAAA,GAAAmB,SAAAC,0BAAApC,KACAiB,QAAAF,EAAAO,OAGA,GAAAL,EAAAgK,MAAA,EAAA,CACA,MAAAjL,GAAAA,EAAAqI,OAAAA,EAAA+B,aAAAA,EAAAa,MAAAA,EAAAjB,cAAAA,GAAA/I,EACAgO,EAAA,CACAjP,GAAAA,EACAqI,OAAAA,EACA6G,SAAA,EACAlF,cAAAA,EACAI,aAAAA,EACA+E,gBAAAhO,WAAAiJ,GACAgF,YAAAhF,EACAa,MAAAA,GAGA0E,EAAAkG,KAAAhH,GAAAA,EAAA7O,IAAAA,GAMAqG,KAAAC,KAAA,CACAC,KAAA,UAEAkM,KAAA,mDANA9C,EAAA6E,KAAAvF,GACAoC,UAUAhL,KAAAC,KAAA,CACAC,KAAA,QAEAkM,KAAA,yCAKA,MAAAlR,KAhtBAuU,CAAAhS,EAAAM,OAAAlD,UAEAV,EAAA,mBAAAsF,GAAA,kBAAA,SAAAhC,GACA,GAAAA,EAAAM,OAAAlD,MAiRAd,eAAAJ,GAGA,IACA,MAAAe,QAAAC,MAAA,GAAAmB,SAAAC,yBAAApC,KACAiB,QAAAF,EAAAO,OAIApB,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAMAG,WAAA,KACA5C,KACA,KAaA6I,EAVA9H,EAYAsP,EAAArP,MAAA6H,EAAAV,QAAA,GACAmI,EAAAtP,MAAA6H,EAAAT,QAAA,GACAmI,EAAAvP,MAAA6H,EAAAR,SAAA,GACAmI,EAAAxP,MAAA6H,EAAAP,WAAA,GACAmI,EAAAzP,MAAA6H,EAAAN,OAAA,IAbA,MAAAlH,IAOA,IAAAwH,EApTAgN,CAAAjS,EAAAM,OAAAlD,OAEAgQ,QA/IA,GCAA,WAEA,GADAxR,SAAAC,cAAA,WACA,CACA,IAAAqW,EA0GA,SAAA9V,IACAR,SAAAC,cAAA,6BACAD,SAAAC,cAAA,4BAAAQ,SA1GAK,EAAA,UAAAsF,GAAA,QAAA,WAAA,SAAAhC,GACA9D,GAAA8D,EAAAiC,cAAAC,QAAA+I,QACA,MAAAkH,EAAAjW,GAAAkW,WAEA9I,OAAAjL,SAAA,mBAAAgU,KAAAF,MAGAzV,EAAA,UAAAsF,GAAA,QAAA,aAAA,SAAAhC,IAKA,SAAA9D,EAAA8D,GAEA,MAAAsS,EAAAtS,EAAAiC,cAAAG,cAAAA,cAAAA,cAAAC,WAAA,GAAAC,YAGAC,KAAAC,KAAA,CACAC,KAAA,UACAC,KAAA,wFAAA4P,6DAEA3P,kBAAA,EACAC,kBAAA,WACAC,iBAAA,aAGAC,KAAAC,IACAA,EAAAC,aAMA1G,eAAAJ,GACA,MAAA+B,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAjC,GAEAkC,IAAAC,SAAAC,OAAA,sBACA,IACA,MAAArB,QAAAC,MAAAkB,IAAA,CACAG,KAAAN,EACAO,OAAA,SAEArB,QAAAF,EAAAO,OACAE,QAAAC,IAAAR,GAGAf,IAEA,SAAAe,EAAAsB,KACA/B,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,YACAC,MAAA,QAEAL,KAAApB,EAAA0B,OAIAnC,EAAAd,UAAA8C,OAAA,SAAA,CACAC,MAAA,sBACAC,MAAA,aAEAL,KAAApB,EAAA0B,MAGAG,WAAA,KACA5C,KACA,KAGA8V,EAAApT,KAAAC,UAEA,MAAAtB,KA5CA8U,CAAArW,KAnBAuM,CADAzI,EAAAiC,cAAAC,QAAA+I,QACAjL,MAuEAtD,EAAA,UAAA6D,YAAAC,YAEA0R,EAAAxV,EAAA,UAAA+D,UAAA,CACA3B,KAAA,cACA8C,aAAA,EACAC,UAAA,EACAC,YAAA,EACAC,YAAA,KA5FA","file":"bundle.js","sourcesContent":["(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                    required: true,\r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                    required: true,\r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                    required: \"El númer de cédula es obligaotrio\",\r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                    required: \"El número de celular es obligatorio\",\r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                    required: true,\r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                direccion:{\r\n                    required:true\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                celular: {\r\n                    required: \"El número de celular es obligatorio\",\r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                },\r\n                direccion: {\r\n                    required: \"La dirección es Requerida\"\r\n                 \r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true,\r\n                  email: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El email es obligatorio\",\r\n                  email: \"El email no es válido\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaUsuarios, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true,\r\n                  email: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El email es obligatorio\",\r\n                  email: \"El email no es válido\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if(seccionCrearVentas){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function(){\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if(seccionCrearVentas){\r\n        let tablaProductos;\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n\r\n        consultarProductos();\r\n\r\n        async function consultarProductos(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n                  \r\n                   \r\n                    selectProductos.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n        let ventaId;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra:'',\r\n            precio_venta: '',\r\n        \r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj={\r\n            total_sin_descuento:'',\r\n            total_pagar:'',\r\n            descuento:'',\r\n            costo:''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n  \r\n\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n        \r\n \r\n        const totalInput = document.querySelector('#total');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        leerDatosUrl();\r\n    \r\n       \r\n\r\n        guardarVentaBtn.addEventListener('click', function(){\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n  \r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if(pagoContado.classList.contains('d-none')){\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if(pagoCuotas.classList.contains('d-none')){\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n            \r\n\r\n\r\n            if (medotodoPago.value == 2) {\r\n               \r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n                \r\n            } else {\r\n                \r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n                \r\n\r\n\r\n            }\r\n        })\r\n\r\n       \r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n                \r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n\r\n\r\n        });\r\n   \r\n\r\n        async function cargarCodigoVenta(){\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n            \r\n                codigoVenta.value = codigo_venta;\r\n                \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl(){\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if(params.size==1){\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n                \r\n                \r\n            }else{\r\n                cargarCodigoVenta()\r\n            }\r\n            \r\n        }\r\n        async function consultarVenta(){\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function llenarInformacion(resultado){\r\n         \r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta=>{\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre:  productoVenta.nombre,\r\n                    cantidad:  productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta:  productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio*productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock)+parseFloat(productoVenta.cantidad)\r\n                    \r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) +  parseFloat(productoVenta.precio_venta)*productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n       \r\n    \r\n            // }\r\n            mostrarProductos();\r\n            \r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento+\"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.recaudo).toLocaleString('en');\r\n           \r\n            if(venta.nombre_cliente!='' || venta.cedula_cliente!='' || venta.celular_cliente!='' || venta.direccion_cliente!=''  || venta.nombre!=undefined  ){\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n            \r\n        }\r\n    \r\n        function revisarVenta(){\r\n    \r\n            if(productosArray.length==0){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if(medotodoPago.value!=1){\r\n                if(selectClientes.value == 0){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n    \r\n                        text: 'Para las ventas a credito es necesario seleccionar un cliente que se encuentre registrado',\r\n    \r\n                    })\r\n                    return;\r\n                }\r\n             \r\n               \r\n            }\r\n\r\n            enviarInformacion();\r\n          \r\n        }\r\n        async function enviarInformacion(){\r\n       \r\n            const datos = new FormData();\r\n            if(ventaId){\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total', valoresObj.total_pagar);\r\n          \r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if(medotodoPago.value !=1){\r\n                valor_abono = 0;\r\n                if(abono.value!=''){\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if(parseFloat(valor_abono)<parseFloat(valoresObj.total_pagar)){\r\n                    datos.append('estado', 0);\r\n                }else{\r\n                    datos.append('estado', 1);\r\n                }\r\n              \r\n            }else{\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n     \r\n          \r\n           \r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente',direccionCliente.value );\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n  \r\n\r\n          \r\n          \r\n            let url;\r\n            if(ventaId){\r\n                url = `${location.origin}/api/editar-venta`;\r\n            }else{\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n        \r\n            guardarVentaBtn.disabled = true;\r\n            try {\r\n             \r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado);\r\n                // return;\r\n                eliminarToastAnterior();\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                    \r\n                }else{\r\n                    \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    guardarVentaBtn.disabled = false;\r\n                    resetearVentaAnterior();\r\n                }\r\n                  setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior(){\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra:'',\r\n                precio_venta: '',\r\n            \r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj={\r\n                total_sin_descuento:'',\r\n                total_pagar:'',\r\n                descuento:'',\r\n                costo:''\r\n    \r\n    \r\n            }\r\n    \r\n            const  selectProductos = $('#selectProductos');\r\n         \r\n            const  selectClientes = $('#selectClientes');\r\n      \r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n       \r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n      \r\n        \r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n            `\r\n       \r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n      \r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        \r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n    \r\n\r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n               \r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                 \r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n            \r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente){\r\n       \r\n            nombreCliente.value = cliente.nombre??'';\r\n            cedulaCliente.value = cliente.cedula??'';\r\n            celularCliente.value = cliente.celular??'';\r\n            direccionCliente.value = cliente.direccion??'';\r\n            emailCliente.value = cliente.email??'';\r\n        }\r\n\r\n       \r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n     \r\n        \r\n\r\n    \r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n            \r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda =  valoresObj.total_pagar - valor_abono ;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio unitario\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-3');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-3');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            productosArray.forEach(producto => {\r\n                \r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad*producto.precio_compra;\r\n            })\r\n        \r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento =  !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)): 0 ;\r\n            valoresObj.costo = total_costo;\r\n            \r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n           \r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n                     \r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n            const idString = id.toString();\r\n\r\n            window.location = `/crear-venta?id=${btoa(idString)}`;\r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarProducto(ventaId,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado);\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}