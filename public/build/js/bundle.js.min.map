{"version":3,"sources":["cajas/cajas.js","clientes/clientes.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","inicio/index.js","categorias/categorias.js","mercado/infoVenta.js","mercado/mercadolibre.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","proveedores/proveedores.js","productos-ventas/index.js","transacciones/egresos.js","transacciones/ingresos.js","usuarios/login.js","usuarios/usuario.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js"],"names":["document","querySelector","btnAbrirCaja","formulario","btnSubmit","tablaCajas","id","efectivoAperturaInput","eliminarToastAnterior","remove","async","accionesModal","reset","disabled","$","modal","validate","resetForm","destroy","find","removeClass","respuesta","fetch","resultado","value","parseFloat","toLocaleString","llenarFormulario","json","error","console","log","consultarCaja","inicializarValidador","validator","setDefaults","submitHandler","datos","FormData","append","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","rules","efectivo_apertura","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","addEventListener","e","valor","valor_sin_formato","replace","isNaN","formatearValor","target","dataTable","fnDestroy","DataTable","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","deferRender","retrieve","proccesing","responsive","on","currentTarget","dataset","cajaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","event","tablaClientes","btnRegistrarCliente","nombre","cedula","celular","direccion","email","consultarCliente","trim","minlength","digits","rangelength","initComplete","fn","Buttons","buttons","container","appendTo","clienteId","cliente","eliminarCliente","alertaEliminarCliente","selectClientes","opcionDisabled","createElement","appendChild","forEach","opcion","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","consultarInfoCliente","limpiarHtml","fiados","length","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","deudaSinFormat","monto_ingresado","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","ingresos","ganancias","costos","inventario","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","mostrarInfo","cargarInformacion","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","total_factura","metodo_pago","contains","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","tablaProductosVendidos","input_fecha_inicial","input_fecha_final","fecha_actual","Date","fecha_final","getFullYear","getMonth","slice","getDate","setMonth","fecha_inicial","consultarProductosVendidos","dataFilter","data","jsonData","JSON","parse","newJson","row","index","parseInt","existe","indexProducto","stringify","dataType","success","req","resposeText","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","ingresos_totales","total_inventario","fecha_actual_utc","fecha_actual_formateada","getTime","toISOString","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        // const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        // const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        // const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        // const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n      \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            // dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            // dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        let tablaProductosVendidos;\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function () {\r\n    const productos_vendidos = document.querySelector('#productos-vendidos');\r\n    if (productos_vendidos) {\r\n\r\n        let tablaProductosVendidos;\r\n        const input_fecha_inicial = document.querySelector('#fecha-inicial');\r\n        const input_fecha_final = document.querySelector('#fecha-final');\r\n\r\n        const fecha_actual = new Date();\r\n\r\n\r\n        let fecha_final = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n        // Obtener la fecha actual restada un mes\r\n        fecha_actual.setMonth(fecha_actual.getMonth() - 1);\r\n        let fecha_inicial = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n\r\n\r\n        cargarInputs();\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\r\n            input_fecha_inicial.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n            input_fecha_final.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n\r\n            // consultarProductosVendidos();\r\n\r\n        });\r\n\r\n        function cargarInputs() {\r\n            input_fecha_inicial.value = fecha_inicial\r\n            input_fecha_final.value = fecha_final\r\n            consultarProductosVendidos()\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        function consultarProductosVendidos() {\r\n\r\n\r\n            const fechaObjeto_1 = new Date(fecha_inicial);\r\n            const fechaObjeto_2 = new Date(fecha_final);\r\n\r\n            if (fechaObjeto_1 >= fechaObjeto_2) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: \"Error\",\r\n                    text: \"La fecha inicial debe ser menor que la fecha final\",\r\n\r\n                });\r\n                return;\r\n            } else {\r\n                const datos = new FormData();\r\n                datos.append(\"fecha_inicial\", fecha_inicial);\r\n                datos.append(\"fecha_final\", fecha_final);\r\n\r\n                $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n                tablaProductosVendidos = $('#tabla').DataTable({\r\n                    ajax: {\r\n                        url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                        dataFilter: function (data) {\r\n                            const jsonData = JSON.parse(data);\r\n                            let newJson = [];\r\n                            let newArray = [];\r\n                            const datos = jsonData.data;\r\n                            console.log(datos)\r\n                            // Iterar sobre los datos y sumar las cantidades por ID de producto\r\n                            datos.forEach(function (row, index) {\r\n                                let idProducto = row[1]; // Obtener el ID del producto\r\n                                let cantidad = parseInt(row[4]) // Obtener la cantidad (convertida a número)\r\n                                if (newJson.length > 0) {\r\n                                    let existe = false;\r\n                                    newJson.forEach((producto, indexProducto) => {\r\n                                            if(producto[1]==row[1]){\r\n                                                newJson[indexProducto][4] =  parseInt(newJson[indexProducto][4]) + parseInt(row[4]);\r\n                                                newJson[indexProducto][6] = parseInt(newJson[indexProducto][4])*parseInt(newJson[indexProducto][5])\r\n                                                existe = true;\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                    if(existe == false){\r\n                                        newJson.push(row);\r\n                                    }\r\n                                } else {\r\n                                    newJson.push(row);\r\n                                }\r\n\r\n                               \r\n\r\n\r\n\r\n                                // // Sumar la cantidad al total correspondiente al ID de producto\r\n                                // if (sumasPorProducto.hasOwnProperty(idProducto)) {\r\n                                //     sumasPorProducto[idProducto] += cantidad;\r\n                                // } else {\r\n                                //     sumasPorProducto[idProducto] = cantidad;\r\n                                // }\r\n                            });\r\n                            console.log(newJson);\r\n\r\n                            // Crear un nuevo arreglo de datos con los totales por ID de producto\r\n\r\n                            // let nuevosDatos = [];\r\n                            // Object.keys(sumasPorProducto).forEach(function (idProducto) {\r\n                            //     nuevosDatos.push([idProducto, sumasPorProducto[idProducto]]);\r\n                            // });\r\n\r\n\r\n                            // Devolver los datos procesados como una cadena JSON\r\n                            return JSON.stringify({ data: newJson });\r\n                        }\r\n                    },\r\n                    \"deferRender\": true,\r\n                    \"retrieve\": true,\r\n                    \"proccesing\": true,\r\n                    responsive: true,\r\n                    initComplete: function () {\r\n                        // Inicializa los botones después de que la tabla se haya creado\r\n                        var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                            buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                        }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                    }\r\n                });\r\n                // tablaProductosVendidos = $('#tabla').DataTable({\r\n                //     ajax: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                //     \"deferRender\":true,\r\n                //     \"retrieve\":true,\r\n                //     \"proccesing\":true,\r\n                //     responsive:true,\r\n                //     initComplete: function () {\r\n                //         // Inicializa los botones después de que la tabla se haya creado\r\n                //         var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                //             buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                //         }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                //     }\r\n                // });\r\n                $.ajax({\r\n\r\n                    url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n\r\n                    dataType: 'json',\r\n                    success: function (req) {\r\n                         console.log(req)\r\n\r\n                    },\r\n                    error: function (error) {\r\n                        console.log(error.resposeText)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        function calcularNuevoPrecioCompra() {\r\n            precio_compra_nuevo.value = '';\r\n\r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        async function enviarDatosStock() {\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n            btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                btnSubmitNewStock.disabled = false;\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatosStock()\r\n\r\n                }\r\n            });\r\n\r\n            $('#stockForm').validate({\r\n                rules: {\r\n\r\n\r\n                    nuevo_stock: {\r\n                        required: true\r\n                    },\r\n\r\n                    precio_compra_nuevo: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nuevo_stock: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    precio_compra_nuevo: {\r\n                        required: 'la nueva cantidad adquirida es obligatoria'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#stockForm').on('valid', function (event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , (descripcion.value).trim())\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio: '',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n         \r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n\r\n\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"3\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-3');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-1');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n\r\n                inputPrecioLibre.oninput = () => {\r\n\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto => {\r\n                        total_libre = total_libre + producto.precio * producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value = total_libre.toLocaleString('en');\r\n                }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio: parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n  \r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        // const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n        \r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n        \r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos_totales\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.total_inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n    \r\n            revisarPagosAsociados(id);\r\n\r\n      \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n    \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n      \r\n                 const resultado = await respuesta.json();\r\n          \r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}