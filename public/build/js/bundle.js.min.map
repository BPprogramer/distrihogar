{"version":3,"sources":["clientes/clientes.js","cajas/cajas.js","categorias/categorias.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","proveedores/proveedores.js","usuarios/login.js","usuarios/usuario.js","ventas/cargar-productos.js","ventas/crear-ventas.js","ventas/ventas.js"],"names":["document","querySelector","tablaClientes","id","btnRegistrarCliente","formulario","nombre","cedula","celular","direccion","email","accionesModal","reset","btnSubmit","disabled","$","modal","inicializarValidador","async","respuesta","fetch","resultado","value","llenarFormulario","json","error","console","log","consultarCliente","eliminarToastAnterior","remove","validator","setDefaults","submitHandler","datos","FormData","append","trim","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","validate","rules","required","minlength","digits","rangelength","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","addEventListener","on","e","currentTarget","dataset","clienteId","cliente","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCliente","alertaEliminarCliente","event","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","parseFloat","toLocaleString","consultarCaja","efectivo_apertura","valor","valor_sin_formato","replace","isNaN","formatearValor","target","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","codigo","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","limpiarHtml","forEach","opcion","createElement","selected","appendChild","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","select2","theme","llenarSelectProveedores","consultarProducto","referencia","firstChild","removeChild","productoId","eliminarProducto","alertaEliminarProducto","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","idProductoActualizarStock","calcularNuevoPrecioCompra","inicializarValidadorStock","enviarDatosStock","selectClientes","opcionDisabled","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","consultarInfoCliente","fiados","length","text","pagos_cuotas","total_deuda","fiado","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","deudaSinFormat","monto_ingresado","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","selectProductos","consultarProductos","ventaId","idAnterior","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","focusCantidad","productosArray","guardarVentaBtn","totalInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col3Div","group3Div","prepend3Div","inputPrecio","nuevo_precio_venta","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productos_venta","venta","productoVenta","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","metodo_pago","llenarInformacion","consultarVenta","leerDatosUrl","JSON","stringify","valor_abono","contains","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","some","consultarInfoProducto","tablaVentas","idString","toString","btoa","numero_venta","eliminarVenta"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    \r\n    \r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto:0,\r\n            deuda:0,\r\n            saldo:0,\r\n            cliente_id:''\r\n        }\r\n        \r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n        \r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function(){\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input',function(e){\r\n     \r\n            const valor = e.target.value;\r\n          \r\n            let deudaSinFormat =parseFloat(valor.replace(/,/g, ''));\r\n          \r\n            if (deudaSinFormat=='') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n         \r\n          \r\n             monto.value = monto_ingresado;\r\n            \r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n           \r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        function calcularSaldoRestante(){\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if(isNaN(datosDeuda.saldo )){\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$'+parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal(){\r\n        \r\n            formulario.reset();\r\n    \r\n            btnSumitPago.disabled = false;\r\n            if($('#selectClientes').val()!=0){\r\n                $('#modal-pago').modal('show');\r\n                \r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\"+parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                 inicializarValidador();\r\n             \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n            \r\n        }\r\n\r\n     \r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n                \r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n                \r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n                \r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n            \r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo,venta_id, total, recaudo, estado } = fiado;\r\n                if(estado!=0){\r\n                    ventasInpagas.push();\r\n                }\r\n      \r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = ()=>{\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n     \r\n       \r\n       \r\n           \r\n        }\r\n        \r\n        function mostrarInfoFiado(fiado, productos){\r\n          \r\n            \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n           \r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto =>{\r\n                const {nombre, cantidad, precio} = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                 tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio*cantidad)).toLocaleString('en');\r\n\r\n             \r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n        \r\n        }\r\n\r\n        async function consultarInfo(fiado){\r\n            $('#modal-info').modal('show');\r\n          \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);  \r\n                const resultado = await respuesta.json();\r\n                if(resultado.type=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                }else{\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n           \r\n            \r\n                \r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        \r\n        \r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n        \r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n        \r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        \r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function(value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        \r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n        \r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n        \r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaUsuarios, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if(seccionCrearVentas){\r\n        let tablaProductos;\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n\r\n        consultarProductos();\r\n\r\n        async function consultarProductos(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n                  \r\n                   \r\n                    selectProductos.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        leerDatosUrl();\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value == 2) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2) {\r\n                var optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (medotodoPago.value != 1) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total', valoresObj.total_pagar);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio unitario\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-3');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-3');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n            const idString = id.toString();\r\n\r\n            window.location = `/crear-venta?id=${btoa(idString)}`;\r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarProducto(ventaId,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado);\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}