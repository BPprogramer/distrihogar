{"version":3,"sources":["categorias/categorias.js","cajas/cajas.js","clientes/clientes.js","mercado/infoVenta.js","mercado/mercadolibre.js","inicio/index.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","proveedores/proveedores.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","transacciones/egresos.js","transacciones/ingresos.js","usuarios/login.js","usuarios/usuario.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js"],"names":["document","querySelector","tablaCategorias","id","btnRegistrarCategoria","formulario","categoria","accionesModal","reset","btnSubmit","disabled","$","modal","inicializarValidador","async","respuesta","fetch","resultado","value","llenarFormulario","json","error","console","log","consultarCategoria","eliminarToastAnterior","remove","validator","setDefaults","submitHandler","datos","FormData","append","trim","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","validate","rules","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","addEventListener","e","target","toUpperCase","on","currentTarget","dataset","categoriaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCategoria","alertaEliminarCategoria","event","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","parseFloat","toLocaleString","consultarCaja","efectivo_apertura","valor","valor_sin_formato","replace","isNaN","formatearValor","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","tablaClientes","btnRegistrarCliente","nombre","cedula","celular","direccion","email","consultarCliente","minlength","digits","rangelength","clienteId","cliente","eliminarCliente","alertaEliminarCliente","productos_venta","venta","codigoVenta","clienteVenta","fechaVenta","totalVenta","totalVentaSinComision","recaudoVenta","saldoVenta","metodoVenta","estadoVenta","codigo","nombre_cliente","fecha","total_factura","total","recaudo","metodo_pago","classList","contains","estado","add","bodyProductos","referencia","firstChild","removeChild","limpiarHtml","forEach","producto","cantidad","precio","tr","createElement","tdNombre","tdCantidad","tdPrecio","tdSubTotal","appendChild","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","ingresos","ganancias","costos","inventario","ingresos_reales","ganancias_reales","dinero_fiados","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","dinero_mercado_libre","dinero_pendiente_mercado_libre","fiados","mostrarInfo","cargarInformacion","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","opcion","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","select2","theme","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","selectClientes","opcionDisabled","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","consultarInfoCliente","length","text","pagos_cuotas","total_deuda","fiado","venta_id","push","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","eliminarPago","alertaEliminarPago","deudaSinFormat","monto_ingresado","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","dataType","success","req","resposeText","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","JSON","stringify","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","fecha_actual","Date","setMonth","getMonth","fecha_actual_formateada","toISOString","slice","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n            console.log(resultado)\r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n     \r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio:'',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre:''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n     \r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n               \r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function  productoPorCodigo(listadoProductos){\r\n            \r\n            codigoProducto.addEventListener('input',function(e){\r\n                e.preventDefault();\r\n                const productoSeleccionado = listadoProductos.filter(producto =>{\r\n\r\n                    \r\n                    return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                })\r\n                if(productoSeleccionado.length>0){\r\n                \r\n                    consultarInfoProducto(productoSeleccionado[0].id)\r\n                    e.target.value = '';\r\n                }\r\n            })\r\n        }\r\n        \r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n           \r\n\r\n\r\n            if (medotodoPago.value != 1 ) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n          \r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio:productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if(venta.metodo_pago == 2){\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                }else{\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n        \r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n     \r\n          \r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n       \r\n\r\n        \r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"2\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta,precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n            \r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n            \r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                 group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n    \r\n                inputPrecioLibre.oninput = () => {\r\n                   \r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    \r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto=>{\r\n                        total_libre = total_libre +  producto.precio*producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value =   total_libre.toLocaleString('en')            ;\r\n                }\r\n        \r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n             \r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio:parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n               \r\n\r\n\r\n        \r\n                resultado.forEach(cliente => {\r\n              \r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n                      \r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual = new Date();\r\n            fecha_actual.setMonth(fecha_actual.getMonth());\r\n            const fecha_actual_formateada = fecha_actual.toISOString().slice(0,10);\r\n            fecha.value = fecha_actual_formateada\r\n     \r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n    \r\n            revisarPagosAsociados(id);\r\n\r\n      \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n    \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n      \r\n                 const resultado = await respuesta.json();\r\n          \r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}