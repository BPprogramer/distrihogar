{"version":3,"sources":["clientes/clientes.js","fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","categorias/categorias.js","cajas/cajas.js","mercado/infoVenta.js","mercado/mercadolibre.js","inicio/index.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js","proveedores/proveedores.js","transacciones/egresos.js","transacciones/ingresos.js","usuarios/login.js","usuarios/usuario.js"],"names":["document","querySelector","tablaClientes","id","btnRegistrarCliente","formulario","nombre","cedula","celular","direccion","email","accionesModal","reset","btnSubmit","disabled","$","modal","inicializarValidador","async","respuesta","fetch","resultado","value","llenarFormulario","json","error","console","log","consultarCliente","eliminarToastAnterior","remove","validator","setDefaults","submitHandler","datos","FormData","append","trim","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","validate","rules","required","minlength","digits","rangelength","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","addEventListener","on","e","currentTarget","dataset","clienteId","cliente","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCliente","alertaEliminarCliente","event","selectClientes","opcionDisabled","createElement","appendChild","forEach","opcion","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","isNaN","parseFloat","toLocaleString","consultarInfoCliente","limpiarHtml","fiados","length","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","onclick","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","valor","target","deudaSinFormat","replace","monto_ingresado","valor_sin_formato","formatearValor","val","customValidation","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","consultarCaja","efectivo_apertura","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","total_factura","metodo_pago","contains","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","ingresos","ganancias","costos","inventario","ingresos_reales","ganancias_reales","dinero_fiados","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","dinero_mercado_libre","dinero_pendiente_mercado_libre","mostrarInfo","cargarInformacion","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","window","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","productoSeleccionado","productoPorCodigo","consultarProductos","JSON","stringify","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","fecha_actual","Date","setMonth","getMonth","fecha_actual_formateada","toISOString","slice","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","dataType","success","req","resposeText","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","password","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n            console.log(resultado)\r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n     \r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio:'',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre:''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n     \r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n               \r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function  productoPorCodigo(listadoProductos){\r\n            \r\n            codigoProducto.addEventListener('input',function(e){\r\n                e.preventDefault();\r\n                const productoSeleccionado = listadoProductos.filter(producto =>{\r\n\r\n                    \r\n                    return producto.codigo == e.target.value\r\n                })\r\n                if(productoSeleccionado.length>0){\r\n                \r\n                    consultarInfoProducto(productoSeleccionado[0].id)\r\n                    e.target.value = '';\r\n                }\r\n            })\r\n        }\r\n        \r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n           \r\n\r\n\r\n            if (medotodoPago.value != 1 ) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n          \r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio:productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if(venta.metodo_pago == 2){\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                }else{\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n        \r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (medotodoPago.value != 1) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n        \r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n       \r\n\r\n        \r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta,precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n            \r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n            \r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                 group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n    \r\n                inputPrecioLibre.oninput = () => {\r\n                   \r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    \r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto=>{\r\n                        total_libre = total_libre +  producto.precio*producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value =   total_libre.toLocaleString('en')            ;\r\n                }\r\n        \r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n             \r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio:parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n               \r\n\r\n\r\n        \r\n                resultado.forEach(cliente => {\r\n              \r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n                      \r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual = new Date();\r\n            fecha_actual.setMonth(fecha_actual.getMonth());\r\n            const fecha_actual_formateada = fecha_actual.toISOString().slice(0,10);\r\n            fecha.value = fecha_actual_formateada\r\n     \r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            ingresos_reales.textContent = resultado.ingresos_reales\r\n            ganancias_reales.textContent = resultado.ganancias_reales\r\n            dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n\r\n            revisarPagosAsociados(id);\r\n\r\n           \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n                 const resultado = await respuesta.json();\r\n                 console.log(resultado)\r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n"]}